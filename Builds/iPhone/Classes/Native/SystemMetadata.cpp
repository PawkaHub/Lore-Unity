#include "il2cpp-config.h"
#include "class-internals.h"
#include "codegen/il2cpp-codegen.h"
#include <cstring>
#include <string.h>
#include <stdio.h>
#ifndef _MSC_VER
#include <alloca.h>
#else
#include <malloc.h>
#endif
#include <cmath>
#include <limits>
#include <assert.h>
#include "stringLiterals.h"

extern TypeInfo U3CModuleU3E_t4193_il2cpp_TypeInfo;
// <Module>
#include "System_U3CModuleU3E.h"
extern TypeInfo Locale_t4194_il2cpp_TypeInfo;
// Locale
#include "System_Locale.h"
extern TypeInfo MonoTODOAttribute_t4195_il2cpp_TypeInfo;
// System.MonoTODOAttribute
#include "System_System_MonoTODOAttribute.h"
extern TypeInfo GeneratedCodeAttribute_t4196_il2cpp_TypeInfo;
// System.CodeDom.Compiler.GeneratedCodeAttribute
#include "System_System_CodeDom_Compiler_GeneratedCodeAttribute.h"
extern TypeInfo Enumerator_t4492_il2cpp_TypeInfo;
extern TypeInfo LinkedList_1_t4491_il2cpp_TypeInfo;
extern TypeInfo LinkedListNode_1_t4493_il2cpp_TypeInfo;
extern TypeInfo Enumerator_t4495_il2cpp_TypeInfo;
extern TypeInfo Queue_1_t4494_il2cpp_TypeInfo;
extern TypeInfo Enumerator_t4497_il2cpp_TypeInfo;
extern TypeInfo Stack_1_t4496_il2cpp_TypeInfo;
extern TypeInfo HybridDictionary_t4197_il2cpp_TypeInfo;
// System.Collections.Specialized.HybridDictionary
#include "System_System_Collections_Specialized_HybridDictionary.h"
extern TypeInfo DictionaryNode_t4198_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary/DictionaryNode
#include "System_System_Collections_Specialized_ListDictionary_Diction.h"
extern TypeInfo DictionaryNodeEnumerator_t4199_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary/DictionaryNodeEnumerator
#include "System_System_Collections_Specialized_ListDictionary_Diction_0.h"
extern TypeInfo DictionaryNodeCollectionEnumerator_t4201_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary/DictionaryNodeCollection/DictionaryNodeCollectionEnumerator
#include "System_System_Collections_Specialized_ListDictionary_Diction_1.h"
extern TypeInfo DictionaryNodeCollection_t4202_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary/DictionaryNodeCollection
#include "System_System_Collections_Specialized_ListDictionary_Diction_2.h"
extern TypeInfo ListDictionary_t4019_il2cpp_TypeInfo;
// System.Collections.Specialized.ListDictionary
#include "System_System_Collections_Specialized_ListDictionary.h"
extern TypeInfo _Item_t4204_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase/_Item
#include "System_System_Collections_Specialized_NameObjectCollectionBa.h"
extern TypeInfo _KeysEnumerator_t4206_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase/_KeysEnumerator
#include "System_System_Collections_Specialized_NameObjectCollectionBa_0.h"
extern TypeInfo KeysCollection_t4207_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase/KeysCollection
#include "System_System_Collections_Specialized_NameObjectCollectionBa_1.h"
extern TypeInfo NameObjectCollectionBase_t4205_il2cpp_TypeInfo;
// System.Collections.Specialized.NameObjectCollectionBase
#include "System_System_Collections_Specialized_NameObjectCollectionBa_2.h"
extern TypeInfo NameValueCollection_t4210_il2cpp_TypeInfo;
// System.Collections.Specialized.NameValueCollection
#include "System_System_Collections_Specialized_NameValueCollection.h"
extern TypeInfo DefaultValueAttribute_t4170_il2cpp_TypeInfo;
// System.ComponentModel.DefaultValueAttribute
#include "System_System_ComponentModel_DefaultValueAttribute.h"
extern TypeInfo EditorBrowsableAttribute_t2764_il2cpp_TypeInfo;
// System.ComponentModel.EditorBrowsableAttribute
#include "System_System_ComponentModel_EditorBrowsableAttribute.h"
extern TypeInfo EditorBrowsableState_t4211_il2cpp_TypeInfo;
// System.ComponentModel.EditorBrowsableState
#include "System_System_ComponentModel_EditorBrowsableState.h"
extern TypeInfo INotifyPropertyChanged_t3067_il2cpp_TypeInfo;
extern TypeInfo PropertyChangedEventArgs_t2088_il2cpp_TypeInfo;
// System.ComponentModel.PropertyChangedEventArgs
#include "System_System_ComponentModel_PropertyChangedEventArgs.h"
extern TypeInfo TypeConverter_t4212_il2cpp_TypeInfo;
// System.ComponentModel.TypeConverter
#include "System_System_ComponentModel_TypeConverter.h"
extern TypeInfo TypeConverterAttribute_t4213_il2cpp_TypeInfo;
// System.ComponentModel.TypeConverterAttribute
#include "System_System_ComponentModel_TypeConverterAttribute.h"
extern TypeInfo Win32Exception_t4214_il2cpp_TypeInfo;
// System.ComponentModel.Win32Exception
#include "System_System_ComponentModel_Win32Exception.h"
extern TypeInfo Debug_t4216_il2cpp_TypeInfo;
// System.Diagnostics.Debug
#include "System_System_Diagnostics_Debug.h"
extern TypeInfo Stopwatch_t495_il2cpp_TypeInfo;
// System.Diagnostics.Stopwatch
#include "System_System_Diagnostics_Stopwatch.h"
extern TypeInfo CompressionMode_t4217_il2cpp_TypeInfo;
// System.IO.Compression.CompressionMode
#include "System_System_IO_Compression_CompressionMode.h"
extern TypeInfo UnmanagedReadOrWrite_t4218_il2cpp_TypeInfo;
// System.IO.Compression.DeflateStream/UnmanagedReadOrWrite
#include "System_System_IO_Compression_DeflateStream_UnmanagedReadOrWr.h"
extern TypeInfo ReadMethod_t4219_il2cpp_TypeInfo;
// System.IO.Compression.DeflateStream/ReadMethod
#include "System_System_IO_Compression_DeflateStream_ReadMethod.h"
extern TypeInfo WriteMethod_t4220_il2cpp_TypeInfo;
// System.IO.Compression.DeflateStream/WriteMethod
#include "System_System_IO_Compression_DeflateStream_WriteMethod.h"
extern TypeInfo DeflateStream_t4221_il2cpp_TypeInfo;
// System.IO.Compression.DeflateStream
#include "System_System_IO_Compression_DeflateStream.h"
extern TypeInfo GZipStream_t4223_il2cpp_TypeInfo;
// System.IO.Compression.GZipStream
#include "System_System_IO_Compression_GZipStream.h"
extern TypeInfo AuthenticatedStream_t4224_il2cpp_TypeInfo;
// System.Net.Security.AuthenticatedStream
#include "System_System_Net_Security_AuthenticatedStream.h"
extern TypeInfo AuthenticationLevel_t4225_il2cpp_TypeInfo;
// System.Net.Security.AuthenticationLevel
#include "System_System_Net_Security_AuthenticationLevel.h"
extern TypeInfo SslPolicyErrors_t4226_il2cpp_TypeInfo;
// System.Net.Security.SslPolicyErrors
#include "System_System_Net_Security_SslPolicyErrors.h"
extern TypeInfo U3CBeginAuthenticateAsClientU3Ec__AnonStorey7_t4229_il2cpp_TypeInfo;
// System.Net.Security.SslStream/<BeginAuthenticateAsClient>c__AnonStorey7
#include "System_System_Net_Security_SslStream_U3CBeginAuthenticateAsC.h"
extern TypeInfo SslStream_t4228_il2cpp_TypeInfo;
// System.Net.Security.SslStream
#include "System_System_Net_Security_SslStream.h"
extern TypeInfo AddressFamily_t4233_il2cpp_TypeInfo;
// System.Net.Sockets.AddressFamily
#include "System_System_Net_Sockets_AddressFamily.h"
extern TypeInfo LingerOption_t4234_il2cpp_TypeInfo;
// System.Net.Sockets.LingerOption
#include "System_System_Net_Sockets_LingerOption.h"
extern TypeInfo MulticastOption_t4235_il2cpp_TypeInfo;
// System.Net.Sockets.MulticastOption
#include "System_System_Net_Sockets_MulticastOption.h"
extern TypeInfo NetworkStream_t4237_il2cpp_TypeInfo;
// System.Net.Sockets.NetworkStream
#include "System_System_Net_Sockets_NetworkStream.h"
extern TypeInfo ProtocolType_t4238_il2cpp_TypeInfo;
// System.Net.Sockets.ProtocolType
#include "System_System_Net_Sockets_ProtocolType.h"
extern TypeInfo SelectMode_t4239_il2cpp_TypeInfo;
// System.Net.Sockets.SelectMode
#include "System_System_Net_Sockets_SelectMode.h"
extern TypeInfo SocketOperation_t4240_il2cpp_TypeInfo;
// System.Net.Sockets.Socket/SocketOperation
#include "System_System_Net_Sockets_Socket_SocketOperation.h"
extern TypeInfo SocketAsyncResult_t4244_il2cpp_TypeInfo;
// System.Net.Sockets.Socket/SocketAsyncResult
#include "System_System_Net_Sockets_Socket_SocketAsyncResult.h"
extern TypeInfo Worker_t4245_il2cpp_TypeInfo;
// System.Net.Sockets.Socket/Worker
#include "System_System_Net_Sockets_Socket_Worker.h"
extern TypeInfo SocketAsyncCall_t4246_il2cpp_TypeInfo;
// System.Net.Sockets.Socket/SocketAsyncCall
#include "System_System_Net_Sockets_Socket_SocketAsyncCall.h"
extern TypeInfo Socket_t4236_il2cpp_TypeInfo;
// System.Net.Sockets.Socket
#include "System_System_Net_Sockets_Socket.h"
extern TypeInfo SocketError_t4247_il2cpp_TypeInfo;
// System.Net.Sockets.SocketError
#include "System_System_Net_Sockets_SocketError.h"
extern TypeInfo SocketException_t4248_il2cpp_TypeInfo;
// System.Net.Sockets.SocketException
#include "System_System_Net_Sockets_SocketException.h"
extern TypeInfo SocketFlags_t4249_il2cpp_TypeInfo;
// System.Net.Sockets.SocketFlags
#include "System_System_Net_Sockets_SocketFlags.h"
extern TypeInfo SocketOptionLevel_t4250_il2cpp_TypeInfo;
// System.Net.Sockets.SocketOptionLevel
#include "System_System_Net_Sockets_SocketOptionLevel.h"
extern TypeInfo SocketOptionName_t4251_il2cpp_TypeInfo;
// System.Net.Sockets.SocketOptionName
#include "System_System_Net_Sockets_SocketOptionName.h"
extern TypeInfo SocketShutdown_t4252_il2cpp_TypeInfo;
// System.Net.Sockets.SocketShutdown
#include "System_System_Net_Sockets_SocketShutdown.h"
extern TypeInfo SocketType_t4253_il2cpp_TypeInfo;
// System.Net.Sockets.SocketType
#include "System_System_Net_Sockets_SocketType.h"
extern TypeInfo AuthenticationManager_t4255_il2cpp_TypeInfo;
// System.Net.AuthenticationManager
#include "System_System_Net_AuthenticationManager.h"
extern TypeInfo Authorization_t4257_il2cpp_TypeInfo;
// System.Net.Authorization
#include "System_System_Net_Authorization.h"
extern TypeInfo BasicClient_t4258_il2cpp_TypeInfo;
// System.Net.BasicClient
#include "System_System_Net_BasicClient.h"
extern TypeInfo State_t4259_il2cpp_TypeInfo;
// System.Net.ChunkStream/State
#include "System_System_Net_ChunkStream_State.h"
extern TypeInfo Chunk_t4260_il2cpp_TypeInfo;
// System.Net.ChunkStream/Chunk
#include "System_System_Net_ChunkStream_Chunk.h"
extern TypeInfo ChunkStream_t4262_il2cpp_TypeInfo;
// System.Net.ChunkStream
#include "System_System_Net_ChunkStream.h"
extern TypeInfo Cookie_t4263_il2cpp_TypeInfo;
// System.Net.Cookie
#include "System_System_Net_Cookie.h"
extern TypeInfo CookieCollectionComparer_t4264_il2cpp_TypeInfo;
// System.Net.CookieCollection/CookieCollectionComparer
#include "System_System_Net_CookieCollection_CookieCollectionComparer.h"
extern TypeInfo CookieCollection_t4266_il2cpp_TypeInfo;
// System.Net.CookieCollection
#include "System_System_Net_CookieCollection.h"
extern TypeInfo CookieContainer_t4267_il2cpp_TypeInfo;
// System.Net.CookieContainer
#include "System_System_Net_CookieContainer.h"
extern TypeInfo CookieException_t4268_il2cpp_TypeInfo;
// System.Net.CookieException
#include "System_System_Net_CookieException.h"
extern TypeInfo DecompressionMethods_t4269_il2cpp_TypeInfo;
// System.Net.DecompressionMethods
#include "System_System_Net_DecompressionMethods.h"
extern TypeInfo DefaultCertificatePolicy_t4270_il2cpp_TypeInfo;
// System.Net.DefaultCertificatePolicy
#include "System_System_Net_DefaultCertificatePolicy.h"
extern TypeInfo DigestHeaderParser_t4271_il2cpp_TypeInfo;
// System.Net.DigestHeaderParser
#include "System_System_Net_DigestHeaderParser.h"
extern TypeInfo DigestSession_t4274_il2cpp_TypeInfo;
// System.Net.DigestSession
#include "System_System_Net_DigestSession.h"
extern TypeInfo DigestClient_t4275_il2cpp_TypeInfo;
// System.Net.DigestClient
#include "System_System_Net_DigestClient.h"
extern TypeInfo Dns_t781_il2cpp_TypeInfo;
// System.Net.Dns
#include "System_System_Net_Dns.h"
extern TypeInfo EndPoint_t4242_il2cpp_TypeInfo;
// System.Net.EndPoint
#include "System_System_Net_EndPoint.h"
extern TypeInfo FileWebStream_t4277_il2cpp_TypeInfo;
// System.Net.FileWebRequest/FileWebStream
#include "System_System_Net_FileWebRequest_FileWebStream.h"
extern TypeInfo GetResponseCallback_t4278_il2cpp_TypeInfo;
// System.Net.FileWebRequest/GetResponseCallback
#include "System_System_Net_FileWebRequest_GetResponseCallback.h"
extern TypeInfo FileWebRequest_t4276_il2cpp_TypeInfo;
// System.Net.FileWebRequest
#include "System_System_Net_FileWebRequest.h"
extern TypeInfo FileWebRequestCreator_t4281_il2cpp_TypeInfo;
// System.Net.FileWebRequestCreator
#include "System_System_Net_FileWebRequestCreator.h"
extern TypeInfo FileWebResponse_t4280_il2cpp_TypeInfo;
// System.Net.FileWebResponse
#include "System_System_Net_FileWebResponse.h"
extern TypeInfo FtpAsyncResult_t4283_il2cpp_TypeInfo;
// System.Net.FtpAsyncResult
#include "System_System_Net_FtpAsyncResult.h"
extern TypeInfo WriteDelegate_t4284_il2cpp_TypeInfo;
// System.Net.FtpDataStream/WriteDelegate
#include "System_System_Net_FtpDataStream_WriteDelegate.h"
extern TypeInfo ReadDelegate_t4285_il2cpp_TypeInfo;
// System.Net.FtpDataStream/ReadDelegate
#include "System_System_Net_FtpDataStream_ReadDelegate.h"
extern TypeInfo FtpDataStream_t4287_il2cpp_TypeInfo;
// System.Net.FtpDataStream
#include "System_System_Net_FtpDataStream.h"
extern TypeInfo FtpRequestCreator_t4288_il2cpp_TypeInfo;
// System.Net.FtpRequestCreator
#include "System_System_Net_FtpRequestCreator.h"
extern TypeInfo FtpStatus_t4289_il2cpp_TypeInfo;
// System.Net.FtpStatus
#include "System_System_Net_FtpStatus.h"
extern TypeInfo FtpStatusCode_t4290_il2cpp_TypeInfo;
// System.Net.FtpStatusCode
#include "System_System_Net_FtpStatusCode.h"
extern TypeInfo RequestState_t4291_il2cpp_TypeInfo;
// System.Net.FtpWebRequest/RequestState
#include "System_System_Net_FtpWebRequest_RequestState.h"
extern TypeInfo FtpWebRequest_t4286_il2cpp_TypeInfo;
// System.Net.FtpWebRequest
#include "System_System_Net_FtpWebRequest.h"
extern TypeInfo FtpWebResponse_t4282_il2cpp_TypeInfo;
// System.Net.FtpWebResponse
#include "System_System_Net_FtpWebResponse.h"
extern TypeInfo GlobalProxySelection_t4296_il2cpp_TypeInfo;
// System.Net.GlobalProxySelection
#include "System_System_Net_GlobalProxySelection.h"
extern TypeInfo HttpRequestCreator_t4297_il2cpp_TypeInfo;
// System.Net.HttpRequestCreator
#include "System_System_Net_HttpRequestCreator.h"
extern TypeInfo HttpStatusCode_t4298_il2cpp_TypeInfo;
// System.Net.HttpStatusCode
#include "System_System_Net_HttpStatusCode.h"
extern TypeInfo HttpVersion_t4299_il2cpp_TypeInfo;
// System.Net.HttpVersion
#include "System_System_Net_HttpVersion.h"
extern TypeInfo HttpWebRequest_t4305_il2cpp_TypeInfo;
// System.Net.HttpWebRequest
#include "System_System_Net_HttpWebRequest.h"
extern TypeInfo HttpWebResponse_t4302_il2cpp_TypeInfo;
// System.Net.HttpWebResponse
#include "System_System_Net_HttpWebResponse.h"
extern TypeInfo CookieParser_t4306_il2cpp_TypeInfo;
// System.Net.CookieParser
#include "System_System_Net_CookieParser.h"
extern TypeInfo IAuthenticationModule_t4256_il2cpp_TypeInfo;
extern TypeInfo ICertificatePolicy_t4315_il2cpp_TypeInfo;
extern TypeInfo ICredentials_t4150_il2cpp_TypeInfo;
extern TypeInfo ICredentialPolicy_t4254_il2cpp_TypeInfo;
extern TypeInfo IPAddress_t780_il2cpp_TypeInfo;
// System.Net.IPAddress
#include "System_System_Net_IPAddress.h"
extern TypeInfo IPEndPoint_t4295_il2cpp_TypeInfo;
// System.Net.IPEndPoint
#include "System_System_Net_IPEndPoint.h"
extern TypeInfo IPHostEntry_t4294_il2cpp_TypeInfo;
// System.Net.IPHostEntry
#include "System_System_Net_IPHostEntry.h"
extern TypeInfo IPv6Address_t4308_il2cpp_TypeInfo;
// System.Net.IPv6Address
#include "System_System_Net_IPv6Address.h"
extern TypeInfo IWebProxy_t4279_il2cpp_TypeInfo;
extern TypeInfo IWebRequestCreate_t4444_il2cpp_TypeInfo;
extern TypeInfo NetworkCredential_t4293_il2cpp_TypeInfo;
// System.Net.NetworkCredential
#include "System_System_Net_NetworkCredential.h"
extern TypeInfo ProtocolViolationException_t4309_il2cpp_TypeInfo;
// System.Net.ProtocolViolationException
#include "System_System_Net_ProtocolViolationException.h"
extern TypeInfo SecurityProtocolType_t4310_il2cpp_TypeInfo;
// System.Net.SecurityProtocolType
#include "System_System_Net_SecurityProtocolType.h"
extern TypeInfo ServicePoint_t4292_il2cpp_TypeInfo;
// System.Net.ServicePoint
#include "System_System_Net_ServicePoint.h"
extern TypeInfo SPKey_t4313_il2cpp_TypeInfo;
// System.Net.ServicePointManager/SPKey
#include "System_System_Net_ServicePointManager_SPKey.h"
extern TypeInfo ChainValidationHelper_t4314_il2cpp_TypeInfo;
// System.Net.ServicePointManager/ChainValidationHelper
#include "System_System_Net_ServicePointManager_ChainValidationHelper.h"
extern TypeInfo ServicePointManager_t4316_il2cpp_TypeInfo;
// System.Net.ServicePointManager
#include "System_System_Net_ServicePointManager.h"
extern TypeInfo SocketAddress_t4317_il2cpp_TypeInfo;
// System.Net.SocketAddress
#include "System_System_Net_SocketAddress.h"
extern TypeInfo WebAsyncResult_t4303_il2cpp_TypeInfo;
// System.Net.WebAsyncResult
#include "System_System_Net_WebAsyncResult.h"
extern TypeInfo ReadState_t4318_il2cpp_TypeInfo;
// System.Net.ReadState
#include "System_System_Net_ReadState.h"
extern TypeInfo AbortHelper_t4319_il2cpp_TypeInfo;
// System.Net.WebConnection/AbortHelper
#include "System_System_Net_WebConnection_AbortHelper.h"
extern TypeInfo WebConnection_t4304_il2cpp_TypeInfo;
// System.Net.WebConnection
#include "System_System_Net_WebConnection.h"
extern TypeInfo WebConnectionData_t4320_il2cpp_TypeInfo;
// System.Net.WebConnectionData
#include "System_System_Net_WebConnectionData.h"
extern TypeInfo WebConnectionGroup_t4321_il2cpp_TypeInfo;
// System.Net.WebConnectionGroup
#include "System_System_Net_WebConnectionGroup.h"
extern TypeInfo WebConnectionStream_t4301_il2cpp_TypeInfo;
// System.Net.WebConnectionStream
#include "System_System_Net_WebConnectionStream.h"
extern TypeInfo WebException_t4322_il2cpp_TypeInfo;
// System.Net.WebException
#include "System_System_Net_WebException.h"
extern TypeInfo WebExceptionStatus_t4323_il2cpp_TypeInfo;
// System.Net.WebExceptionStatus
#include "System_System_Net_WebExceptionStatus.h"
extern TypeInfo WebHeaderCollection_t4261_il2cpp_TypeInfo;
// System.Net.WebHeaderCollection
#include "System_System_Net_WebHeaderCollection.h"
extern TypeInfo WebProxy_t4324_il2cpp_TypeInfo;
// System.Net.WebProxy
#include "System_System_Net_WebProxy.h"
extern TypeInfo WebRequest_t4184_il2cpp_TypeInfo;
// System.Net.WebRequest
#include "System_System_Net_WebRequest.h"
extern TypeInfo WebResponse_t4185_il2cpp_TypeInfo;
// System.Net.WebResponse
#include "System_System_Net_WebResponse.h"
extern TypeInfo SslProtocols_t4326_il2cpp_TypeInfo;
// System.Security.Authentication.SslProtocols
#include "System_System_Security_Authentication_SslProtocols.h"
extern TypeInfo SecTrustResult_t4327_il2cpp_TypeInfo;
// Mono.Security.X509.OSX509Certificates/SecTrustResult
#include "System_Mono_Security_X509_OSX509Certificates_SecTrustResult.h"
extern TypeInfo OSX509Certificates_t4328_il2cpp_TypeInfo;
// Mono.Security.X509.OSX509Certificates
#include "System_Mono_Security_X509_OSX509Certificates.h"
extern TypeInfo OpenFlags_t4329_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.OpenFlags
#include "System_System_Security_Cryptography_X509Certificates_OpenFla.h"
extern TypeInfo PublicKey_t4333_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.PublicKey
#include "System_System_Security_Cryptography_X509Certificates_PublicK.h"
extern TypeInfo StoreLocation_t4334_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.StoreLocation
#include "System_System_Security_Cryptography_X509Certificates_StoreLo.h"
extern TypeInfo StoreName_t4335_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.StoreName
#include "System_System_Security_Cryptography_X509Certificates_StoreNa.h"
extern TypeInfo X500DistinguishedName_t4336_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System_System_Security_Cryptography_X509Certificates_X500Dis.h"
extern TypeInfo X500DistinguishedNameFlags_t4337_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags
#include "System_System_Security_Cryptography_X509Certificates_X500Dis_0.h"
extern TypeInfo X509BasicConstraintsExtension_t4338_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Bas.h"
extern TypeInfo X509Certificate2_t4342_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System_System_Security_Cryptography_X509Certificates_X509Cer.h"
extern TypeInfo X509Certificate2Collection_t4343_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_0.h"
extern TypeInfo X509Certificate2Enumerator_t4344_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_2.h"
extern TypeInfo X509CertificateEnumerator_t4345_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509CertificateCollection/X509CertificateEnumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_3.h"
extern TypeInfo X509CertificateCollection_t4227_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System_System_Security_Cryptography_X509Certificates_X509Cer_1.h"
extern TypeInfo X509Chain_t4352_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Chain
#include "System_System_Security_Cryptography_X509Certificates_X509Cha.h"
extern TypeInfo X509ChainElement_t4350_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_0.h"
extern TypeInfo X509ChainElementCollection_t4346_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_2.h"
extern TypeInfo X509ChainElementEnumerator_t4353_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_3.h"
extern TypeInfo X509ChainPolicy_t4347_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_4.h"
extern TypeInfo X509ChainStatus_t4349_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainStatus
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_5.h"
extern TypeInfo X509ChainStatusFlags_t4355_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
#include "System_System_Security_Cryptography_X509Certificates_X509Cha_1.h"
extern TypeInfo X509EnhancedKeyUsageExtension_t4356_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Enh.h"
extern TypeInfo X509Extension_t4339_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Extension
#include "System_System_Security_Cryptography_X509Certificates_X509Ext.h"
extern TypeInfo X509ExtensionCollection_t4340_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System_System_Security_Cryptography_X509Certificates_X509Ext_0.h"
extern TypeInfo X509ExtensionEnumerator_t4357_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator
#include "System_System_Security_Cryptography_X509Certificates_X509Ext_1.h"
extern TypeInfo X509FindType_t4358_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509FindType
#include "System_System_Security_Cryptography_X509Certificates_X509Fin.h"
extern TypeInfo X509KeyUsageExtension_t4359_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509KeyUsageExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Key_0.h"
extern TypeInfo X509KeyUsageFlags_t4360_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509KeyUsageFlags
#include "System_System_Security_Cryptography_X509Certificates_X509Key.h"
extern TypeInfo X509NameType_t4361_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509NameType
#include "System_System_Security_Cryptography_X509Certificates_X509Nam.h"
extern TypeInfo X509RevocationFlag_t4362_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509RevocationFlag
#include "System_System_Security_Cryptography_X509Certificates_X509Rev.h"
extern TypeInfo X509RevocationMode_t4363_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509RevocationMode
#include "System_System_Security_Cryptography_X509Certificates_X509Rev_0.h"
extern TypeInfo X509Store_t4351_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509Store
#include "System_System_Security_Cryptography_X509Certificates_X509Sto.h"
extern TypeInfo X509SubjectKeyIdentifierExtension_t4365_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension
#include "System_System_Security_Cryptography_X509Certificates_X509Sub.h"
extern TypeInfo X509SubjectKeyIdentifierHashAlgorithm_t4366_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm
#include "System_System_Security_Cryptography_X509Certificates_X509Sub_0.h"
extern TypeInfo X509VerificationFlags_t4367_il2cpp_TypeInfo;
// System.Security.Cryptography.X509Certificates.X509VerificationFlags
#include "System_System_Security_Cryptography_X509Certificates_X509Ver.h"
extern TypeInfo AsnDecodeStatus_t4368_il2cpp_TypeInfo;
// System.Security.Cryptography.AsnDecodeStatus
#include "System_System_Security_Cryptography_AsnDecodeStatus.h"
extern TypeInfo AsnEncodedData_t4331_il2cpp_TypeInfo;
// System.Security.Cryptography.AsnEncodedData
#include "System_System_Security_Cryptography_AsnEncodedData.h"
extern TypeInfo Oid_t4332_il2cpp_TypeInfo;
// System.Security.Cryptography.Oid
#include "System_System_Security_Cryptography_Oid.h"
extern TypeInfo OidCollection_t4354_il2cpp_TypeInfo;
// System.Security.Cryptography.OidCollection
#include "System_System_Security_Cryptography_OidCollection.h"
extern TypeInfo OidEnumerator_t4369_il2cpp_TypeInfo;
// System.Security.Cryptography.OidEnumerator
#include "System_System_Security_Cryptography_OidEnumerator.h"
extern TypeInfo MatchAppendEvaluator_t4370_il2cpp_TypeInfo;
// System.Text.RegularExpressions.BaseMachine/MatchAppendEvaluator
#include "System_System_Text_RegularExpressions_BaseMachine_MatchAppen.h"
extern TypeInfo BaseMachine_t4371_il2cpp_TypeInfo;
// System.Text.RegularExpressions.BaseMachine
#include "System_System_Text_RegularExpressions_BaseMachine.h"
extern TypeInfo Capture_t2009_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Capture
#include "System_System_Text_RegularExpressions_Capture.h"
extern TypeInfo CaptureCollection_t2011_il2cpp_TypeInfo;
// System.Text.RegularExpressions.CaptureCollection
#include "System_System_Text_RegularExpressions_CaptureCollection.h"
extern TypeInfo Group_t2008_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Group
#include "System_System_Text_RegularExpressions_Group.h"
extern TypeInfo GroupCollection_t2010_il2cpp_TypeInfo;
// System.Text.RegularExpressions.GroupCollection
#include "System_System_Text_RegularExpressions_GroupCollection.h"
extern TypeInfo Match_t1658_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Match
#include "System_System_Text_RegularExpressions_Match.h"
extern TypeInfo Enumerator_t4376_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MatchCollection/Enumerator
#include "System_System_Text_RegularExpressions_MatchCollection_Enumer.h"
extern TypeInfo MatchCollection_t4375_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MatchCollection
#include "System_System_Text_RegularExpressions_MatchCollection.h"
extern TypeInfo Adapter_t4377_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Regex/Adapter
#include "System_System_Text_RegularExpressions_Regex_Adapter.h"
extern TypeInfo Regex_t789_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Regex
#include "System_System_Text_RegularExpressions_Regex.h"
extern TypeInfo RegexOptions_t4380_il2cpp_TypeInfo;
// System.Text.RegularExpressions.RegexOptions
#include "System_System_Text_RegularExpressions_RegexOptions.h"
extern TypeInfo OpCode_t4381_il2cpp_TypeInfo;
// System.Text.RegularExpressions.OpCode
#include "System_System_Text_RegularExpressions_OpCode.h"
extern TypeInfo OpFlags_t4382_il2cpp_TypeInfo;
// System.Text.RegularExpressions.OpFlags
#include "System_System_Text_RegularExpressions_OpFlags.h"
extern TypeInfo Position_t4383_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Position
#include "System_System_Text_RegularExpressions_Position.h"
extern TypeInfo IMachine_t4374_il2cpp_TypeInfo;
extern TypeInfo IMachineFactory_t4379_il2cpp_TypeInfo;
extern TypeInfo Key_t4384_il2cpp_TypeInfo;
// System.Text.RegularExpressions.FactoryCache/Key
#include "System_System_Text_RegularExpressions_FactoryCache_Key.h"
extern TypeInfo FactoryCache_t4378_il2cpp_TypeInfo;
// System.Text.RegularExpressions.FactoryCache
#include "System_System_Text_RegularExpressions_FactoryCache.h"
extern TypeInfo Node_t4386_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MRUList/Node
#include "System_System_Text_RegularExpressions_MRUList_Node.h"
extern TypeInfo MRUList_t4385_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MRUList
#include "System_System_Text_RegularExpressions_MRUList.h"
extern TypeInfo Category_t4387_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Category
#include "System_System_Text_RegularExpressions_Category.h"
extern TypeInfo CategoryUtils_t4388_il2cpp_TypeInfo;
// System.Text.RegularExpressions.CategoryUtils
#include "System_System_Text_RegularExpressions_CategoryUtils.h"
extern TypeInfo LinkRef_t4389_il2cpp_TypeInfo;
// System.Text.RegularExpressions.LinkRef
#include "System_System_Text_RegularExpressions_LinkRef.h"
extern TypeInfo ICompiler_t4454_il2cpp_TypeInfo;
extern TypeInfo InterpreterFactory_t4390_il2cpp_TypeInfo;
// System.Text.RegularExpressions.InterpreterFactory
#include "System_System_Text_RegularExpressions_InterpreterFactory.h"
extern TypeInfo Link_t4391_il2cpp_TypeInfo;
// System.Text.RegularExpressions.PatternCompiler/PatternLinkStack/Link
#include "System_System_Text_RegularExpressions_PatternCompiler_Patter.h"
extern TypeInfo PatternLinkStack_t4392_il2cpp_TypeInfo;
// System.Text.RegularExpressions.PatternCompiler/PatternLinkStack
#include "System_System_Text_RegularExpressions_PatternCompiler_Patter_0.h"
extern TypeInfo PatternCompiler_t4394_il2cpp_TypeInfo;
// System.Text.RegularExpressions.PatternCompiler
#include "System_System_Text_RegularExpressions_PatternCompiler.h"
extern TypeInfo LinkStack_t4393_il2cpp_TypeInfo;
// System.Text.RegularExpressions.LinkStack
#include "System_System_Text_RegularExpressions_LinkStack.h"
extern TypeInfo Mark_t4395_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Mark
#include "System_System_Text_RegularExpressions_Mark.h"
extern TypeInfo IntStack_t4396_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter/IntStack
#include "System_System_Text_RegularExpressions_Interpreter_IntStack.h"
extern TypeInfo RepeatContext_t4397_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter/RepeatContext
#include "System_System_Text_RegularExpressions_Interpreter_RepeatCont.h"
extern TypeInfo Mode_t4398_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter/Mode
#include "System_System_Text_RegularExpressions_Interpreter_Mode.h"
extern TypeInfo Interpreter_t4401_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interpreter
#include "System_System_Text_RegularExpressions_Interpreter.h"
extern TypeInfo Interval_t4402_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Interval
#include "System_System_Text_RegularExpressions_Interval.h"
extern TypeInfo Enumerator_t4403_il2cpp_TypeInfo;
// System.Text.RegularExpressions.IntervalCollection/Enumerator
#include "System_System_Text_RegularExpressions_IntervalCollection_Enu.h"
extern TypeInfo CostDelegate_t4404_il2cpp_TypeInfo;
// System.Text.RegularExpressions.IntervalCollection/CostDelegate
#include "System_System_Text_RegularExpressions_IntervalCollection_Cos.h"
extern TypeInfo IntervalCollection_t4405_il2cpp_TypeInfo;
// System.Text.RegularExpressions.IntervalCollection
#include "System_System_Text_RegularExpressions_IntervalCollection.h"
extern TypeInfo Parser_t4406_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Parser
#include "System_System_Text_RegularExpressions_Syntax_Parser.h"
extern TypeInfo QuickSearch_t4399_il2cpp_TypeInfo;
// System.Text.RegularExpressions.QuickSearch
#include "System_System_Text_RegularExpressions_QuickSearch.h"
extern TypeInfo ReplacementEvaluator_t4407_il2cpp_TypeInfo;
// System.Text.RegularExpressions.ReplacementEvaluator
#include "System_System_Text_RegularExpressions_ReplacementEvaluator.h"
extern TypeInfo ExpressionCollection_t4408_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.ExpressionCollection
#include "System_System_Text_RegularExpressions_Syntax_ExpressionColle.h"
extern TypeInfo Expression_t4409_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Expression
#include "System_System_Text_RegularExpressions_Syntax_Expression.h"
extern TypeInfo CompositeExpression_t4410_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CompositeExpression
#include "System_System_Text_RegularExpressions_Syntax_CompositeExpres.h"
extern TypeInfo Group_t4411_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Group
#include "System_System_Text_RegularExpressions_Syntax_Group.h"
extern TypeInfo RegularExpression_t4412_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.RegularExpression
#include "System_System_Text_RegularExpressions_Syntax_RegularExpressi.h"
extern TypeInfo CapturingGroup_t4413_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CapturingGroup
#include "System_System_Text_RegularExpressions_Syntax_CapturingGroup.h"
extern TypeInfo BalancingGroup_t4414_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.BalancingGroup
#include "System_System_Text_RegularExpressions_Syntax_BalancingGroup.h"
extern TypeInfo NonBacktrackingGroup_t4415_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.NonBacktrackingGroup
#include "System_System_Text_RegularExpressions_Syntax_NonBacktracking.h"
extern TypeInfo Repetition_t4416_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Repetition
#include "System_System_Text_RegularExpressions_Syntax_Repetition.h"
extern TypeInfo Assertion_t4417_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Assertion
#include "System_System_Text_RegularExpressions_Syntax_Assertion.h"
extern TypeInfo CaptureAssertion_t4420_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CaptureAssertion
#include "System_System_Text_RegularExpressions_Syntax_CaptureAssertio.h"
extern TypeInfo ExpressionAssertion_t4418_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.ExpressionAssertion
#include "System_System_Text_RegularExpressions_Syntax_ExpressionAsser.h"
extern TypeInfo Alternation_t4421_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Alternation
#include "System_System_Text_RegularExpressions_Syntax_Alternation.h"
extern TypeInfo Literal_t4419_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Literal
#include "System_System_Text_RegularExpressions_Syntax_Literal.h"
extern TypeInfo PositionAssertion_t4422_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.PositionAssertion
#include "System_System_Text_RegularExpressions_Syntax_PositionAsserti.h"
extern TypeInfo Reference_t4423_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.Reference
#include "System_System_Text_RegularExpressions_Syntax_Reference.h"
extern TypeInfo BackslashNumber_t4424_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.BackslashNumber
#include "System_System_Text_RegularExpressions_Syntax_BackslashNumber.h"
extern TypeInfo CharacterClass_t4426_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.CharacterClass
#include "System_System_Text_RegularExpressions_Syntax_CharacterClass.h"
extern TypeInfo AnchorInfo_t4427_il2cpp_TypeInfo;
// System.Text.RegularExpressions.Syntax.AnchorInfo
#include "System_System_Text_RegularExpressions_Syntax_AnchorInfo.h"
extern TypeInfo DefaultUriParser_t4428_il2cpp_TypeInfo;
// System.DefaultUriParser
#include "System_System_DefaultUriParser.h"
extern TypeInfo GenericUriParser_t4430_il2cpp_TypeInfo;
// System.GenericUriParser
#include "System_System_GenericUriParser.h"
extern TypeInfo UriScheme_t4431_il2cpp_TypeInfo;
// System.Uri/UriScheme
#include "System_System_Uri_UriScheme.h"
extern TypeInfo Uri_t32_il2cpp_TypeInfo;
// System.Uri
#include "System_System_Uri.h"
extern TypeInfo UriFormatException_t4177_il2cpp_TypeInfo;
// System.UriFormatException
#include "System_System_UriFormatException.h"
extern TypeInfo UriHostNameType_t4433_il2cpp_TypeInfo;
// System.UriHostNameType
#include "System_System_UriHostNameType.h"
extern TypeInfo UriKind_t4434_il2cpp_TypeInfo;
// System.UriKind
#include "System_System_UriKind.h"
extern TypeInfo UriParser_t4429_il2cpp_TypeInfo;
// System.UriParser
#include "System_System_UriParser.h"
extern TypeInfo UriPartial_t4435_il2cpp_TypeInfo;
// System.UriPartial
#include "System_System_UriPartial.h"
extern TypeInfo UriTypeConverter_t4436_il2cpp_TypeInfo;
// System.UriTypeConverter
#include "System_System_UriTypeConverter.h"
extern TypeInfo PropertyChangedEventHandler_t1977_il2cpp_TypeInfo;
// System.ComponentModel.PropertyChangedEventHandler
#include "System_System_ComponentModel_PropertyChangedEventHandler.h"
extern TypeInfo LocalCertificateSelectionCallback_t4232_il2cpp_TypeInfo;
// System.Net.Security.LocalCertificateSelectionCallback
#include "System_System_Net_Security_LocalCertificateSelectionCallback.h"
extern TypeInfo RemoteCertificateValidationCallback_t4231_il2cpp_TypeInfo;
// System.Net.Security.RemoteCertificateValidationCallback
#include "System_System_Net_Security_RemoteCertificateValidationCallba.h"
extern TypeInfo BindIPEndPoint_t4312_il2cpp_TypeInfo;
// System.Net.BindIPEndPoint
#include "System_System_Net_BindIPEndPoint.h"
extern TypeInfo HttpContinueDelegate_t4300_il2cpp_TypeInfo;
// System.Net.HttpContinueDelegate
#include "System_System_Net_HttpContinueDelegate.h"
extern TypeInfo MatchEvaluator_t1451_il2cpp_TypeInfo;
// System.Text.RegularExpressions.MatchEvaluator
#include "System_System_Text_RegularExpressions_MatchEvaluator.h"
extern TypeInfo U24ArrayTypeU2416_t4437_il2cpp_TypeInfo;
// <PrivateImplementationDetails>/$ArrayType$16
#include "System_U3CPrivateImplementationDetailsU3E_U24ArrayTypeU2416.h"
extern TypeInfo U24ArrayTypeU24128_t4438_il2cpp_TypeInfo;
// <PrivateImplementationDetails>/$ArrayType$128
#include "System_U3CPrivateImplementationDetailsU3E_U24ArrayTypeU24128.h"
extern TypeInfo U24ArrayTypeU2412_t4439_il2cpp_TypeInfo;
// <PrivateImplementationDetails>/$ArrayType$12
#include "System_U3CPrivateImplementationDetailsU3E_U24ArrayTypeU2412.h"
extern TypeInfo U3CPrivateImplementationDetailsU3E_t4440_il2cpp_TypeInfo;
// <PrivateImplementationDetails>
#include "System_U3CPrivateImplementationDetailsU3E.h"
#include <map>
struct TypeInfo;
struct MethodInfo;
TypeInfo* g_System_Assembly_Types[255] = 
{
	&U3CModuleU3E_t4193_il2cpp_TypeInfo,
	&Locale_t4194_il2cpp_TypeInfo,
	&MonoTODOAttribute_t4195_il2cpp_TypeInfo,
	&GeneratedCodeAttribute_t4196_il2cpp_TypeInfo,
	&Enumerator_t4492_il2cpp_TypeInfo,
	&LinkedList_1_t4491_il2cpp_TypeInfo,
	&LinkedListNode_1_t4493_il2cpp_TypeInfo,
	&Enumerator_t4495_il2cpp_TypeInfo,
	&Queue_1_t4494_il2cpp_TypeInfo,
	&Enumerator_t4497_il2cpp_TypeInfo,
	&Stack_1_t4496_il2cpp_TypeInfo,
	&HybridDictionary_t4197_il2cpp_TypeInfo,
	&DictionaryNode_t4198_il2cpp_TypeInfo,
	&DictionaryNodeEnumerator_t4199_il2cpp_TypeInfo,
	&DictionaryNodeCollectionEnumerator_t4201_il2cpp_TypeInfo,
	&DictionaryNodeCollection_t4202_il2cpp_TypeInfo,
	&ListDictionary_t4019_il2cpp_TypeInfo,
	&_Item_t4204_il2cpp_TypeInfo,
	&_KeysEnumerator_t4206_il2cpp_TypeInfo,
	&KeysCollection_t4207_il2cpp_TypeInfo,
	&NameObjectCollectionBase_t4205_il2cpp_TypeInfo,
	&NameValueCollection_t4210_il2cpp_TypeInfo,
	&DefaultValueAttribute_t4170_il2cpp_TypeInfo,
	&EditorBrowsableAttribute_t2764_il2cpp_TypeInfo,
	&EditorBrowsableState_t4211_il2cpp_TypeInfo,
	&INotifyPropertyChanged_t3067_il2cpp_TypeInfo,
	&PropertyChangedEventArgs_t2088_il2cpp_TypeInfo,
	&TypeConverter_t4212_il2cpp_TypeInfo,
	&TypeConverterAttribute_t4213_il2cpp_TypeInfo,
	&Win32Exception_t4214_il2cpp_TypeInfo,
	&Debug_t4216_il2cpp_TypeInfo,
	&Stopwatch_t495_il2cpp_TypeInfo,
	&CompressionMode_t4217_il2cpp_TypeInfo,
	&UnmanagedReadOrWrite_t4218_il2cpp_TypeInfo,
	&ReadMethod_t4219_il2cpp_TypeInfo,
	&WriteMethod_t4220_il2cpp_TypeInfo,
	&DeflateStream_t4221_il2cpp_TypeInfo,
	&GZipStream_t4223_il2cpp_TypeInfo,
	&AuthenticatedStream_t4224_il2cpp_TypeInfo,
	&AuthenticationLevel_t4225_il2cpp_TypeInfo,
	&SslPolicyErrors_t4226_il2cpp_TypeInfo,
	&U3CBeginAuthenticateAsClientU3Ec__AnonStorey7_t4229_il2cpp_TypeInfo,
	&SslStream_t4228_il2cpp_TypeInfo,
	&AddressFamily_t4233_il2cpp_TypeInfo,
	&LingerOption_t4234_il2cpp_TypeInfo,
	&MulticastOption_t4235_il2cpp_TypeInfo,
	&NetworkStream_t4237_il2cpp_TypeInfo,
	&ProtocolType_t4238_il2cpp_TypeInfo,
	&SelectMode_t4239_il2cpp_TypeInfo,
	&SocketOperation_t4240_il2cpp_TypeInfo,
	&SocketAsyncResult_t4244_il2cpp_TypeInfo,
	&Worker_t4245_il2cpp_TypeInfo,
	&SocketAsyncCall_t4246_il2cpp_TypeInfo,
	&Socket_t4236_il2cpp_TypeInfo,
	&SocketError_t4247_il2cpp_TypeInfo,
	&SocketException_t4248_il2cpp_TypeInfo,
	&SocketFlags_t4249_il2cpp_TypeInfo,
	&SocketOptionLevel_t4250_il2cpp_TypeInfo,
	&SocketOptionName_t4251_il2cpp_TypeInfo,
	&SocketShutdown_t4252_il2cpp_TypeInfo,
	&SocketType_t4253_il2cpp_TypeInfo,
	&AuthenticationManager_t4255_il2cpp_TypeInfo,
	&Authorization_t4257_il2cpp_TypeInfo,
	&BasicClient_t4258_il2cpp_TypeInfo,
	&State_t4259_il2cpp_TypeInfo,
	&Chunk_t4260_il2cpp_TypeInfo,
	&ChunkStream_t4262_il2cpp_TypeInfo,
	&Cookie_t4263_il2cpp_TypeInfo,
	&CookieCollectionComparer_t4264_il2cpp_TypeInfo,
	&CookieCollection_t4266_il2cpp_TypeInfo,
	&CookieContainer_t4267_il2cpp_TypeInfo,
	&CookieException_t4268_il2cpp_TypeInfo,
	&DecompressionMethods_t4269_il2cpp_TypeInfo,
	&DefaultCertificatePolicy_t4270_il2cpp_TypeInfo,
	&DigestHeaderParser_t4271_il2cpp_TypeInfo,
	&DigestSession_t4274_il2cpp_TypeInfo,
	&DigestClient_t4275_il2cpp_TypeInfo,
	&Dns_t781_il2cpp_TypeInfo,
	&EndPoint_t4242_il2cpp_TypeInfo,
	&FileWebStream_t4277_il2cpp_TypeInfo,
	&GetResponseCallback_t4278_il2cpp_TypeInfo,
	&FileWebRequest_t4276_il2cpp_TypeInfo,
	&FileWebRequestCreator_t4281_il2cpp_TypeInfo,
	&FileWebResponse_t4280_il2cpp_TypeInfo,
	&FtpAsyncResult_t4283_il2cpp_TypeInfo,
	&WriteDelegate_t4284_il2cpp_TypeInfo,
	&ReadDelegate_t4285_il2cpp_TypeInfo,
	&FtpDataStream_t4287_il2cpp_TypeInfo,
	&FtpRequestCreator_t4288_il2cpp_TypeInfo,
	&FtpStatus_t4289_il2cpp_TypeInfo,
	&FtpStatusCode_t4290_il2cpp_TypeInfo,
	&RequestState_t4291_il2cpp_TypeInfo,
	&FtpWebRequest_t4286_il2cpp_TypeInfo,
	&FtpWebResponse_t4282_il2cpp_TypeInfo,
	&GlobalProxySelection_t4296_il2cpp_TypeInfo,
	&HttpRequestCreator_t4297_il2cpp_TypeInfo,
	&HttpStatusCode_t4298_il2cpp_TypeInfo,
	&HttpVersion_t4299_il2cpp_TypeInfo,
	&HttpWebRequest_t4305_il2cpp_TypeInfo,
	&HttpWebResponse_t4302_il2cpp_TypeInfo,
	&CookieParser_t4306_il2cpp_TypeInfo,
	&IAuthenticationModule_t4256_il2cpp_TypeInfo,
	&ICertificatePolicy_t4315_il2cpp_TypeInfo,
	&ICredentials_t4150_il2cpp_TypeInfo,
	&ICredentialPolicy_t4254_il2cpp_TypeInfo,
	&IPAddress_t780_il2cpp_TypeInfo,
	&IPEndPoint_t4295_il2cpp_TypeInfo,
	&IPHostEntry_t4294_il2cpp_TypeInfo,
	&IPv6Address_t4308_il2cpp_TypeInfo,
	&IWebProxy_t4279_il2cpp_TypeInfo,
	&IWebRequestCreate_t4444_il2cpp_TypeInfo,
	&NetworkCredential_t4293_il2cpp_TypeInfo,
	&ProtocolViolationException_t4309_il2cpp_TypeInfo,
	&SecurityProtocolType_t4310_il2cpp_TypeInfo,
	&ServicePoint_t4292_il2cpp_TypeInfo,
	&SPKey_t4313_il2cpp_TypeInfo,
	&ChainValidationHelper_t4314_il2cpp_TypeInfo,
	&ServicePointManager_t4316_il2cpp_TypeInfo,
	&SocketAddress_t4317_il2cpp_TypeInfo,
	&WebAsyncResult_t4303_il2cpp_TypeInfo,
	&ReadState_t4318_il2cpp_TypeInfo,
	&AbortHelper_t4319_il2cpp_TypeInfo,
	&WebConnection_t4304_il2cpp_TypeInfo,
	&WebConnectionData_t4320_il2cpp_TypeInfo,
	&WebConnectionGroup_t4321_il2cpp_TypeInfo,
	&WebConnectionStream_t4301_il2cpp_TypeInfo,
	&WebException_t4322_il2cpp_TypeInfo,
	&WebExceptionStatus_t4323_il2cpp_TypeInfo,
	&WebHeaderCollection_t4261_il2cpp_TypeInfo,
	&WebProxy_t4324_il2cpp_TypeInfo,
	&WebRequest_t4184_il2cpp_TypeInfo,
	&WebResponse_t4185_il2cpp_TypeInfo,
	&SslProtocols_t4326_il2cpp_TypeInfo,
	&SecTrustResult_t4327_il2cpp_TypeInfo,
	&OSX509Certificates_t4328_il2cpp_TypeInfo,
	&OpenFlags_t4329_il2cpp_TypeInfo,
	&PublicKey_t4333_il2cpp_TypeInfo,
	&StoreLocation_t4334_il2cpp_TypeInfo,
	&StoreName_t4335_il2cpp_TypeInfo,
	&X500DistinguishedName_t4336_il2cpp_TypeInfo,
	&X500DistinguishedNameFlags_t4337_il2cpp_TypeInfo,
	&X509BasicConstraintsExtension_t4338_il2cpp_TypeInfo,
	&X509Certificate2_t4342_il2cpp_TypeInfo,
	&X509Certificate2Collection_t4343_il2cpp_TypeInfo,
	&X509Certificate2Enumerator_t4344_il2cpp_TypeInfo,
	&X509CertificateEnumerator_t4345_il2cpp_TypeInfo,
	&X509CertificateCollection_t4227_il2cpp_TypeInfo,
	&X509Chain_t4352_il2cpp_TypeInfo,
	&X509ChainElement_t4350_il2cpp_TypeInfo,
	&X509ChainElementCollection_t4346_il2cpp_TypeInfo,
	&X509ChainElementEnumerator_t4353_il2cpp_TypeInfo,
	&X509ChainPolicy_t4347_il2cpp_TypeInfo,
	&X509ChainStatus_t4349_il2cpp_TypeInfo,
	&X509ChainStatusFlags_t4355_il2cpp_TypeInfo,
	&X509EnhancedKeyUsageExtension_t4356_il2cpp_TypeInfo,
	&X509Extension_t4339_il2cpp_TypeInfo,
	&X509ExtensionCollection_t4340_il2cpp_TypeInfo,
	&X509ExtensionEnumerator_t4357_il2cpp_TypeInfo,
	&X509FindType_t4358_il2cpp_TypeInfo,
	&X509KeyUsageExtension_t4359_il2cpp_TypeInfo,
	&X509KeyUsageFlags_t4360_il2cpp_TypeInfo,
	&X509NameType_t4361_il2cpp_TypeInfo,
	&X509RevocationFlag_t4362_il2cpp_TypeInfo,
	&X509RevocationMode_t4363_il2cpp_TypeInfo,
	&X509Store_t4351_il2cpp_TypeInfo,
	&X509SubjectKeyIdentifierExtension_t4365_il2cpp_TypeInfo,
	&X509SubjectKeyIdentifierHashAlgorithm_t4366_il2cpp_TypeInfo,
	&X509VerificationFlags_t4367_il2cpp_TypeInfo,
	&AsnDecodeStatus_t4368_il2cpp_TypeInfo,
	&AsnEncodedData_t4331_il2cpp_TypeInfo,
	&Oid_t4332_il2cpp_TypeInfo,
	&OidCollection_t4354_il2cpp_TypeInfo,
	&OidEnumerator_t4369_il2cpp_TypeInfo,
	&MatchAppendEvaluator_t4370_il2cpp_TypeInfo,
	&BaseMachine_t4371_il2cpp_TypeInfo,
	&Capture_t2009_il2cpp_TypeInfo,
	&CaptureCollection_t2011_il2cpp_TypeInfo,
	&Group_t2008_il2cpp_TypeInfo,
	&GroupCollection_t2010_il2cpp_TypeInfo,
	&Match_t1658_il2cpp_TypeInfo,
	&Enumerator_t4376_il2cpp_TypeInfo,
	&MatchCollection_t4375_il2cpp_TypeInfo,
	&Adapter_t4377_il2cpp_TypeInfo,
	&Regex_t789_il2cpp_TypeInfo,
	&RegexOptions_t4380_il2cpp_TypeInfo,
	&OpCode_t4381_il2cpp_TypeInfo,
	&OpFlags_t4382_il2cpp_TypeInfo,
	&Position_t4383_il2cpp_TypeInfo,
	&IMachine_t4374_il2cpp_TypeInfo,
	&IMachineFactory_t4379_il2cpp_TypeInfo,
	&Key_t4384_il2cpp_TypeInfo,
	&FactoryCache_t4378_il2cpp_TypeInfo,
	&Node_t4386_il2cpp_TypeInfo,
	&MRUList_t4385_il2cpp_TypeInfo,
	&Category_t4387_il2cpp_TypeInfo,
	&CategoryUtils_t4388_il2cpp_TypeInfo,
	&LinkRef_t4389_il2cpp_TypeInfo,
	&ICompiler_t4454_il2cpp_TypeInfo,
	&InterpreterFactory_t4390_il2cpp_TypeInfo,
	&Link_t4391_il2cpp_TypeInfo,
	&PatternLinkStack_t4392_il2cpp_TypeInfo,
	&PatternCompiler_t4394_il2cpp_TypeInfo,
	&LinkStack_t4393_il2cpp_TypeInfo,
	&Mark_t4395_il2cpp_TypeInfo,
	&IntStack_t4396_il2cpp_TypeInfo,
	&RepeatContext_t4397_il2cpp_TypeInfo,
	&Mode_t4398_il2cpp_TypeInfo,
	&Interpreter_t4401_il2cpp_TypeInfo,
	&Interval_t4402_il2cpp_TypeInfo,
	&Enumerator_t4403_il2cpp_TypeInfo,
	&CostDelegate_t4404_il2cpp_TypeInfo,
	&IntervalCollection_t4405_il2cpp_TypeInfo,
	&Parser_t4406_il2cpp_TypeInfo,
	&QuickSearch_t4399_il2cpp_TypeInfo,
	&ReplacementEvaluator_t4407_il2cpp_TypeInfo,
	&ExpressionCollection_t4408_il2cpp_TypeInfo,
	&Expression_t4409_il2cpp_TypeInfo,
	&CompositeExpression_t4410_il2cpp_TypeInfo,
	&Group_t4411_il2cpp_TypeInfo,
	&RegularExpression_t4412_il2cpp_TypeInfo,
	&CapturingGroup_t4413_il2cpp_TypeInfo,
	&BalancingGroup_t4414_il2cpp_TypeInfo,
	&NonBacktrackingGroup_t4415_il2cpp_TypeInfo,
	&Repetition_t4416_il2cpp_TypeInfo,
	&Assertion_t4417_il2cpp_TypeInfo,
	&CaptureAssertion_t4420_il2cpp_TypeInfo,
	&ExpressionAssertion_t4418_il2cpp_TypeInfo,
	&Alternation_t4421_il2cpp_TypeInfo,
	&Literal_t4419_il2cpp_TypeInfo,
	&PositionAssertion_t4422_il2cpp_TypeInfo,
	&Reference_t4423_il2cpp_TypeInfo,
	&BackslashNumber_t4424_il2cpp_TypeInfo,
	&CharacterClass_t4426_il2cpp_TypeInfo,
	&AnchorInfo_t4427_il2cpp_TypeInfo,
	&DefaultUriParser_t4428_il2cpp_TypeInfo,
	&GenericUriParser_t4430_il2cpp_TypeInfo,
	&UriScheme_t4431_il2cpp_TypeInfo,
	&Uri_t32_il2cpp_TypeInfo,
	&UriFormatException_t4177_il2cpp_TypeInfo,
	&UriHostNameType_t4433_il2cpp_TypeInfo,
	&UriKind_t4434_il2cpp_TypeInfo,
	&UriParser_t4429_il2cpp_TypeInfo,
	&UriPartial_t4435_il2cpp_TypeInfo,
	&UriTypeConverter_t4436_il2cpp_TypeInfo,
	&PropertyChangedEventHandler_t1977_il2cpp_TypeInfo,
	&LocalCertificateSelectionCallback_t4232_il2cpp_TypeInfo,
	&RemoteCertificateValidationCallback_t4231_il2cpp_TypeInfo,
	&BindIPEndPoint_t4312_il2cpp_TypeInfo,
	&HttpContinueDelegate_t4300_il2cpp_TypeInfo,
	&MatchEvaluator_t1451_il2cpp_TypeInfo,
	&U24ArrayTypeU2416_t4437_il2cpp_TypeInfo,
	&U24ArrayTypeU24128_t4438_il2cpp_TypeInfo,
	&U24ArrayTypeU2412_t4439_il2cpp_TypeInfo,
	&U3CPrivateImplementationDetailsU3E_t4440_il2cpp_TypeInfo,
	NULL,
};
extern Il2CppImage g_System_dll_Image;
Il2CppAssembly g_System_Assembly = 
{
	{ "System", NULL, NULL, "\x0\x24\x0\x0\x4\x80\x0\x0\x94\x0\x0\x0\x6\x2\x0\x0\x0\x24\x0\x0\x52\x53\x41\x31\x0\x4\x0\x0\x1\x0\x1\x0\x8D\x56\xC7\x6F\x9E\x86\x49\x38\x30\x49\xF3\x83\xC4\x4B\xE0\xEC\x20\x41\x81\x82\x2A\x6C\x31\xCF\x5E\xB7\xEF\x48\x69\x44\xD0\x32\x18\x8E\xA1\xD3\x92\x7\x63\x71\x2C\xCB\x12\xD7\x5F\xB7\x7E\x98\x11\x14\x9E\x61\x48\xE5\xD3\x2F\xBA\xAB\x37\x61\x1C\x18\x78\xDD\xC1\x9E\x20\xEF\x13\x5D\xC\xB2\xCF\xF2\xBF\xEC\x3D\x11\x58\x10\xC3\xD9\x6\x96\x38\xFE\x4B\xE2\x15\xDB\xF7\x95\x86\x19\x20\xE5\xAB\x6F\x7D\xB2\xE2\xCE\xEF\x13\x6A\xC2\x3D\x5D\xD2\xBF\x3\x17\x0\xAE\xC2\x32\xF6\xC6\xB1\xC7\x85\xB4\x30\x5C\x12\x3B\x37\xAB", { 0x7C, 0xEC, 0x85, 0xD7, 0xBE, 0xA7, 0x79, 0x8E }, 32772, 0, 1, 2, 0, 5, 0 },
	&g_System_dll_Image,
	1,
};
extern const CustomAttributesCacheGenerator g_System_Assembly_AttributeGenerators[101];
static const char* s_StringTable[1209] = 
{
	"comment",
	"tool",
	"version",
	"list",
	"current",
	"index",
	"DataArrayKey",
	"VersionKey",
	"count",
	"syncRoot",
	"first",
	"si",
	"item",
	"container",
	"forward",
	"back",
	"q",
	"idx",
	"ver",
	"_array",
	"_head",
	"_tail",
	"_size",
	"_version",
	"parent",
	"INITIAL_SIZE",
	"caseInsensitive",
	"hashtable",
	"key",
	"value",
	"next",
	"dict",
	"isAtStart",
	"inner",
	"isKeyList",
	"head",
	"comparer",
	"m_collection",
	"m_position",
	"m_ItemsContainer",
	"m_NullKeyItem",
	"m_ItemsArray",
	"m_hashprovider",
	"m_comparer",
	"m_defCapacity",
	"m_readonly",
	"infoCopy",
	"keyscoll",
	"equality_comparer",
	"cachedAllKeys",
	"cachedAll",
	"DefaultValue",
	"state",
	"value__",
	"Always",
	"Never",
	"Advanced",
	"propertyName",
	"Default",
	"converter_type",
	"native_error_code",
	"Frequency",
	"IsHighResolution",
	"elapsed",
	"started",
	"is_running",
	"Decompress",
	"Compress",
	"base_stream",
	"mode",
	"leaveOpen",
	"disposed",
	"feeder",
	"z_stream",
	"io_buffer",
	"data",
	"deflateStream",
	"innerStream",
	"leaveStreamOpen",
	"None",
	"MutualAuthRequested",
	"MutualAuthRequired",
	"RemoteCertificateNotAvailable",
	"RemoteCertificateNameMismatch",
	"RemoteCertificateChainErrors",
	"clientCertificates",
	"<>f__this",
	"ssl_stream",
	"validation_callback",
	"selection_callback",
	"Unknown",
	"Unspecified",
	"Unix",
	"InterNetwork",
	"ImpLink",
	"Pup",
	"Chaos",
	"NS",
	"Ipx",
	"Iso",
	"Osi",
	"Ecma",
	"DataKit",
	"Ccitt",
	"Sna",
	"DecNet",
	"DataLink",
	"Lat",
	"HyperChannel",
	"AppleTalk",
	"NetBios",
	"VoiceView",
	"FireFox",
	"Banyan",
	"Atm",
	"InterNetworkV6",
	"Cluster",
	"Ieee12844",
	"Irda",
	"NetworkDesigners",
	"Max",
	"enabled",
	"seconds",
	"access",
	"socket",
	"owns_socket",
	"readable",
	"writeable",
	"IP",
	"Icmp",
	"Igmp",
	"Ggp",
	"Tcp",
	"Udp",
	"Idp",
	"IPv6",
	"ND",
	"Raw",
	"Spx",
	"SpxII",
	"IPv4",
	"IPv6RoutingHeader",
	"IPv6FragmentHeader",
	"IPSecEncapsulatingSecurityPayload",
	"IPSecAuthenticationHeader",
	"IcmpV6",
	"IPv6NoNextHeader",
	"IPv6DestinationOptions",
	"IPv6HopByHopOptions",
	"SelectRead",
	"SelectWrite",
	"SelectError",
	"Accept",
	"Connect",
	"Receive",
	"ReceiveFrom",
	"Send",
	"SendTo",
	"UsedInManaged1",
	"UsedInManaged2",
	"UsedInProcess",
	"UsedInConsole2",
	"Disconnect",
	"AcceptReceive",
	"ReceiveGeneric",
	"SendGeneric",
	"Sock",
	"handle",
	"callback",
	"waithandle",
	"delayedException",
	"EndPoint",
	"Buffer",
	"Offset",
	"Size",
	"SockFlags",
	"AcceptSocket",
	"Addresses",
	"Port",
	"Buffers",
	"ReuseSocket",
	"acc_socket",
	"total",
	"completed_sync",
	"completed",
	"blocking",
	"error",
	"operation",
	"ares",
	"EndCalled",
	"result",
	"requireSocketSecurity",
	"send_so_far",
	"readQ",
	"writeQ",
	"islistening",
	"MinListenPort",
	"MaxListenPort",
	"ipv4Supported",
	"ipv6Supported",
	"linger_timeout",
	"address_family",
	"socket_type",
	"protocol_type",
	"blocking_thread",
	"isbound",
	"current_bind_count",
	"max_bind_count",
	"connected",
	"closed",
	"seed_endpoint",
	"check_socket_policy",
	"AccessDenied",
	"AddressAlreadyInUse",
	"AddressFamilyNotSupported",
	"AddressNotAvailable",
	"AlreadyInProgress",
	"ConnectionAborted",
	"ConnectionRefused",
	"ConnectionReset",
	"DestinationAddressRequired",
	"Disconnecting",
	"Fault",
	"HostDown",
	"HostNotFound",
	"HostUnreachable",
	"InProgress",
	"Interrupted",
	"InvalidArgument",
	"IOPending",
	"IsConnected",
	"MessageSize",
	"NetworkDown",
	"NetworkReset",
	"NetworkUnreachable",
	"NoBufferSpaceAvailable",
	"NoData",
	"NoRecovery",
	"NotConnected",
	"NotInitialized",
	"NotSocket",
	"OperationAborted",
	"OperationNotSupported",
	"ProcessLimit",
	"ProtocolFamilyNotSupported",
	"ProtocolNotSupported",
	"ProtocolOption",
	"ProtocolType",
	"Shutdown",
	"SocketError",
	"SocketNotSupported",
	"Success",
	"SystemNotReady",
	"TimedOut",
	"TooManyOpenSockets",
	"TryAgain",
	"TypeNotFound",
	"VersionNotSupported",
	"WouldBlock",
	"OutOfBand",
	"Peek",
	"DontRoute",
	"MaxIOVectorLength",
	"Truncated",
	"ControlDataTruncated",
	"Broadcast",
	"Multicast",
	"Partial",
	"Socket",
	"Debug",
	"AcceptConnection",
	"ReuseAddress",
	"KeepAlive",
	"UseLoopback",
	"Linger",
	"OutOfBandInline",
	"DontLinger",
	"ExclusiveAddressUse",
	"SendBuffer",
	"ReceiveBuffer",
	"SendLowWater",
	"ReceiveLowWater",
	"SendTimeout",
	"ReceiveTimeout",
	"Error",
	"Type",
	"MaxConnections",
	"IPOptions",
	"HeaderIncluded",
	"TypeOfService",
	"IpTimeToLive",
	"MulticastInterface",
	"MulticastTimeToLive",
	"MulticastLoopback",
	"AddMembership",
	"DropMembership",
	"DontFragment",
	"AddSourceMembership",
	"DropSourceMembership",
	"BlockSource",
	"UnblockSource",
	"PacketInformation",
	"NoDelay",
	"BsdUrgent",
	"Expedited",
	"NoChecksum",
	"ChecksumCoverage",
	"HopLimit",
	"UpdateAcceptContext",
	"UpdateConnectContext",
	"Both",
	"Stream",
	"Dgram",
	"Rdm",
	"Seqpacket",
	"modules",
	"locker",
	"credential_policy",
	"token",
	"complete",
	"connectionGroupId",
	"module",
	"Body",
	"BodyFinished",
	"Trailer",
	"Bytes",
	"headers",
	"chunkSize",
	"chunkRead",
	"saved",
	"sawCR",
	"gotit",
	"trailerState",
	"chunks",
	"commentUri",
	"discard",
	"domain",
	"expires",
	"httpOnly",
	"name",
	"path",
	"port",
	"ports",
	"secure",
	"timestamp",
	"val",
	"reservedCharsName",
	"portSeparators",
	"tspecials",
	"exact_domain",
	"Comparer",
	"capacity",
	"perDomainCapacity",
	"maxCookieSize",
	"cookies",
	"GZip",
	"Deflate",
	"header",
	"length",
	"pos",
	"keywords",
	"values",
	"rng",
	"lastUse",
	"_nc",
	"hash",
	"parser",
	"_cnonce",
	"cache",
	"webRequest",
	"uri",
	"webHeaders",
	"credentials",
	"connectionGroup",
	"contentLength",
	"fileAccess",
	"method",
	"proxy",
	"preAuthenticate",
	"timeout",
	"webResponse",
	"requestEndEvent",
	"requesting",
	"asyncResponding",
	"responseUri",
	"fileStream",
	"response",
	"waitHandle",
	"exception",
	"stream",
	"synch",
	"request",
	"networkStream",
	"isRead",
	"totalRead",
	"statusCode",
	"statusDescription",
	"Undefined",
	"RestartMarker",
	"ServiceTemporarilyNotAvailable",
	"DataAlreadyOpen",
	"OpeningData",
	"CommandOK",
	"CommandExtraneous",
	"DirectoryStatus",
	"FileStatus",
	"SystemType",
	"SendUserCommand",
	"ClosingControl",
	"ClosingData",
	"EnteringPassive",
	"LoggedInProceed",
	"ServerWantsSecureSession",
	"FileActionOK",
	"PathnameCreated",
	"SendPasswordCommand",
	"NeedLoginAccount",
	"FileCommandPending",
	"ServiceNotAvailable",
	"CantOpenData",
	"ConnectionClosed",
	"ActionNotTakenFileUnavailableOrBusy",
	"ActionAbortedLocalProcessingError",
	"ActionNotTakenInsufficientSpace",
	"CommandSyntaxError",
	"ArgumentSyntaxError",
	"CommandNotImplemented",
	"BadCommandSequence",
	"NotLoggedIn",
	"AccountNeeded",
	"ActionNotTakenFileUnavailable",
	"ActionAbortedUnknownPageType",
	"FileActionAborted",
	"ActionNotTakenFilenameNotAllowed",
	"Before",
	"Scheduled",
	"Connecting",
	"Authenticating",
	"TransferInProgress",
	"Finished",
	"Aborted",
	"requestUri",
	"file_name",
	"servicePoint",
	"origDataStream",
	"dataStream",
	"controlStream",
	"controlReader",
	"hostEntry",
	"localEndPoint",
	"rwTimeout",
	"offset",
	"binary",
	"enableSsl",
	"usePassive",
	"keepAlive",
	"renameTo",
	"requestState",
	"asyncResult",
	"ftpResponse",
	"requestStream",
	"initial_path",
	"supportedCommands",
	"<>f__am$cache1C",
	"<>f__switch$map5",
	"<>f__switch$map6",
	"lastModified",
	"bannerMessage",
	"welcomeMessage",
	"exitMessage",
	"Continue",
	"SwitchingProtocols",
	"OK",
	"Created",
	"Accepted",
	"NonAuthoritativeInformation",
	"NoContent",
	"ResetContent",
	"PartialContent",
	"MultipleChoices",
	"Ambiguous",
	"MovedPermanently",
	"Moved",
	"Found",
	"Redirect",
	"SeeOther",
	"RedirectMethod",
	"NotModified",
	"UseProxy",
	"Unused",
	"TemporaryRedirect",
	"RedirectKeepVerb",
	"BadRequest",
	"Unauthorized",
	"PaymentRequired",
	"Forbidden",
	"NotFound",
	"MethodNotAllowed",
	"NotAcceptable",
	"ProxyAuthenticationRequired",
	"RequestTimeout",
	"Conflict",
	"Gone",
	"LengthRequired",
	"PreconditionFailed",
	"RequestEntityTooLarge",
	"RequestUriTooLong",
	"UnsupportedMediaType",
	"RequestedRangeNotSatisfiable",
	"ExpectationFailed",
	"InternalServerError",
	"NotImplemented",
	"BadGateway",
	"ServiceUnavailable",
	"GatewayTimeout",
	"HttpVersionNotSupported",
	"Version10",
	"Version11",
	"actualUri",
	"hostChanged",
	"allowAutoRedirect",
	"allowBuffering",
	"certificates",
	"continueDelegate",
	"cookieContainer",
	"haveResponse",
	"haveRequest",
	"requestSent",
	"maxAutoRedirect",
	"mediaType",
	"initialMethod",
	"pipelined",
	"usedPreAuth",
	"actualVersion",
	"sendChunked",
	"writeStream",
	"asyncWrite",
	"asyncRead",
	"abortHandler",
	"aborted",
	"redirects",
	"expectContinue",
	"authCompleted",
	"bodyBuffer",
	"bodyBufferLength",
	"getResponseCalled",
	"saved_exc",
	"is_ntlm_auth",
	"finished_reading",
	"WebConnection",
	"auto_decomp",
	"defaultMaxResponseHeadersLength",
	"readWriteTimeout",
	"unsafe_auth_blah",
	"cookieCollection",
	"contentType",
	"cookie_container",
	"cookieExpiresFormats",
	"<>f__switch$map8",
	"m_Address",
	"m_Family",
	"m_Numbers",
	"m_ScopeId",
	"Any",
	"Loopback",
	"IPv6Any",
	"IPv6Loopback",
	"IPv6None",
	"address",
	"addressList",
	"aliases",
	"hostName",
	"prefixLength",
	"scopeId",
	"userName",
	"password",
	"Ssl3",
	"Tls",
	"connectionLimit",
	"maxIdleTime",
	"currentConnections",
	"idleSince",
	"protocolVersion",
	"certificate",
	"clientCertificate",
	"host",
	"usesProxy",
	"groups",
	"sendContinue",
	"useConnect",
	"hostE",
	"useNagle",
	"endPointCallback",
	"use_connect",
	"sender",
	"is_macosx",
	"s_flags",
	"servicePoints",
	"policy",
	"defaultConnectionLimit",
	"maxServicePointIdleTime",
	"maxServicePoints",
	"_checkCRL",
	"_securityProtocol",
	"server_cert_cb",
	"isCompleted",
	"cb",
	"nbytes",
	"innerAsyncResult",
	"callbackDone",
	"exc",
	"buffer",
	"size",
	"AsyncWriteAll",
	"Status",
	"Headers",
	"Content",
	"Connection",
	"sPoint",
	"nstream",
	"socketLock",
	"status",
	"initConn",
	"readDoneDelegate",
	"abortHelper",
	"readState",
	"Data",
	"chunkedRead",
	"chunkStream",
	"queue",
	"reused",
	"position",
	"busy",
	"priority_request",
	"ntlm_credentials",
	"ntlm_authenticated",
	"unsafe_sharing",
	"ssl",
	"certsAvailable",
	"connect_exception",
	"classLock",
	"sslStream",
	"piClient",
	"piServer",
	"piTrustFailure",
	"method_GetSecurityPolicyFromNonMainThread",
	"StatusCode",
	"StatusDescription",
	"Version",
	"Challenge",
	"connections",
	"rnd",
	"crlf",
	"cnc",
	"readBuffer",
	"readBufferOffset",
	"readBufferSize",
	"totalWritten",
	"nextReadCalled",
	"pendingReads",
	"pendingWrites",
	"pending",
	"writeBuffer",
	"requestWritten",
	"headersSent",
	"initRead",
	"read_eof",
	"complete_request_written",
	"read_timeout",
	"write_timeout",
	"NameResolutionFailure",
	"ConnectFailure",
	"ReceiveFailure",
	"SendFailure",
	"PipelineFailure",
	"RequestCanceled",
	"ProtocolError",
	"TrustFailure",
	"SecureChannelFailure",
	"ServerProtocolViolation",
	"KeepAliveFailure",
	"Pending",
	"Timeout",
	"ProxyNameResolutionFailure",
	"UnknownError",
	"MessageLengthLimitExceeded",
	"CacheEntryNotFound",
	"RequestProhibitedByCachePolicy",
	"RequestProhibitedByProxy",
	"restricted",
	"multiValue",
	"restricted_response",
	"internallyCreated",
	"allowed_chars",
	"bypassOnLocal",
	"bypassList",
	"useDefaultCredentials",
	"prefixes",
	"isDefaultWebProxySet",
	"defaultWebProxy",
	"authentication_level",
	"lockobj",
	"Ssl2",
	"Invalid",
	"Proceed",
	"Confirm",
	"Deny",
	"RecoverableTrustFailure",
	"FatalTrustFailure",
	"ResultOtherError",
	"sslsecpolicy",
	"ReadOnly",
	"ReadWrite",
	"MaxAllowed",
	"OpenExistingOnly",
	"IncludeArchived",
	"_key",
	"_keyValue",
	"_params",
	"_oid",
	"<>f__switch$map9",
	"CurrentUser",
	"LocalMachine",
	"AddressBook",
	"AuthRoot",
	"CertificateAuthority",
	"Disallowed",
	"My",
	"Root",
	"TrustedPeople",
	"TrustedPublisher",
	"Reversed",
	"UseSemicolons",
	"DoNotUsePlusSign",
	"DoNotUseQuotes",
	"UseCommas",
	"UseNewLines",
	"UseUTF8Encoding",
	"UseT61Encoding",
	"ForceUTF8Encoding",
	"oid",
	"friendlyName",
	"_certificateAuthority",
	"_hasPathLengthConstraint",
	"_pathLengthConstraint",
	"_status",
	"_archived",
	"_extensions",
	"_name",
	"_serial",
	"_publicKey",
	"issuer_name",
	"subject_name",
	"signature_algorithm",
	"_cert",
	"empty_error",
	"commonName",
	"email",
	"signedData",
	"enumerator",
	"location",
	"elements",
	"Empty",
	"max_path_length",
	"working_issuer_name",
	"working_public_key",
	"bce_restriction",
	"roots",
	"cas",
	"collection",
	"<>f__switch$mapB",
	"<>f__switch$mapC",
	"<>f__switch$mapD",
	"info",
	"compressed_status_flags",
	"_list",
	"apps",
	"cert",
	"store",
	"rflag",
	"vflags",
	"vtime",
	"NoError",
	"NotTimeValid",
	"NotTimeNested",
	"Revoked",
	"NotSignatureValid",
	"NotValidForUsage",
	"UntrustedRoot",
	"RevocationStatusUnknown",
	"Cyclic",
	"InvalidExtension",
	"InvalidPolicyConstraints",
	"InvalidBasicConstraints",
	"InvalidNameConstraints",
	"HasNotSupportedNameConstraint",
	"HasNotDefinedNameConstraint",
	"HasNotPermittedNameConstraint",
	"HasExcludedNameConstraint",
	"PartialChain",
	"CtlNotTimeValid",
	"CtlNotSignatureValid",
	"CtlNotValidForUsage",
	"OfflineRevocation",
	"NoIssuanceChainPolicy",
	"_enhKeyUsage",
	"<>f__switch$mapE",
	"_critical",
	"FindByThumbprint",
	"FindBySubjectName",
	"FindBySubjectDistinguishedName",
	"FindByIssuerName",
	"FindByIssuerDistinguishedName",
	"FindBySerialNumber",
	"FindByTimeValid",
	"FindByTimeNotYetValid",
	"FindByTimeExpired",
	"FindByTemplateName",
	"FindByApplicationPolicy",
	"FindByCertificatePolicy",
	"FindByExtension",
	"FindByKeyUsage",
	"FindBySubjectKeyIdentifier",
	"all",
	"_keyUsages",
	"EncipherOnly",
	"CrlSign",
	"KeyCertSign",
	"KeyAgreement",
	"DataEncipherment",
	"KeyEncipherment",
	"NonRepudiation",
	"DigitalSignature",
	"DecipherOnly",
	"SimpleName",
	"EmailName",
	"UpnName",
	"DnsName",
	"DnsFromAlternativeName",
	"UrlName",
	"EndCertificateOnly",
	"EntireChain",
	"ExcludeRoot",
	"NoCheck",
	"Online",
	"Offline",
	"_location",
	"_flags",
	"<>f__switch$mapF",
	"_subjectKeyIdentifier",
	"_ski",
	"Sha1",
	"ShortSha1",
	"CapiSha1",
	"NoFlag",
	"IgnoreNotTimeValid",
	"IgnoreCtlNotTimeValid",
	"IgnoreNotTimeNested",
	"IgnoreInvalidBasicConstraints",
	"AllowUnknownCertificateAuthority",
	"IgnoreWrongUsage",
	"IgnoreInvalidName",
	"IgnoreInvalidPolicy",
	"IgnoreEndRevocationUnknown",
	"IgnoreCtlSignerRevocationUnknown",
	"IgnoreCertificateAuthorityRevocationUnknown",
	"IgnoreRootRevocationUnknown",
	"AllFlags",
	"NotDecoded",
	"Ok",
	"BadAsn",
	"BadTag",
	"BadLength",
	"InformationNotAvailable",
	"_raw",
	"<>f__switch$mapA",
	"_value",
	"<>f__switch$map10",
	"_readOnly",
	"_collection",
	"_position",
	"needs_groups_or_captures",
	"text",
	"Fail",
	"success",
	"captures",
	"gap",
	"regex",
	"machine",
	"text_length",
	"empty",
	"coll",
	"ev",
	"machineFactory",
	"mapping",
	"group_count",
	"refsInitialized",
	"group_names",
	"group_numbers",
	"pattern",
	"roptions",
	"capnames",
	"caps",
	"capsize",
	"capslist",
	"IgnoreCase",
	"Multiline",
	"ExplicitCapture",
	"Singleline",
	"IgnorePatternWhitespace",
	"RightToLeft",
	"ECMAScript",
	"CultureInvariant",
	"False",
	"True",
	"Position",
	"String",
	"Reference",
	"Character",
	"Category",
	"NotCategory",
	"Range",
	"Set",
	"In",
	"Open",
	"Close",
	"Balance",
	"BalanceStart",
	"IfDefined",
	"Sub",
	"Test",
	"Branch",
	"Jump",
	"Repeat",
	"Until",
	"FastRepeat",
	"Anchor",
	"Info",
	"Negate",
	"Lazy",
	"Start",
	"StartOfString",
	"StartOfLine",
	"StartOfScan",
	"End",
	"EndOfString",
	"EndOfLine",
	"Boundary",
	"NonBoundary",
	"options",
	"factories",
	"mru_list",
	"previous",
	"tail",
	"AnySingleline",
	"Word",
	"Digit",
	"WhiteSpace",
	"EcmaAny",
	"EcmaAnySingleline",
	"EcmaWord",
	"EcmaDigit",
	"EcmaWhiteSpace",
	"UnicodeL",
	"UnicodeM",
	"UnicodeN",
	"UnicodeZ",
	"UnicodeP",
	"UnicodeS",
	"UnicodeC",
	"UnicodeLu",
	"UnicodeLl",
	"UnicodeLt",
	"UnicodeLm",
	"UnicodeLo",
	"UnicodeMn",
	"UnicodeMe",
	"UnicodeMc",
	"UnicodeNd",
	"UnicodeNl",
	"UnicodeNo",
	"UnicodeZs",
	"UnicodeZl",
	"UnicodeZp",
	"UnicodePd",
	"UnicodePs",
	"UnicodePi",
	"UnicodePe",
	"UnicodePf",
	"UnicodePc",
	"UnicodePo",
	"UnicodeSm",
	"UnicodeSc",
	"UnicodeSk",
	"UnicodeSo",
	"UnicodeCc",
	"UnicodeCf",
	"UnicodeCo",
	"UnicodeCs",
	"UnicodeCn",
	"UnicodeBasicLatin",
	"UnicodeLatin1Supplement",
	"UnicodeLatinExtendedA",
	"UnicodeLatinExtendedB",
	"UnicodeIPAExtensions",
	"UnicodeSpacingModifierLetters",
	"UnicodeCombiningDiacriticalMarks",
	"UnicodeGreek",
	"UnicodeCyrillic",
	"UnicodeArmenian",
	"UnicodeHebrew",
	"UnicodeArabic",
	"UnicodeSyriac",
	"UnicodeThaana",
	"UnicodeDevanagari",
	"UnicodeBengali",
	"UnicodeGurmukhi",
	"UnicodeGujarati",
	"UnicodeOriya",
	"UnicodeTamil",
	"UnicodeTelugu",
	"UnicodeKannada",
	"UnicodeMalayalam",
	"UnicodeSinhala",
	"UnicodeThai",
	"UnicodeLao",
	"UnicodeTibetan",
	"UnicodeMyanmar",
	"UnicodeGeorgian",
	"UnicodeHangulJamo",
	"UnicodeEthiopic",
	"UnicodeCherokee",
	"UnicodeUnifiedCanadianAboriginalSyllabics",
	"UnicodeOgham",
	"UnicodeRunic",
	"UnicodeKhmer",
	"UnicodeMongolian",
	"UnicodeLatinExtendedAdditional",
	"UnicodeGreekExtended",
	"UnicodeGeneralPunctuation",
	"UnicodeSuperscriptsandSubscripts",
	"UnicodeCurrencySymbols",
	"UnicodeCombiningMarksforSymbols",
	"UnicodeLetterlikeSymbols",
	"UnicodeNumberForms",
	"UnicodeArrows",
	"UnicodeMathematicalOperators",
	"UnicodeMiscellaneousTechnical",
	"UnicodeControlPictures",
	"UnicodeOpticalCharacterRecognition",
	"UnicodeEnclosedAlphanumerics",
	"UnicodeBoxDrawing",
	"UnicodeBlockElements",
	"UnicodeGeometricShapes",
	"UnicodeMiscellaneousSymbols",
	"UnicodeDingbats",
	"UnicodeBraillePatterns",
	"UnicodeCJKRadicalsSupplement",
	"UnicodeKangxiRadicals",
	"UnicodeIdeographicDescriptionCharacters",
	"UnicodeCJKSymbolsandPunctuation",
	"UnicodeHiragana",
	"UnicodeKatakana",
	"UnicodeBopomofo",
	"UnicodeHangulCompatibilityJamo",
	"UnicodeKanbun",
	"UnicodeBopomofoExtended",
	"UnicodeEnclosedCJKLettersandMonths",
	"UnicodeCJKCompatibility",
	"UnicodeCJKUnifiedIdeographsExtensionA",
	"UnicodeCJKUnifiedIdeographs",
	"UnicodeYiSyllables",
	"UnicodeYiRadicals",
	"UnicodeHangulSyllables",
	"UnicodeHighSurrogates",
	"UnicodeHighPrivateUseSurrogates",
	"UnicodeLowSurrogates",
	"UnicodePrivateUse",
	"UnicodeCJKCompatibilityIdeographs",
	"UnicodeAlphabeticPresentationForms",
	"UnicodeArabicPresentationFormsA",
	"UnicodeCombiningHalfMarks",
	"UnicodeCJKCompatibilityForms",
	"UnicodeSmallFormVariants",
	"UnicodeArabicPresentationFormsB",
	"UnicodeSpecials",
	"UnicodeHalfwidthandFullwidthForms",
	"UnicodeOldItalic",
	"UnicodeGothic",
	"UnicodeDeseret",
	"UnicodeByzantineMusicalSymbols",
	"UnicodeMusicalSymbols",
	"UnicodeMathematicalAlphanumericSymbols",
	"UnicodeCJKUnifiedIdeographsExtensionB",
	"UnicodeCJKCompatibilityIdeographsSupplement",
	"UnicodeTags",
	"LastValue",
	"namesMapping",
	"base_addr",
	"offset_addr",
	"link",
	"pgm",
	"stack",
	"Previous",
	"start",
	"min",
	"max",
	"lazy",
	"expr_pc",
	"Search",
	"Match",
	"Count",
	"program",
	"program_start",
	"text_end",
	"match_min",
	"qs",
	"scan_ptr",
	"repeat",
	"fast",
	"deep",
	"marks",
	"mark_start",
	"mark_end",
	"low",
	"high",
	"contiguous",
	"ptr",
	"intervals",
	"refs",
	"num_groups",
	"str",
	"len",
	"ignore",
	"reverse",
	"shift",
	"shiftExtended",
	"THRESHOLD",
	"n_pieces",
	"pieces",
	"replacement",
	"expressions",
	"gid",
	"balance",
	"alternate",
	"group",
	"literal",
	"negate",
	"ecma",
	"upper_case_characters",
	"pos_cats",
	"neg_cats",
	"expr",
	"width",
	"scheme",
	"delimiter",
	"defaultPort",
	"MaxUriLength",
	"isUnixFilePath",
	"source",
	"query",
	"fragment",
	"userinfo",
	"isUnc",
	"isOpaquePart",
	"isAbsoluteUri",
	"segments",
	"userEscaped",
	"cachedAbsoluteUri",
	"cachedToString",
	"cachedLocalPath",
	"cachedHashCode",
	"hexUpperChars",
	"SchemeDelimiter",
	"UriSchemeFile",
	"UriSchemeFtp",
	"UriSchemeGopher",
	"UriSchemeHttp",
	"UriSchemeHttps",
	"UriSchemeMailto",
	"UriSchemeNews",
	"UriSchemeNntp",
	"UriSchemeNetPipe",
	"UriSchemeNetTcp",
	"schemes",
	"<>f__switch$map12",
	"<>f__switch$map13",
	"<>f__switch$map14",
	"<>f__switch$map15",
	"<>f__switch$map16",
	"Basic",
	"Dns",
	"RelativeOrAbsolute",
	"Absolute",
	"Relative",
	"lock_object",
	"table",
	"scheme_name",
	"default_port",
	"uri_regex",
	"auth_regex",
	"Scheme",
	"Authority",
	"Path",
	"Query",
	"$$field-1",
	"$$field-2",
	"$$field-3",
	"$$field-4",
};
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
static const Il2CppFieldDefinition s_FieldTable[1498] = 
{
	{ 0, 40, offsetof(MonoTODOAttribute_t4195, ___comment_0), 0 } ,
	{ 1, 40, offsetof(GeneratedCodeAttribute_t4196, ___tool_0), 0 } ,
	{ 2, 40, offsetof(GeneratedCodeAttribute_t4196, ___version_1), 0 } ,
	{ 3, 7717, 0, 0 } ,
	{ 4, 7718, 0, 0 } ,
	{ 5, 44, 0, 0 } ,
	{ 2, 6298, 0, 0 } ,
	{ 6, 39, 0, 0 } ,
	{ 7, 39, 0, 0 } ,
	{ 8, 6298, 0, 0 } ,
	{ 2, 6298, 0, 0 } ,
	{ 9, 75, 0, 0 } ,
	{ 10, 7728, 0, 0 } ,
	{ 11, 7729, 0, 0 } ,
	{ 12, 7736, 0, 0 } ,
	{ 13, 7737, 0, 0 } ,
	{ 14, 7738, 0, 0 } ,
	{ 15, 7738, 0, 0 } ,
	{ 16, 7743, 0, 0 } ,
	{ 17, 44, 0, 0 } ,
	{ 18, 44, 0, 0 } ,
	{ 19, 7752, 0, 0 } ,
	{ 20, 44, 0, 0 } ,
	{ 21, 44, 0, 0 } ,
	{ 22, 44, 0, 0 } ,
	{ 23, 44, 0, 0 } ,
	{ 24, 7757, 0, 0 } ,
	{ 17, 44, 0, 0 } ,
	{ 23, 44, 0, 0 } ,
	{ 25, 1920, 0, 0 } ,
	{ 19, 7765, 0, 0 } ,
	{ 22, 44, 0, 0 } ,
	{ 23, 44, 0, 0 } ,
	{ 26, 30, offsetof(HybridDictionary_t4197, ___caseInsensitive_0), 0 } ,
	{ 27, 7052, offsetof(HybridDictionary_t4197, ___hashtable_1), 0 } ,
	{ 3, 7170, offsetof(HybridDictionary_t4197, ___list_2), 0 } ,
	{ 28, 1746, offsetof(DictionaryNode_t4198, ___key_0), 0 } ,
	{ 29, 1746, offsetof(DictionaryNode_t4198, ___value_1), 0 } ,
	{ 30, 7769, offsetof(DictionaryNode_t4198, ___next_2), 0 } ,
	{ 31, 7170, offsetof(DictionaryNodeEnumerator_t4199, ___dict_0), 0 } ,
	{ 32, 30, offsetof(DictionaryNodeEnumerator_t4199, ___isAtStart_1), 0 } ,
	{ 4, 7771, offsetof(DictionaryNodeEnumerator_t4199, ___current_2), 0 } ,
	{ 2, 44, offsetof(DictionaryNodeEnumerator_t4199, ___version_3), 0 } ,
	{ 33, 7773, offsetof(DictionaryNodeCollectionEnumerator_t4201, ___inner_0), 0 } ,
	{ 34, 30, offsetof(DictionaryNodeCollectionEnumerator_t4201, ___isKeyList_1), 0 } ,
	{ 31, 7170, offsetof(DictionaryNodeCollection_t4202, ___dict_0), 0 } ,
	{ 34, 30, offsetof(DictionaryNodeCollection_t4202, ___isKeyList_1), 0 } ,
	{ 8, 44, offsetof(ListDictionary_t4019, ___count_0), 0 } ,
	{ 2, 44, offsetof(ListDictionary_t4019, ___version_1), 0 } ,
	{ 35, 7771, offsetof(ListDictionary_t4019, ___head_2), 0 } ,
	{ 36, 7777, offsetof(ListDictionary_t4019, ___comparer_3), 0 } ,
	{ 28, 74, offsetof(_Item_t4204, ___key_0), 0 } ,
	{ 29, 1746, offsetof(_Item_t4204, ___value_1), 0 } ,
	{ 37, 7781, offsetof(_KeysEnumerator_t4206, ___m_collection_0), 0 } ,
	{ 38, 44, offsetof(_KeysEnumerator_t4206, ___m_position_1), 0 } ,
	{ 37, 7781, offsetof(KeysCollection_t4207, ___m_collection_0), 0 } ,
	{ 39, 7052, offsetof(NameObjectCollectionBase_t4205, ___m_ItemsContainer_0), 0 } ,
	{ 40, 7784, offsetof(NameObjectCollectionBase_t4205, ___m_NullKeyItem_1), 0 } ,
	{ 41, 7020, offsetof(NameObjectCollectionBase_t4205, ___m_ItemsArray_2), 0 } ,
	{ 42, 7785, offsetof(NameObjectCollectionBase_t4205, ___m_hashprovider_3), 0 } ,
	{ 43, 7777, offsetof(NameObjectCollectionBase_t4205, ___m_comparer_4), 0 } ,
	{ 44, 44, offsetof(NameObjectCollectionBase_t4205, ___m_defCapacity_5), 0 } ,
	{ 45, 30, offsetof(NameObjectCollectionBase_t4205, ___m_readonly_6), 0 } ,
	{ 46, 5771, offsetof(NameObjectCollectionBase_t4205, ___infoCopy_7), 0 } ,
	{ 47, 7786, offsetof(NameObjectCollectionBase_t4205, ___keyscoll_8), 0 } ,
	{ 48, 7787, offsetof(NameObjectCollectionBase_t4205, ___equality_comparer_9), 0 } ,
	{ 49, 1477, offsetof(NameValueCollection_t4210, ___cachedAllKeys_10), 0 } ,
	{ 50, 1477, offsetof(NameValueCollection_t4210, ___cachedAll_11), 0 } ,
	{ 51, 75, offsetof(DefaultValueAttribute_t4170, ___DefaultValue_0), 0 } ,
	{ 52, 7792, offsetof(EditorBrowsableAttribute_t2764, ___state_0), 0 } ,
	{ 53, 50, offsetof(EditorBrowsableState_t4211, ___value___1) + sizeof(Object_t), 0 } ,
	{ 54, 7794, 0, 0 } ,
	{ 55, 7794, 0, 0 } ,
	{ 56, 7794, 0, 0 } ,
	{ 57, 40, offsetof(PropertyChangedEventArgs_t2088, ___propertyName_1), 0 } ,
	{ 58, 7800, offsetof(TypeConverterAttribute_t4213_StaticFields, ___Default_0), 0 } ,
	{ 59, 40, offsetof(TypeConverterAttribute_t4213, ___converter_type_1), 0 } ,
	{ 60, 44, offsetof(Win32Exception_t4214, ___native_error_code_11), 0 } ,
	{ 61, 7807, offsetof(Stopwatch_t495_StaticFields, ___Frequency_0), 0 } ,
	{ 62, 7808, offsetof(Stopwatch_t495_StaticFields, ___IsHighResolution_1), 0 } ,
	{ 63, 7809, offsetof(Stopwatch_t495, ___elapsed_2), 0 } ,
	{ 64, 7809, offsetof(Stopwatch_t495, ___started_3), 0 } ,
	{ 65, 30, offsetof(Stopwatch_t495, ___is_running_4), 0 } ,
	{ 53, 50, offsetof(CompressionMode_t4217, ___value___1) + sizeof(Object_t), 0 } ,
	{ 66, 7811, 0, 0 } ,
	{ 67, 7811, 0, 0 } ,
	{ 68, 5086, offsetof(DeflateStream_t4221, ___base_stream_1), 0 } ,
	{ 69, 7817, offsetof(DeflateStream_t4221, ___mode_2), 0 } ,
	{ 70, 30, offsetof(DeflateStream_t4221, ___leaveOpen_3), 0 } ,
	{ 71, 30, offsetof(DeflateStream_t4221, ___disposed_4), 0 } ,
	{ 72, 7818, offsetof(DeflateStream_t4221, ___feeder_5), 0 } ,
	{ 73, 7819, offsetof(DeflateStream_t4221, ___z_stream_6), 0 } ,
	{ 74, 7332, offsetof(DeflateStream_t4221, ___io_buffer_7), 0 } ,
	{ 75, 7820, offsetof(DeflateStream_t4221, ___data_8), 0 } ,
	{ 76, 7822, offsetof(GZipStream_t4223, ___deflateStream_1), 0 } ,
	{ 77, 5086, offsetof(AuthenticatedStream_t4224, ___innerStream_1), 0 } ,
	{ 78, 30, offsetof(AuthenticatedStream_t4224, ___leaveStreamOpen_2), 0 } ,
	{ 53, 50, offsetof(AuthenticationLevel_t4225, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 7826, 0, 0 } ,
	{ 80, 7826, 0, 0 } ,
	{ 81, 7826, 0, 0 } ,
	{ 53, 50, offsetof(SslPolicyErrors_t4226, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 7829, 0, 0 } ,
	{ 82, 7829, 0, 0 } ,
	{ 83, 7829, 0, 0 } ,
	{ 84, 7829, 0, 0 } ,
	{ 85, 7832, offsetof(U3CBeginAuthenticateAsClientU3Ec__AnonStorey7_t4229, ___clientCertificates_0), 0 } ,
	{ 86, 7833, offsetof(U3CBeginAuthenticateAsClientU3Ec__AnonStorey7_t4229, ___U3CU3Ef__this_1), 0 } ,
	{ 87, 7838, offsetof(SslStream_t4228, ___ssl_stream_3), 0 } ,
	{ 88, 7839, offsetof(SslStream_t4228, ___validation_callback_4), 0 } ,
	{ 89, 7840, offsetof(SslStream_t4228, ___selection_callback_5), 0 } ,
	{ 53, 50, offsetof(AddressFamily_t4233, ___value___1) + sizeof(Object_t), 0 } ,
	{ 90, 7842, 0, 0 } ,
	{ 91, 7842, 0, 0 } ,
	{ 92, 7842, 0, 0 } ,
	{ 93, 7842, 0, 0 } ,
	{ 94, 7842, 0, 0 } ,
	{ 95, 7842, 0, 0 } ,
	{ 96, 7842, 0, 0 } ,
	{ 97, 7842, 0, 0 } ,
	{ 98, 7842, 0, 0 } ,
	{ 99, 7842, 0, 0 } ,
	{ 100, 7842, 0, 0 } ,
	{ 101, 7842, 0, 0 } ,
	{ 102, 7842, 0, 0 } ,
	{ 103, 7842, 0, 0 } ,
	{ 104, 7842, 0, 0 } ,
	{ 105, 7842, 0, 0 } ,
	{ 106, 7842, 0, 0 } ,
	{ 107, 7842, 0, 0 } ,
	{ 108, 7842, 0, 0 } ,
	{ 109, 7842, 0, 0 } ,
	{ 110, 7842, 0, 0 } ,
	{ 111, 7842, 0, 0 } ,
	{ 112, 7842, 0, 0 } ,
	{ 113, 7842, 0, 0 } ,
	{ 114, 7842, 0, 0 } ,
	{ 115, 7842, 0, 0 } ,
	{ 116, 7842, 0, 0 } ,
	{ 117, 7842, 0, 0 } ,
	{ 118, 7842, 0, 0 } ,
	{ 119, 7842, 0, 0 } ,
	{ 120, 7842, 0, 0 } ,
	{ 121, 30, offsetof(LingerOption_t4234, ___enabled_0), 0 } ,
	{ 122, 44, offsetof(LingerOption_t4234, ___seconds_1), 0 } ,
	{ 123, 7847, offsetof(NetworkStream_t4237, ___access_1), 0 } ,
	{ 124, 7848, offsetof(NetworkStream_t4237, ___socket_2), 0 } ,
	{ 125, 30, offsetof(NetworkStream_t4237, ___owns_socket_3), 0 } ,
	{ 126, 30, offsetof(NetworkStream_t4237, ___readable_4), 0 } ,
	{ 127, 30, offsetof(NetworkStream_t4237, ___writeable_5), 0 } ,
	{ 71, 30, offsetof(NetworkStream_t4237, ___disposed_6), 0 } ,
	{ 53, 50, offsetof(ProtocolType_t4238, ___value___1) + sizeof(Object_t), 0 } ,
	{ 128, 7850, 0, 0 } ,
	{ 129, 7850, 0, 0 } ,
	{ 130, 7850, 0, 0 } ,
	{ 131, 7850, 0, 0 } ,
	{ 132, 7850, 0, 0 } ,
	{ 95, 7850, 0, 0 } ,
	{ 133, 7850, 0, 0 } ,
	{ 134, 7850, 0, 0 } ,
	{ 135, 7850, 0, 0 } ,
	{ 136, 7850, 0, 0 } ,
	{ 137, 7850, 0, 0 } ,
	{ 91, 7850, 0, 0 } ,
	{ 98, 7850, 0, 0 } ,
	{ 138, 7850, 0, 0 } ,
	{ 139, 7850, 0, 0 } ,
	{ 90, 7850, 0, 0 } ,
	{ 140, 7850, 0, 0 } ,
	{ 141, 7850, 0, 0 } ,
	{ 142, 7850, 0, 0 } ,
	{ 143, 7850, 0, 0 } ,
	{ 144, 7850, 0, 0 } ,
	{ 145, 7850, 0, 0 } ,
	{ 146, 7850, 0, 0 } ,
	{ 147, 7850, 0, 0 } ,
	{ 148, 7850, 0, 0 } ,
	{ 53, 50, offsetof(SelectMode_t4239, ___value___1) + sizeof(Object_t), 0 } ,
	{ 149, 7853, 0, 0 } ,
	{ 150, 7853, 0, 0 } ,
	{ 151, 7853, 0, 0 } ,
	{ 53, 50, offsetof(SocketOperation_t4240, ___value___1) + sizeof(Object_t), 0 } ,
	{ 152, 7856, 0, 0 } ,
	{ 153, 7856, 0, 0 } ,
	{ 154, 7856, 0, 0 } ,
	{ 155, 7856, 0, 0 } ,
	{ 156, 7856, 0, 0 } ,
	{ 157, 7856, 0, 0 } ,
	{ 158, 7856, 0, 0 } ,
	{ 159, 7856, 0, 0 } ,
	{ 160, 7856, 0, 0 } ,
	{ 161, 7856, 0, 0 } ,
	{ 162, 7856, 0, 0 } ,
	{ 163, 7856, 0, 0 } ,
	{ 164, 7856, 0, 0 } ,
	{ 165, 7856, 0, 0 } ,
	{ 166, 7861, offsetof(SocketAsyncResult_t4244, ___Sock_0), 0 } ,
	{ 167, 7862, offsetof(SocketAsyncResult_t4244, ___handle_1), 0 } ,
	{ 52, 75, offsetof(SocketAsyncResult_t4244, ___state_2), 0 } ,
	{ 168, 7863, offsetof(SocketAsyncResult_t4244, ___callback_3), 0 } ,
	{ 169, 7864, offsetof(SocketAsyncResult_t4244, ___waithandle_4), 0 } ,
	{ 170, 4676, offsetof(SocketAsyncResult_t4244, ___delayedException_5), 0 } ,
	{ 171, 7865, offsetof(SocketAsyncResult_t4244, ___EndPoint_6), 0 } ,
	{ 172, 4692, offsetof(SocketAsyncResult_t4244, ___Buffer_7), 0 } ,
	{ 173, 611, offsetof(SocketAsyncResult_t4244, ___Offset_8), 0 } ,
	{ 174, 611, offsetof(SocketAsyncResult_t4244, ___Size_9), 0 } ,
	{ 175, 7866, offsetof(SocketAsyncResult_t4244, ___SockFlags_10), 0 } ,
	{ 176, 7861, offsetof(SocketAsyncResult_t4244, ___AcceptSocket_11), 0 } ,
	{ 177, 7867, offsetof(SocketAsyncResult_t4244, ___Addresses_12), 0 } ,
	{ 178, 611, offsetof(SocketAsyncResult_t4244, ___Port_13), 0 } ,
	{ 179, 7868, offsetof(SocketAsyncResult_t4244, ___Buffers_14), 0 } ,
	{ 180, 558, offsetof(SocketAsyncResult_t4244, ___ReuseSocket_15), 0 } ,
	{ 181, 7848, offsetof(SocketAsyncResult_t4244, ___acc_socket_16), 0 } ,
	{ 182, 44, offsetof(SocketAsyncResult_t4244, ___total_17), 0 } ,
	{ 183, 30, offsetof(SocketAsyncResult_t4244, ___completed_sync_18), 0 } ,
	{ 184, 30, offsetof(SocketAsyncResult_t4244, ___completed_19), 0 } ,
	{ 185, 558, offsetof(SocketAsyncResult_t4244, ___blocking_20), 0 } ,
	{ 186, 592, offsetof(SocketAsyncResult_t4244, ___error_21), 0 } ,
	{ 187, 7870, offsetof(SocketAsyncResult_t4244, ___operation_22), 0 } ,
	{ 188, 1746, offsetof(SocketAsyncResult_t4244, ___ares_23), 0 } ,
	{ 189, 611, offsetof(SocketAsyncResult_t4244, ___EndCalled_24), 0 } ,
	{ 190, 7872, offsetof(Worker_t4245, ___result_0), 0 } ,
	{ 191, 30, offsetof(Worker_t4245, ___requireSocketSecurity_1), 0 } ,
	{ 192, 44, offsetof(Worker_t4245, ___send_so_far_2), 0 } ,
	{ 193, 7154, offsetof(Socket_t4236, ___readQ_0), 0 } ,
	{ 194, 7154, offsetof(Socket_t4236, ___writeQ_1), 0 } ,
	{ 195, 30, offsetof(Socket_t4236, ___islistening_2), 0 } ,
	{ 196, 2636, offsetof(Socket_t4236, ___MinListenPort_3), 0 } ,
	{ 197, 2636, offsetof(Socket_t4236, ___MaxListenPort_4), 0 } ,
	{ 198, 615, offsetof(Socket_t4236_StaticFields, ___ipv4Supported_5), 0 } ,
	{ 199, 615, offsetof(Socket_t4236_StaticFields, ___ipv6Supported_6), 0 } ,
	{ 200, 44, offsetof(Socket_t4236, ___linger_timeout_7), 0 } ,
	{ 124, 7819, offsetof(Socket_t4236, ___socket_8), 0 } ,
	{ 201, 7884, offsetof(Socket_t4236, ___address_family_9), 0 } ,
	{ 202, 7885, offsetof(Socket_t4236, ___socket_type_10), 0 } ,
	{ 203, 7886, offsetof(Socket_t4236, ___protocol_type_11), 0 } ,
	{ 185, 815, offsetof(Socket_t4236, ___blocking_12), 0 } ,
	{ 204, 6297, offsetof(Socket_t4236, ___blocking_thread_13), 0 } ,
	{ 205, 30, offsetof(Socket_t4236, ___isbound_14), 0 } ,
	{ 206, 615, offsetof(Socket_t4236_StaticFields, ___current_bind_count_15), 0 } ,
	{ 207, 2636, offsetof(Socket_t4236, ___max_bind_count_16), 0 } ,
	{ 208, 30, offsetof(Socket_t4236, ___connected_17), 0 } ,
	{ 209, 30, offsetof(Socket_t4236, ___closed_18), 0 } ,
	{ 71, 815, offsetof(Socket_t4236, ___disposed_19), 0 } ,
	{ 210, 7887, offsetof(Socket_t4236, ___seed_endpoint_20), 0 } ,
	{ 211, 7888, offsetof(Socket_t4236_StaticFields, ___check_socket_policy_21), 0 } ,
	{ 53, 50, offsetof(SocketError_t4247, ___value___1) + sizeof(Object_t), 0 } ,
	{ 212, 7890, 0, 0 } ,
	{ 213, 7890, 0, 0 } ,
	{ 214, 7890, 0, 0 } ,
	{ 215, 7890, 0, 0 } ,
	{ 216, 7890, 0, 0 } ,
	{ 217, 7890, 0, 0 } ,
	{ 218, 7890, 0, 0 } ,
	{ 219, 7890, 0, 0 } ,
	{ 220, 7890, 0, 0 } ,
	{ 221, 7890, 0, 0 } ,
	{ 222, 7890, 0, 0 } ,
	{ 223, 7890, 0, 0 } ,
	{ 224, 7890, 0, 0 } ,
	{ 225, 7890, 0, 0 } ,
	{ 226, 7890, 0, 0 } ,
	{ 227, 7890, 0, 0 } ,
	{ 228, 7890, 0, 0 } ,
	{ 229, 7890, 0, 0 } ,
	{ 230, 7890, 0, 0 } ,
	{ 231, 7890, 0, 0 } ,
	{ 232, 7890, 0, 0 } ,
	{ 233, 7890, 0, 0 } ,
	{ 234, 7890, 0, 0 } ,
	{ 235, 7890, 0, 0 } ,
	{ 236, 7890, 0, 0 } ,
	{ 237, 7890, 0, 0 } ,
	{ 238, 7890, 0, 0 } ,
	{ 239, 7890, 0, 0 } ,
	{ 240, 7890, 0, 0 } ,
	{ 241, 7890, 0, 0 } ,
	{ 242, 7890, 0, 0 } ,
	{ 243, 7890, 0, 0 } ,
	{ 244, 7890, 0, 0 } ,
	{ 245, 7890, 0, 0 } ,
	{ 246, 7890, 0, 0 } ,
	{ 247, 7890, 0, 0 } ,
	{ 248, 7890, 0, 0 } ,
	{ 249, 7890, 0, 0 } ,
	{ 250, 7890, 0, 0 } ,
	{ 251, 7890, 0, 0 } ,
	{ 252, 7890, 0, 0 } ,
	{ 253, 7890, 0, 0 } ,
	{ 254, 7890, 0, 0 } ,
	{ 255, 7890, 0, 0 } ,
	{ 256, 7890, 0, 0 } ,
	{ 257, 7890, 0, 0 } ,
	{ 258, 7890, 0, 0 } ,
	{ 53, 50, offsetof(SocketFlags_t4249, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 7893, 0, 0 } ,
	{ 259, 7893, 0, 0 } ,
	{ 260, 7893, 0, 0 } ,
	{ 261, 7893, 0, 0 } ,
	{ 262, 7893, 0, 0 } ,
	{ 263, 7893, 0, 0 } ,
	{ 264, 7893, 0, 0 } ,
	{ 265, 7893, 0, 0 } ,
	{ 266, 7893, 0, 0 } ,
	{ 267, 7893, 0, 0 } ,
	{ 53, 50, offsetof(SocketOptionLevel_t4250, ___value___1) + sizeof(Object_t), 0 } ,
	{ 268, 7895, 0, 0 } ,
	{ 128, 7895, 0, 0 } ,
	{ 135, 7895, 0, 0 } ,
	{ 132, 7895, 0, 0 } ,
	{ 133, 7895, 0, 0 } ,
	{ 53, 50, offsetof(SocketOptionName_t4251, ___value___1) + sizeof(Object_t), 0 } ,
	{ 269, 7897, 0, 0 } ,
	{ 270, 7897, 0, 0 } ,
	{ 271, 7897, 0, 0 } ,
	{ 272, 7897, 0, 0 } ,
	{ 261, 7897, 0, 0 } ,
	{ 265, 7897, 0, 0 } ,
	{ 273, 7897, 0, 0 } ,
	{ 274, 7897, 0, 0 } ,
	{ 275, 7897, 0, 0 } ,
	{ 276, 7897, 0, 0 } ,
	{ 277, 7897, 0, 0 } ,
	{ 278, 7897, 0, 0 } ,
	{ 279, 7897, 0, 0 } ,
	{ 280, 7897, 0, 0 } ,
	{ 281, 7897, 0, 0 } ,
	{ 282, 7897, 0, 0 } ,
	{ 283, 7897, 0, 0 } ,
	{ 284, 7897, 0, 0 } ,
	{ 285, 7897, 0, 0 } ,
	{ 286, 7897, 0, 0 } ,
	{ 287, 7897, 0, 0 } ,
	{ 288, 7897, 0, 0 } ,
	{ 289, 7897, 0, 0 } ,
	{ 290, 7897, 0, 0 } ,
	{ 291, 7897, 0, 0 } ,
	{ 292, 7897, 0, 0 } ,
	{ 293, 7897, 0, 0 } ,
	{ 294, 7897, 0, 0 } ,
	{ 295, 7897, 0, 0 } ,
	{ 296, 7897, 0, 0 } ,
	{ 297, 7897, 0, 0 } ,
	{ 298, 7897, 0, 0 } ,
	{ 299, 7897, 0, 0 } ,
	{ 300, 7897, 0, 0 } ,
	{ 301, 7897, 0, 0 } ,
	{ 302, 7897, 0, 0 } ,
	{ 303, 7897, 0, 0 } ,
	{ 304, 7897, 0, 0 } ,
	{ 305, 7897, 0, 0 } ,
	{ 306, 7897, 0, 0 } ,
	{ 307, 7897, 0, 0 } ,
	{ 308, 7897, 0, 0 } ,
	{ 309, 7897, 0, 0 } ,
	{ 53, 50, offsetof(SocketShutdown_t4252, ___value___1) + sizeof(Object_t), 0 } ,
	{ 154, 7899, 0, 0 } ,
	{ 156, 7899, 0, 0 } ,
	{ 310, 7899, 0, 0 } ,
	{ 53, 50, offsetof(SocketType_t4253, ___value___1) + sizeof(Object_t), 0 } ,
	{ 311, 7901, 0, 0 } ,
	{ 312, 7901, 0, 0 } ,
	{ 137, 7901, 0, 0 } ,
	{ 313, 7901, 0, 0 } ,
	{ 314, 7901, 0, 0 } ,
	{ 90, 7901, 0, 0 } ,
	{ 315, 7903, offsetof(AuthenticationManager_t4255_StaticFields, ___modules_0), 0 } ,
	{ 316, 5005, offsetof(AuthenticationManager_t4255_StaticFields, ___locker_1), 0 } ,
	{ 317, 7904, offsetof(AuthenticationManager_t4255_StaticFields, ___credential_policy_2), 0 } ,
	{ 318, 40, offsetof(Authorization_t4257, ___token_0), 0 } ,
	{ 319, 30, offsetof(Authorization_t4257, ___complete_1), 0 } ,
	{ 320, 40, offsetof(Authorization_t4257, ___connectionGroupId_2), 0 } ,
	{ 321, 7906, offsetof(Authorization_t4257, ___module_3), 0 } ,
	{ 53, 50, offsetof(State_t4259, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 7909, 0, 0 } ,
	{ 322, 7909, 0, 0 } ,
	{ 323, 7909, 0, 0 } ,
	{ 324, 7909, 0, 0 } ,
	{ 325, 4692, offsetof(Chunk_t4260, ___Bytes_0), 0 } ,
	{ 173, 611, offsetof(Chunk_t4260, ___Offset_1), 0 } ,
	{ 326, 7913, offsetof(ChunkStream_t4262, ___headers_0), 0 } ,
	{ 327, 44, offsetof(ChunkStream_t4262, ___chunkSize_1), 0 } ,
	{ 328, 44, offsetof(ChunkStream_t4262, ___chunkRead_2), 0 } ,
	{ 52, 7914, offsetof(ChunkStream_t4262, ___state_3), 0 } ,
	{ 329, 5785, offsetof(ChunkStream_t4262, ___saved_4), 0 } ,
	{ 330, 30, offsetof(ChunkStream_t4262, ___sawCR_5), 0 } ,
	{ 331, 30, offsetof(ChunkStream_t4262, ___gotit_6), 0 } ,
	{ 332, 44, offsetof(ChunkStream_t4262, ___trailerState_7), 0 } ,
	{ 333, 7020, offsetof(ChunkStream_t4262, ___chunks_8), 0 } ,
	{ 0, 40, offsetof(Cookie_t4263, ___comment_0), 0 } ,
	{ 334, 4778, offsetof(Cookie_t4263, ___commentUri_1), 0 } ,
	{ 335, 30, offsetof(Cookie_t4263, ___discard_2), 0 } ,
	{ 336, 40, offsetof(Cookie_t4263, ___domain_3), 0 } ,
	{ 337, 6304, offsetof(Cookie_t4263, ___expires_4), 0 } ,
	{ 338, 30, offsetof(Cookie_t4263, ___httpOnly_5), 0 } ,
	{ 339, 40, offsetof(Cookie_t4263, ___name_6), 0 } ,
	{ 340, 40, offsetof(Cookie_t4263, ___path_7), 0 } ,
	{ 341, 40, offsetof(Cookie_t4263, ___port_8), 0 } ,
	{ 342, 5766, offsetof(Cookie_t4263, ___ports_9), 0 } ,
	{ 343, 30, offsetof(Cookie_t4263, ___secure_10), 0 } ,
	{ 344, 6304, offsetof(Cookie_t4263, ___timestamp_11), 0 } ,
	{ 345, 40, offsetof(Cookie_t4263, ___val_12), 0 } ,
	{ 2, 44, offsetof(Cookie_t4263, ___version_13), 0 } ,
	{ 346, 6943, offsetof(Cookie_t4263_StaticFields, ___reservedCharsName_14), 0 } ,
	{ 347, 6943, offsetof(Cookie_t4263_StaticFields, ___portSeparators_15), 0 } ,
	{ 348, 1466, offsetof(Cookie_t4263_StaticFields, ___tspecials_16), 0 } ,
	{ 349, 30, offsetof(Cookie_t4263, ___exact_domain_17), 0 } ,
	{ 3, 7919, offsetof(CookieCollection_t4266, ___list_0), 0 } ,
	{ 350, 7920, offsetof(CookieCollection_t4266_StaticFields, ___Comparer_1), 0 } ,
	{ 351, 44, offsetof(CookieContainer_t4267, ___capacity_0), 0 } ,
	{ 352, 44, offsetof(CookieContainer_t4267, ___perDomainCapacity_1), 0 } ,
	{ 353, 44, offsetof(CookieContainer_t4267, ___maxCookieSize_2), 0 } ,
	{ 354, 7922, offsetof(CookieContainer_t4267, ___cookies_3), 0 } ,
	{ 53, 50, offsetof(DecompressionMethods_t4269, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 7926, 0, 0 } ,
	{ 355, 7926, 0, 0 } ,
	{ 356, 7926, 0, 0 } ,
	{ 357, 40, offsetof(DigestHeaderParser_t4271, ___header_0), 0 } ,
	{ 358, 44, offsetof(DigestHeaderParser_t4271, ___length_1), 0 } ,
	{ 359, 44, offsetof(DigestHeaderParser_t4271, ___pos_2), 0 } ,
	{ 360, 1576, offsetof(DigestHeaderParser_t4271_StaticFields, ___keywords_3), 0 } ,
	{ 361, 1477, offsetof(DigestHeaderParser_t4271, ___values_4), 0 } ,
	{ 362, 7931, offsetof(DigestSession_t4274_StaticFields, ___rng_0), 0 } ,
	{ 363, 6304, offsetof(DigestSession_t4274, ___lastUse_1), 0 } ,
	{ 364, 44, offsetof(DigestSession_t4274, ____nc_2), 0 } ,
	{ 365, 7932, offsetof(DigestSession_t4274, ___hash_3), 0 } ,
	{ 366, 7933, offsetof(DigestSession_t4274, ___parser_4), 0 } ,
	{ 367, 40, offsetof(DigestSession_t4274, ____cnonce_5), 0 } ,
	{ 368, 7935, offsetof(DigestClient_t4275_StaticFields, ___cache_0), 0 } ,
	{ 369, 7941, offsetof(FileWebStream_t4277, ___webRequest_15), 0 } ,
	{ 370, 4778, offsetof(FileWebRequest_t4276, ___uri_6), 0 } ,
	{ 371, 7945, offsetof(FileWebRequest_t4276, ___webHeaders_7), 0 } ,
	{ 372, 7447, offsetof(FileWebRequest_t4276, ___credentials_8), 0 } ,
	{ 373, 40, offsetof(FileWebRequest_t4276, ___connectionGroup_9), 0 } ,
	{ 374, 7809, offsetof(FileWebRequest_t4276, ___contentLength_10), 0 } ,
	{ 375, 7847, offsetof(FileWebRequest_t4276, ___fileAccess_11), 0 } ,
	{ 376, 40, offsetof(FileWebRequest_t4276, ___method_12), 0 } ,
	{ 377, 7946, offsetof(FileWebRequest_t4276, ___proxy_13), 0 } ,
	{ 378, 30, offsetof(FileWebRequest_t4276, ___preAuthenticate_14), 0 } ,
	{ 379, 44, offsetof(FileWebRequest_t4276, ___timeout_15), 0 } ,
	{ 380, 7947, offsetof(FileWebRequest_t4276, ___webResponse_16), 0 } ,
	{ 381, 7948, offsetof(FileWebRequest_t4276, ___requestEndEvent_17), 0 } ,
	{ 382, 30, offsetof(FileWebRequest_t4276, ___requesting_18), 0 } ,
	{ 383, 30, offsetof(FileWebRequest_t4276, ___asyncResponding_19), 0 } ,
	{ 384, 4778, offsetof(FileWebResponse_t4280, ___responseUri_1), 0 } ,
	{ 385, 7952, offsetof(FileWebResponse_t4280, ___fileStream_2), 0 } ,
	{ 374, 7809, offsetof(FileWebResponse_t4280, ___contentLength_3), 0 } ,
	{ 371, 7945, offsetof(FileWebResponse_t4280, ___webHeaders_4), 0 } ,
	{ 71, 30, offsetof(FileWebResponse_t4280, ___disposed_5), 0 } ,
	{ 386, 7954, offsetof(FtpAsyncResult_t4283, ___response_0), 0 } ,
	{ 387, 7955, offsetof(FtpAsyncResult_t4283, ___waitHandle_1), 0 } ,
	{ 388, 4676, offsetof(FtpAsyncResult_t4283, ___exception_2), 0 } ,
	{ 168, 7863, offsetof(FtpAsyncResult_t4283, ___callback_3), 0 } ,
	{ 389, 5086, offsetof(FtpAsyncResult_t4283, ___stream_4), 0 } ,
	{ 52, 75, offsetof(FtpAsyncResult_t4283, ___state_5), 0 } ,
	{ 184, 30, offsetof(FtpAsyncResult_t4283, ___completed_6), 0 } ,
	{ 390, 30, offsetof(FtpAsyncResult_t4283, ___synch_7), 0 } ,
	{ 316, 75, offsetof(FtpAsyncResult_t4283, ___locker_8), 0 } ,
	{ 391, 7959, offsetof(FtpDataStream_t4287, ___request_1), 0 } ,
	{ 392, 5086, offsetof(FtpDataStream_t4287, ___networkStream_2), 0 } ,
	{ 71, 30, offsetof(FtpDataStream_t4287, ___disposed_3), 0 } ,
	{ 393, 30, offsetof(FtpDataStream_t4287, ___isRead_4), 0 } ,
	{ 394, 44, offsetof(FtpDataStream_t4287, ___totalRead_5), 0 } ,
	{ 395, 7964, offsetof(FtpStatus_t4289, ___statusCode_0), 0 } ,
	{ 396, 4939, offsetof(FtpStatus_t4289, ___statusDescription_1), 0 } ,
	{ 53, 50, offsetof(FtpStatusCode_t4290, ___value___1) + sizeof(Object_t), 0 } ,
	{ 397, 7966, 0, 0 } ,
	{ 398, 7966, 0, 0 } ,
	{ 399, 7966, 0, 0 } ,
	{ 400, 7966, 0, 0 } ,
	{ 401, 7966, 0, 0 } ,
	{ 402, 7966, 0, 0 } ,
	{ 403, 7966, 0, 0 } ,
	{ 404, 7966, 0, 0 } ,
	{ 405, 7966, 0, 0 } ,
	{ 406, 7966, 0, 0 } ,
	{ 407, 7966, 0, 0 } ,
	{ 408, 7966, 0, 0 } ,
	{ 409, 7966, 0, 0 } ,
	{ 410, 7966, 0, 0 } ,
	{ 411, 7966, 0, 0 } ,
	{ 412, 7966, 0, 0 } ,
	{ 413, 7966, 0, 0 } ,
	{ 414, 7966, 0, 0 } ,
	{ 415, 7966, 0, 0 } ,
	{ 416, 7966, 0, 0 } ,
	{ 417, 7966, 0, 0 } ,
	{ 418, 7966, 0, 0 } ,
	{ 419, 7966, 0, 0 } ,
	{ 420, 7966, 0, 0 } ,
	{ 421, 7966, 0, 0 } ,
	{ 422, 7966, 0, 0 } ,
	{ 423, 7966, 0, 0 } ,
	{ 424, 7966, 0, 0 } ,
	{ 425, 7966, 0, 0 } ,
	{ 426, 7966, 0, 0 } ,
	{ 427, 7966, 0, 0 } ,
	{ 428, 7966, 0, 0 } ,
	{ 429, 7966, 0, 0 } ,
	{ 430, 7966, 0, 0 } ,
	{ 431, 7966, 0, 0 } ,
	{ 432, 7966, 0, 0 } ,
	{ 433, 7966, 0, 0 } ,
	{ 53, 50, offsetof(RequestState_t4291, ___value___1) + sizeof(Object_t), 0 } ,
	{ 434, 7968, 0, 0 } ,
	{ 435, 7968, 0, 0 } ,
	{ 436, 7968, 0, 0 } ,
	{ 437, 7968, 0, 0 } ,
	{ 401, 7968, 0, 0 } ,
	{ 438, 7968, 0, 0 } ,
	{ 439, 7968, 0, 0 } ,
	{ 440, 7968, 0, 0 } ,
	{ 284, 7968, 0, 0 } ,
	{ 441, 4778, offsetof(FtpWebRequest_t4286, ___requestUri_6), 0 } ,
	{ 442, 40, offsetof(FtpWebRequest_t4286, ___file_name_7), 0 } ,
	{ 443, 7972, offsetof(FtpWebRequest_t4286, ___servicePoint_8), 0 } ,
	{ 444, 5086, offsetof(FtpWebRequest_t4286, ___origDataStream_9), 0 } ,
	{ 445, 5086, offsetof(FtpWebRequest_t4286, ___dataStream_10), 0 } ,
	{ 446, 5086, offsetof(FtpWebRequest_t4286, ___controlStream_11), 0 } ,
	{ 447, 7973, offsetof(FtpWebRequest_t4286, ___controlReader_12), 0 } ,
	{ 372, 7974, offsetof(FtpWebRequest_t4286, ___credentials_13), 0 } ,
	{ 448, 7975, offsetof(FtpWebRequest_t4286, ___hostEntry_14), 0 } ,
	{ 449, 7976, offsetof(FtpWebRequest_t4286, ___localEndPoint_15), 0 } ,
	{ 377, 7946, offsetof(FtpWebRequest_t4286, ___proxy_16), 0 } ,
	{ 379, 44, offsetof(FtpWebRequest_t4286, ___timeout_17), 0 } ,
	{ 450, 44, offsetof(FtpWebRequest_t4286, ___rwTimeout_18), 0 } ,
	{ 451, 7809, offsetof(FtpWebRequest_t4286, ___offset_19), 0 } ,
	{ 452, 30, offsetof(FtpWebRequest_t4286, ___binary_20), 0 } ,
	{ 453, 30, offsetof(FtpWebRequest_t4286, ___enableSsl_21), 0 } ,
	{ 454, 30, offsetof(FtpWebRequest_t4286, ___usePassive_22), 0 } ,
	{ 455, 30, offsetof(FtpWebRequest_t4286, ___keepAlive_23), 0 } ,
	{ 376, 40, offsetof(FtpWebRequest_t4286, ___method_24), 0 } ,
	{ 456, 40, offsetof(FtpWebRequest_t4286, ___renameTo_25), 0 } ,
	{ 316, 75, offsetof(FtpWebRequest_t4286, ___locker_26), 0 } ,
	{ 457, 7977, offsetof(FtpWebRequest_t4286, ___requestState_27), 0 } ,
	{ 458, 7978, offsetof(FtpWebRequest_t4286, ___asyncResult_28), 0 } ,
	{ 459, 7954, offsetof(FtpWebRequest_t4286, ___ftpResponse_29), 0 } ,
	{ 460, 5086, offsetof(FtpWebRequest_t4286, ___requestStream_30), 0 } ,
	{ 461, 40, offsetof(FtpWebRequest_t4286, ___initial_path_31), 0 } ,
	{ 462, 7305, offsetof(FtpWebRequest_t4286_StaticFields, ___supportedCommands_32), 0 } ,
	{ 168, 7839, offsetof(FtpWebRequest_t4286, ___callback_33), 0 } ,
	{ 463, 7979, offsetof(FtpWebRequest_t4286_StaticFields, ___U3CU3Ef__amU24cache1C_34), 33 } ,
	{ 464, 6504, offsetof(FtpWebRequest_t4286_StaticFields, ___U3CU3Ef__switchU24map5_35), 34 } ,
	{ 465, 6504, offsetof(FtpWebRequest_t4286_StaticFields, ___U3CU3Ef__switchU24map6_36), 35 } ,
	{ 389, 5086, offsetof(FtpWebResponse_t4282, ___stream_1), 0 } ,
	{ 370, 4778, offsetof(FtpWebResponse_t4282, ___uri_2), 0 } ,
	{ 395, 7981, offsetof(FtpWebResponse_t4282, ___statusCode_3), 0 } ,
	{ 466, 6304, offsetof(FtpWebResponse_t4282, ___lastModified_4), 0 } ,
	{ 467, 40, offsetof(FtpWebResponse_t4282, ___bannerMessage_5), 0 } ,
	{ 468, 40, offsetof(FtpWebResponse_t4282, ___welcomeMessage_6), 0 } ,
	{ 469, 40, offsetof(FtpWebResponse_t4282, ___exitMessage_7), 0 } ,
	{ 396, 40, offsetof(FtpWebResponse_t4282, ___statusDescription_8), 0 } ,
	{ 376, 40, offsetof(FtpWebResponse_t4282, ___method_9), 0 } ,
	{ 71, 30, offsetof(FtpWebResponse_t4282, ___disposed_10), 0 } ,
	{ 391, 7959, offsetof(FtpWebResponse_t4282, ___request_11), 0 } ,
	{ 374, 7982, offsetof(FtpWebResponse_t4282, ___contentLength_12), 0 } ,
	{ 53, 50, offsetof(HttpStatusCode_t4298, ___value___1) + sizeof(Object_t), 0 } ,
	{ 470, 7988, 0, 0 } ,
	{ 471, 7988, 0, 0 } ,
	{ 472, 7988, 0, 0 } ,
	{ 473, 7988, 0, 0 } ,
	{ 474, 7988, 0, 0 } ,
	{ 475, 7988, 0, 0 } ,
	{ 476, 7988, 0, 0 } ,
	{ 477, 7988, 0, 0 } ,
	{ 478, 7988, 0, 0 } ,
	{ 479, 7988, 0, 0 } ,
	{ 480, 7988, 0, 0 } ,
	{ 481, 7988, 0, 0 } ,
	{ 482, 7988, 0, 0 } ,
	{ 483, 7988, 0, 0 } ,
	{ 484, 7988, 0, 0 } ,
	{ 485, 7988, 0, 0 } ,
	{ 486, 7988, 0, 0 } ,
	{ 487, 7988, 0, 0 } ,
	{ 488, 7988, 0, 0 } ,
	{ 489, 7988, 0, 0 } ,
	{ 490, 7988, 0, 0 } ,
	{ 491, 7988, 0, 0 } ,
	{ 492, 7988, 0, 0 } ,
	{ 493, 7988, 0, 0 } ,
	{ 494, 7988, 0, 0 } ,
	{ 495, 7988, 0, 0 } ,
	{ 496, 7988, 0, 0 } ,
	{ 497, 7988, 0, 0 } ,
	{ 498, 7988, 0, 0 } ,
	{ 499, 7988, 0, 0 } ,
	{ 500, 7988, 0, 0 } ,
	{ 501, 7988, 0, 0 } ,
	{ 502, 7988, 0, 0 } ,
	{ 503, 7988, 0, 0 } ,
	{ 504, 7988, 0, 0 } ,
	{ 505, 7988, 0, 0 } ,
	{ 506, 7988, 0, 0 } ,
	{ 507, 7988, 0, 0 } ,
	{ 508, 7988, 0, 0 } ,
	{ 509, 7988, 0, 0 } ,
	{ 510, 7988, 0, 0 } ,
	{ 511, 7988, 0, 0 } ,
	{ 512, 7988, 0, 0 } ,
	{ 513, 7988, 0, 0 } ,
	{ 514, 7988, 0, 0 } ,
	{ 515, 7988, 0, 0 } ,
	{ 516, 7990, offsetof(HttpVersion_t4299_StaticFields, ___Version10_0), 0 } ,
	{ 517, 7990, offsetof(HttpVersion_t4299_StaticFields, ___Version11_1), 0 } ,
	{ 441, 4778, offsetof(HttpWebRequest_t4305, ___requestUri_6), 0 } ,
	{ 518, 4778, offsetof(HttpWebRequest_t4305, ___actualUri_7), 0 } ,
	{ 519, 30, offsetof(HttpWebRequest_t4305, ___hostChanged_8), 0 } ,
	{ 520, 30, offsetof(HttpWebRequest_t4305, ___allowAutoRedirect_9), 0 } ,
	{ 521, 30, offsetof(HttpWebRequest_t4305, ___allowBuffering_10), 0 } ,
	{ 522, 7992, offsetof(HttpWebRequest_t4305, ___certificates_11), 0 } ,
	{ 373, 40, offsetof(HttpWebRequest_t4305, ___connectionGroup_12), 0 } ,
	{ 374, 7809, offsetof(HttpWebRequest_t4305, ___contentLength_13), 0 } ,
	{ 523, 7993, offsetof(HttpWebRequest_t4305, ___continueDelegate_14), 0 } ,
	{ 524, 7994, offsetof(HttpWebRequest_t4305, ___cookieContainer_15), 0 } ,
	{ 372, 7447, offsetof(HttpWebRequest_t4305, ___credentials_16), 0 } ,
	{ 525, 30, offsetof(HttpWebRequest_t4305, ___haveResponse_17), 0 } ,
	{ 526, 30, offsetof(HttpWebRequest_t4305, ___haveRequest_18), 0 } ,
	{ 527, 30, offsetof(HttpWebRequest_t4305, ___requestSent_19), 0 } ,
	{ 371, 7945, offsetof(HttpWebRequest_t4305, ___webHeaders_20), 0 } ,
	{ 455, 30, offsetof(HttpWebRequest_t4305, ___keepAlive_21), 0 } ,
	{ 528, 44, offsetof(HttpWebRequest_t4305, ___maxAutoRedirect_22), 0 } ,
	{ 529, 40, offsetof(HttpWebRequest_t4305, ___mediaType_23), 0 } ,
	{ 376, 40, offsetof(HttpWebRequest_t4305, ___method_24), 0 } ,
	{ 530, 40, offsetof(HttpWebRequest_t4305, ___initialMethod_25), 0 } ,
	{ 531, 30, offsetof(HttpWebRequest_t4305, ___pipelined_26), 0 } ,
	{ 378, 30, offsetof(HttpWebRequest_t4305, ___preAuthenticate_27), 0 } ,
	{ 532, 30, offsetof(HttpWebRequest_t4305, ___usedPreAuth_28), 0 } ,
	{ 2, 7995, offsetof(HttpWebRequest_t4305, ___version_29), 0 } ,
	{ 533, 7995, offsetof(HttpWebRequest_t4305, ___actualVersion_30), 0 } ,
	{ 377, 7946, offsetof(HttpWebRequest_t4305, ___proxy_31), 0 } ,
	{ 534, 30, offsetof(HttpWebRequest_t4305, ___sendChunked_32), 0 } ,
	{ 443, 7972, offsetof(HttpWebRequest_t4305, ___servicePoint_33), 0 } ,
	{ 379, 44, offsetof(HttpWebRequest_t4305, ___timeout_34), 0 } ,
	{ 535, 7996, offsetof(HttpWebRequest_t4305, ___writeStream_35), 0 } ,
	{ 380, 7997, offsetof(HttpWebRequest_t4305, ___webResponse_36), 0 } ,
	{ 536, 7998, offsetof(HttpWebRequest_t4305, ___asyncWrite_37), 0 } ,
	{ 537, 7998, offsetof(HttpWebRequest_t4305, ___asyncRead_38), 0 } ,
	{ 538, 3237, offsetof(HttpWebRequest_t4305, ___abortHandler_39), 0 } ,
	{ 539, 44, offsetof(HttpWebRequest_t4305, ___aborted_40), 0 } ,
	{ 540, 44, offsetof(HttpWebRequest_t4305, ___redirects_41), 0 } ,
	{ 541, 30, offsetof(HttpWebRequest_t4305, ___expectContinue_42), 0 } ,
	{ 542, 30, offsetof(HttpWebRequest_t4305, ___authCompleted_43), 0 } ,
	{ 543, 7332, offsetof(HttpWebRequest_t4305, ___bodyBuffer_44), 0 } ,
	{ 544, 44, offsetof(HttpWebRequest_t4305, ___bodyBufferLength_45), 0 } ,
	{ 545, 30, offsetof(HttpWebRequest_t4305, ___getResponseCalled_46), 0 } ,
	{ 546, 4676, offsetof(HttpWebRequest_t4305, ___saved_exc_47), 0 } ,
	{ 316, 75, offsetof(HttpWebRequest_t4305, ___locker_48), 0 } ,
	{ 547, 30, offsetof(HttpWebRequest_t4305, ___is_ntlm_auth_49), 0 } ,
	{ 548, 30, offsetof(HttpWebRequest_t4305, ___finished_reading_50), 0 } ,
	{ 549, 7999, offsetof(HttpWebRequest_t4305, ___WebConnection_51), 0 } ,
	{ 550, 8000, offsetof(HttpWebRequest_t4305, ___auto_decomp_52), 0 } ,
	{ 551, 615, offsetof(HttpWebRequest_t4305_StaticFields, ___defaultMaxResponseHeadersLength_53), 0 } ,
	{ 552, 44, offsetof(HttpWebRequest_t4305, ___readWriteTimeout_54), 0 } ,
	{ 553, 30, offsetof(HttpWebRequest_t4305, ___unsafe_auth_blah_55), 0 } ,
	{ 370, 4778, offsetof(HttpWebResponse_t4302, ___uri_1), 0 } ,
	{ 371, 7945, offsetof(HttpWebResponse_t4302, ___webHeaders_2), 0 } ,
	{ 554, 7922, offsetof(HttpWebResponse_t4302, ___cookieCollection_3), 0 } ,
	{ 376, 40, offsetof(HttpWebResponse_t4302, ___method_4), 0 } ,
	{ 2, 7995, offsetof(HttpWebResponse_t4302, ___version_5), 0 } ,
	{ 395, 8002, offsetof(HttpWebResponse_t4302, ___statusCode_6), 0 } ,
	{ 396, 40, offsetof(HttpWebResponse_t4302, ___statusDescription_7), 0 } ,
	{ 374, 7809, offsetof(HttpWebResponse_t4302, ___contentLength_8), 0 } ,
	{ 555, 40, offsetof(HttpWebResponse_t4302, ___contentType_9), 0 } ,
	{ 556, 7994, offsetof(HttpWebResponse_t4302, ___cookie_container_10), 0 } ,
	{ 71, 30, offsetof(HttpWebResponse_t4302, ___disposed_11), 0 } ,
	{ 389, 5086, offsetof(HttpWebResponse_t4302, ___stream_12), 0 } ,
	{ 557, 1477, offsetof(HttpWebResponse_t4302, ___cookieExpiresFormats_13), 0 } ,
	{ 558, 6504, offsetof(HttpWebResponse_t4302_StaticFields, ___U3CU3Ef__switchU24map8_14), 42 } ,
	{ 357, 40, offsetof(CookieParser_t4306, ___header_0), 0 } ,
	{ 359, 44, offsetof(CookieParser_t4306, ___pos_1), 0 } ,
	{ 358, 44, offsetof(CookieParser_t4306, ___length_2), 0 } ,
	{ 559, 7809, offsetof(IPAddress_t780, ___m_Address_0), 0 } ,
	{ 560, 7884, offsetof(IPAddress_t780, ___m_Family_1), 0 } ,
	{ 561, 8011, offsetof(IPAddress_t780, ___m_Numbers_2), 0 } ,
	{ 562, 7809, offsetof(IPAddress_t780, ___m_ScopeId_3), 0 } ,
	{ 563, 8012, offsetof(IPAddress_t780_StaticFields, ___Any_4), 0 } ,
	{ 265, 8012, offsetof(IPAddress_t780_StaticFields, ___Broadcast_5), 0 } ,
	{ 564, 8012, offsetof(IPAddress_t780_StaticFields, ___Loopback_6), 0 } ,
	{ 79, 8012, offsetof(IPAddress_t780_StaticFields, ___None_7), 0 } ,
	{ 565, 8012, offsetof(IPAddress_t780_StaticFields, ___IPv6Any_8), 0 } ,
	{ 566, 8012, offsetof(IPAddress_t780_StaticFields, ___IPv6Loopback_9), 0 } ,
	{ 567, 8012, offsetof(IPAddress_t780_StaticFields, ___IPv6None_10), 0 } ,
	{ 568, 8014, offsetof(IPEndPoint_t4295, ___address_0), 0 } ,
	{ 341, 44, offsetof(IPEndPoint_t4295, ___port_1), 0 } ,
	{ 569, 8016, offsetof(IPHostEntry_t4294, ___addressList_0), 0 } ,
	{ 570, 1477, offsetof(IPHostEntry_t4294, ___aliases_1), 0 } ,
	{ 571, 40, offsetof(IPHostEntry_t4294, ___hostName_2), 0 } ,
	{ 568, 8011, offsetof(IPv6Address_t4308, ___address_0), 0 } ,
	{ 572, 44, offsetof(IPv6Address_t4308, ___prefixLength_1), 0 } ,
	{ 573, 7809, offsetof(IPv6Address_t4308, ___scopeId_2), 0 } ,
	{ 564, 8019, offsetof(IPv6Address_t4308_StaticFields, ___Loopback_3), 0 } ,
	{ 91, 8019, offsetof(IPv6Address_t4308_StaticFields, ___Unspecified_4), 0 } ,
	{ 574, 40, offsetof(NetworkCredential_t4293, ___userName_0), 0 } ,
	{ 575, 40, offsetof(NetworkCredential_t4293, ___password_1), 0 } ,
	{ 336, 40, offsetof(NetworkCredential_t4293, ___domain_2), 0 } ,
	{ 53, 50, offsetof(SecurityProtocolType_t4310, ___value___1) + sizeof(Object_t), 0 } ,
	{ 576, 8025, 0, 0 } ,
	{ 577, 8025, 0, 0 } ,
	{ 370, 4778, offsetof(ServicePoint_t4292, ___uri_0), 0 } ,
	{ 578, 44, offsetof(ServicePoint_t4292, ___connectionLimit_1), 0 } ,
	{ 579, 44, offsetof(ServicePoint_t4292, ___maxIdleTime_2), 0 } ,
	{ 580, 44, offsetof(ServicePoint_t4292, ___currentConnections_3), 0 } ,
	{ 581, 6304, offsetof(ServicePoint_t4292, ___idleSince_4), 0 } ,
	{ 582, 7995, offsetof(ServicePoint_t4292, ___protocolVersion_5), 0 } ,
	{ 583, 8028, offsetof(ServicePoint_t4292, ___certificate_6), 0 } ,
	{ 584, 8028, offsetof(ServicePoint_t4292, ___clientCertificate_7), 0 } ,
	{ 585, 7975, offsetof(ServicePoint_t4292, ___host_8), 0 } ,
	{ 586, 30, offsetof(ServicePoint_t4292, ___usesProxy_9), 0 } ,
	{ 587, 7052, offsetof(ServicePoint_t4292, ___groups_10), 0 } ,
	{ 588, 30, offsetof(ServicePoint_t4292, ___sendContinue_11), 0 } ,
	{ 589, 30, offsetof(ServicePoint_t4292, ___useConnect_12), 0 } ,
	{ 316, 75, offsetof(ServicePoint_t4292, ___locker_13), 0 } ,
	{ 590, 75, offsetof(ServicePoint_t4292, ___hostE_14), 0 } ,
	{ 591, 30, offsetof(ServicePoint_t4292, ___useNagle_15), 0 } ,
	{ 592, 8029, offsetof(ServicePoint_t4292, ___endPointCallback_16), 0 } ,
	{ 370, 4778, offsetof(SPKey_t4313, ___uri_0), 0 } ,
	{ 593, 30, offsetof(SPKey_t4313, ___use_connect_1), 0 } ,
	{ 594, 75, offsetof(ChainValidationHelper_t4314, ___sender_0), 0 } ,
	{ 585, 40, offsetof(ChainValidationHelper_t4314, ___host_1), 0 } ,
	{ 595, 605, offsetof(ChainValidationHelper_t4314_StaticFields, ___is_macosx_2), 0 } ,
	{ 596, 8033, offsetof(ChainValidationHelper_t4314_StaticFields, ___s_flags_3), 0 } ,
	{ 597, 8035, offsetof(ServicePointManager_t4316_StaticFields, ___servicePoints_0), 0 } ,
	{ 598, 8036, offsetof(ServicePointManager_t4316_StaticFields, ___policy_1), 0 } ,
	{ 599, 615, offsetof(ServicePointManager_t4316_StaticFields, ___defaultConnectionLimit_2), 0 } ,
	{ 600, 615, offsetof(ServicePointManager_t4316_StaticFields, ___maxServicePointIdleTime_3), 0 } ,
	{ 601, 615, offsetof(ServicePointManager_t4316_StaticFields, ___maxServicePoints_4), 0 } ,
	{ 602, 605, offsetof(ServicePointManager_t4316_StaticFields, ____checkCRL_5), 0 } ,
	{ 603, 8037, offsetof(ServicePointManager_t4316_StaticFields, ____securityProtocol_6), 0 } ,
	{ 541, 605, offsetof(ServicePointManager_t4316_StaticFields, ___expectContinue_7), 0 } ,
	{ 591, 605, offsetof(ServicePointManager_t4316_StaticFields, ___useNagle_8), 0 } ,
	{ 604, 7979, offsetof(ServicePointManager_t4316_StaticFields, ___server_cert_cb_9), 0 } ,
	{ 75, 7332, offsetof(SocketAddress_t4317, ___data_0), 0 } ,
	{ 167, 7955, offsetof(WebAsyncResult_t4303, ___handle_0), 0 } ,
	{ 390, 30, offsetof(WebAsyncResult_t4303, ___synch_1), 0 } ,
	{ 605, 30, offsetof(WebAsyncResult_t4303, ___isCompleted_2), 0 } ,
	{ 606, 7863, offsetof(WebAsyncResult_t4303, ___cb_3), 0 } ,
	{ 52, 75, offsetof(WebAsyncResult_t4303, ___state_4), 0 } ,
	{ 607, 44, offsetof(WebAsyncResult_t4303, ___nbytes_5), 0 } ,
	{ 608, 8039, offsetof(WebAsyncResult_t4303, ___innerAsyncResult_6), 0 } ,
	{ 609, 30, offsetof(WebAsyncResult_t4303, ___callbackDone_7), 0 } ,
	{ 610, 4676, offsetof(WebAsyncResult_t4303, ___exc_8), 0 } ,
	{ 386, 7997, offsetof(WebAsyncResult_t4303, ___response_9), 0 } ,
	{ 535, 5086, offsetof(WebAsyncResult_t4303, ___writeStream_10), 0 } ,
	{ 611, 7332, offsetof(WebAsyncResult_t4303, ___buffer_11), 0 } ,
	{ 451, 44, offsetof(WebAsyncResult_t4303, ___offset_12), 0 } ,
	{ 612, 44, offsetof(WebAsyncResult_t4303, ___size_13), 0 } ,
	{ 316, 75, offsetof(WebAsyncResult_t4303, ___locker_14), 0 } ,
	{ 189, 558, offsetof(WebAsyncResult_t4303, ___EndCalled_15), 0 } ,
	{ 613, 558, offsetof(WebAsyncResult_t4303, ___AsyncWriteAll_16), 0 } ,
	{ 53, 50, offsetof(ReadState_t4318, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 8041, 0, 0 } ,
	{ 614, 8041, 0, 0 } ,
	{ 615, 8041, 0, 0 } ,
	{ 616, 8041, 0, 0 } ,
	{ 617, 8044, offsetof(AbortHelper_t4319, ___Connection_0), 0 } ,
	{ 618, 7972, offsetof(WebConnection_t4304, ___sPoint_0), 0 } ,
	{ 619, 5086, offsetof(WebConnection_t4304, ___nstream_1), 0 } ,
	{ 124, 7848, offsetof(WebConnection_t4304, ___socket_2), 0 } ,
	{ 620, 75, offsetof(WebConnection_t4304, ___socketLock_3), 0 } ,
	{ 621, 8047, offsetof(WebConnection_t4304, ___status_4), 0 } ,
	{ 622, 8048, offsetof(WebConnection_t4304, ___initConn_5), 0 } ,
	{ 455, 30, offsetof(WebConnection_t4304, ___keepAlive_6), 0 } ,
	{ 611, 7332, offsetof(WebConnection_t4304, ___buffer_7), 0 } ,
	{ 623, 8049, offsetof(WebConnection_t4304_StaticFields, ___readDoneDelegate_8), 0 } ,
	{ 538, 3237, offsetof(WebConnection_t4304, ___abortHandler_9), 0 } ,
	{ 624, 8050, offsetof(WebConnection_t4304, ___abortHelper_10), 0 } ,
	{ 625, 8051, offsetof(WebConnection_t4304, ___readState_11), 0 } ,
	{ 626, 8052, offsetof(WebConnection_t4304, ___Data_12), 0 } ,
	{ 627, 30, offsetof(WebConnection_t4304, ___chunkedRead_13), 0 } ,
	{ 628, 8053, offsetof(WebConnection_t4304, ___chunkStream_14), 0 } ,
	{ 629, 7154, offsetof(WebConnection_t4304, ___queue_15), 0 } ,
	{ 630, 30, offsetof(WebConnection_t4304, ___reused_16), 0 } ,
	{ 631, 44, offsetof(WebConnection_t4304, ___position_17), 0 } ,
	{ 632, 30, offsetof(WebConnection_t4304, ___busy_18), 0 } ,
	{ 633, 8054, offsetof(WebConnection_t4304, ___priority_request_19), 0 } ,
	{ 634, 7974, offsetof(WebConnection_t4304, ___ntlm_credentials_20), 0 } ,
	{ 635, 30, offsetof(WebConnection_t4304, ___ntlm_authenticated_21), 0 } ,
	{ 636, 30, offsetof(WebConnection_t4304, ___unsafe_sharing_22), 0 } ,
	{ 637, 30, offsetof(WebConnection_t4304, ___ssl_23), 0 } ,
	{ 638, 30, offsetof(WebConnection_t4304, ___certsAvailable_24), 0 } ,
	{ 639, 4676, offsetof(WebConnection_t4304, ___connect_exception_25), 0 } ,
	{ 640, 5005, offsetof(WebConnection_t4304_StaticFields, ___classLock_26), 0 } ,
	{ 641, 8055, offsetof(WebConnection_t4304_StaticFields, ___sslStream_27), 0 } ,
	{ 642, 8056, offsetof(WebConnection_t4304_StaticFields, ___piClient_28), 0 } ,
	{ 643, 8056, offsetof(WebConnection_t4304_StaticFields, ___piServer_29), 0 } ,
	{ 644, 8056, offsetof(WebConnection_t4304_StaticFields, ___piTrustFailure_30), 0 } ,
	{ 645, 7888, offsetof(WebConnection_t4304_StaticFields, ___method_GetSecurityPolicyFromNonMainThread_31), 0 } ,
	{ 391, 8058, offsetof(WebConnectionData_t4320, ___request_0), 0 } ,
	{ 646, 611, offsetof(WebConnectionData_t4320, ___StatusCode_1), 0 } ,
	{ 647, 74, offsetof(WebConnectionData_t4320, ___StatusDescription_2), 0 } ,
	{ 615, 8059, offsetof(WebConnectionData_t4320, ___Headers_3), 0 } ,
	{ 648, 8060, offsetof(WebConnectionData_t4320, ___Version_4), 0 } ,
	{ 389, 4693, offsetof(WebConnectionData_t4320, ___stream_5), 0 } ,
	{ 649, 74, offsetof(WebConnectionData_t4320, ___Challenge_6), 0 } ,
	{ 618, 7972, offsetof(WebConnectionGroup_t4321, ___sPoint_0), 0 } ,
	{ 339, 40, offsetof(WebConnectionGroup_t4321, ___name_1), 0 } ,
	{ 650, 7020, offsetof(WebConnectionGroup_t4321, ___connections_2), 0 } ,
	{ 651, 874, offsetof(WebConnectionGroup_t4321, ___rnd_3), 0 } ,
	{ 629, 7154, offsetof(WebConnectionGroup_t4321, ___queue_4), 0 } ,
	{ 652, 6913, offsetof(WebConnectionStream_t4301_StaticFields, ___crlf_1), 0 } ,
	{ 393, 30, offsetof(WebConnectionStream_t4301, ___isRead_2), 0 } ,
	{ 653, 8063, offsetof(WebConnectionStream_t4301, ___cnc_3), 0 } ,
	{ 391, 8054, offsetof(WebConnectionStream_t4301, ___request_4), 0 } ,
	{ 654, 7332, offsetof(WebConnectionStream_t4301, ___readBuffer_5), 0 } ,
	{ 655, 44, offsetof(WebConnectionStream_t4301, ___readBufferOffset_6), 0 } ,
	{ 656, 44, offsetof(WebConnectionStream_t4301, ___readBufferSize_7), 0 } ,
	{ 374, 44, offsetof(WebConnectionStream_t4301, ___contentLength_8), 0 } ,
	{ 394, 44, offsetof(WebConnectionStream_t4301, ___totalRead_9), 0 } ,
	{ 657, 7809, offsetof(WebConnectionStream_t4301, ___totalWritten_10), 0 } ,
	{ 658, 30, offsetof(WebConnectionStream_t4301, ___nextReadCalled_11), 0 } ,
	{ 659, 44, offsetof(WebConnectionStream_t4301, ___pendingReads_12), 0 } ,
	{ 660, 44, offsetof(WebConnectionStream_t4301, ___pendingWrites_13), 0 } ,
	{ 661, 7955, offsetof(WebConnectionStream_t4301, ___pending_14), 0 } ,
	{ 521, 30, offsetof(WebConnectionStream_t4301, ___allowBuffering_15), 0 } ,
	{ 534, 30, offsetof(WebConnectionStream_t4301, ___sendChunked_16), 0 } ,
	{ 662, 8064, offsetof(WebConnectionStream_t4301, ___writeBuffer_17), 0 } ,
	{ 663, 30, offsetof(WebConnectionStream_t4301, ___requestWritten_18), 0 } ,
	{ 326, 7332, offsetof(WebConnectionStream_t4301, ___headers_19), 0 } ,
	{ 71, 30, offsetof(WebConnectionStream_t4301, ___disposed_20), 0 } ,
	{ 664, 30, offsetof(WebConnectionStream_t4301, ___headersSent_21), 0 } ,
	{ 316, 75, offsetof(WebConnectionStream_t4301, ___locker_22), 0 } ,
	{ 665, 30, offsetof(WebConnectionStream_t4301, ___initRead_23), 0 } ,
	{ 666, 30, offsetof(WebConnectionStream_t4301, ___read_eof_24), 0 } ,
	{ 667, 30, offsetof(WebConnectionStream_t4301, ___complete_request_written_25), 0 } ,
	{ 668, 44, offsetof(WebConnectionStream_t4301, ___read_timeout_26), 0 } ,
	{ 669, 44, offsetof(WebConnectionStream_t4301, ___write_timeout_27), 0 } ,
	{ 386, 8066, offsetof(WebException_t4322, ___response_12), 0 } ,
	{ 621, 8047, offsetof(WebException_t4322, ___status_13), 0 } ,
	{ 53, 50, offsetof(WebExceptionStatus_t4323, ___value___1) + sizeof(Object_t), 0 } ,
	{ 251, 8068, 0, 0 } ,
	{ 670, 8068, 0, 0 } ,
	{ 671, 8068, 0, 0 } ,
	{ 672, 8068, 0, 0 } ,
	{ 673, 8068, 0, 0 } ,
	{ 674, 8068, 0, 0 } ,
	{ 675, 8068, 0, 0 } ,
	{ 676, 8068, 0, 0 } ,
	{ 420, 8068, 0, 0 } ,
	{ 677, 8068, 0, 0 } ,
	{ 678, 8068, 0, 0 } ,
	{ 679, 8068, 0, 0 } ,
	{ 680, 8068, 0, 0 } ,
	{ 681, 8068, 0, 0 } ,
	{ 682, 8068, 0, 0 } ,
	{ 683, 8068, 0, 0 } ,
	{ 684, 8068, 0, 0 } ,
	{ 685, 8068, 0, 0 } ,
	{ 686, 8068, 0, 0 } ,
	{ 687, 8068, 0, 0 } ,
	{ 688, 8068, 0, 0 } ,
	{ 689, 7935, offsetof(WebHeaderCollection_t4261_StaticFields, ___restricted_12), 0 } ,
	{ 690, 7935, offsetof(WebHeaderCollection_t4261_StaticFields, ___multiValue_13), 0 } ,
	{ 691, 8070, offsetof(WebHeaderCollection_t4261_StaticFields, ___restricted_response_14), 0 } ,
	{ 692, 30, offsetof(WebHeaderCollection_t4261, ___internallyCreated_15), 0 } ,
	{ 693, 8071, offsetof(WebHeaderCollection_t4261_StaticFields, ___allowed_chars_16), 0 } ,
	{ 568, 4778, offsetof(WebProxy_t4324, ___address_0), 0 } ,
	{ 694, 30, offsetof(WebProxy_t4324, ___bypassOnLocal_1), 0 } ,
	{ 695, 7020, offsetof(WebProxy_t4324, ___bypassList_2), 0 } ,
	{ 372, 7447, offsetof(WebProxy_t4324, ___credentials_3), 0 } ,
	{ 696, 30, offsetof(WebProxy_t4324, ___useDefaultCredentials_4), 0 } ,
	{ 697, 8035, offsetof(WebRequest_t4184_StaticFields, ___prefixes_1), 0 } ,
	{ 698, 605, offsetof(WebRequest_t4184_StaticFields, ___isDefaultWebProxySet_2), 0 } ,
	{ 699, 8075, offsetof(WebRequest_t4184_StaticFields, ___defaultWebProxy_3), 0 } ,
	{ 700, 8076, offsetof(WebRequest_t4184, ___authentication_level_4), 0 } ,
	{ 701, 5028, offsetof(WebRequest_t4184_StaticFields, ___lockobj_5), 0 } ,
	{ 53, 50, offsetof(SslProtocols_t4326, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 8080, 0, 0 } ,
	{ 702, 8080, 0, 0 } ,
	{ 576, 8080, 0, 0 } ,
	{ 577, 8080, 0, 0 } ,
	{ 58, 8080, 0, 0 } ,
	{ 53, 50, offsetof(SecTrustResult_t4327, ___value___1) + sizeof(Object_t), 0 } ,
	{ 703, 8082, 0, 0 } ,
	{ 704, 8082, 0, 0 } ,
	{ 705, 8082, 0, 0 } ,
	{ 706, 8082, 0, 0 } ,
	{ 91, 8082, 0, 0 } ,
	{ 707, 8082, 0, 0 } ,
	{ 708, 8082, 0, 0 } ,
	{ 709, 8082, 0, 0 } ,
	{ 710, 8088, offsetof(OSX509Certificates_t4328_StaticFields, ___sslsecpolicy_0), 0 } ,
	{ 53, 50, offsetof(OpenFlags_t4329, ___value___1) + sizeof(Object_t), 0 } ,
	{ 711, 8090, 0, 0 } ,
	{ 712, 8090, 0, 0 } ,
	{ 713, 8090, 0, 0 } ,
	{ 714, 8090, 0, 0 } ,
	{ 715, 8090, 0, 0 } ,
	{ 716, 8093, offsetof(PublicKey_t4333, ____key_0), 0 } ,
	{ 717, 8094, offsetof(PublicKey_t4333, ____keyValue_1), 0 } ,
	{ 718, 8094, offsetof(PublicKey_t4333, ____params_2), 0 } ,
	{ 719, 8095, offsetof(PublicKey_t4333, ____oid_3), 0 } ,
	{ 720, 6504, offsetof(PublicKey_t4333_StaticFields, ___U3CU3Ef__switchU24map9_4), 55 } ,
	{ 53, 50, offsetof(StoreLocation_t4334, ___value___1) + sizeof(Object_t), 0 } ,
	{ 721, 8097, 0, 0 } ,
	{ 722, 8097, 0, 0 } ,
	{ 53, 50, offsetof(StoreName_t4335, ___value___1) + sizeof(Object_t), 0 } ,
	{ 723, 8100, 0, 0 } ,
	{ 724, 8100, 0, 0 } ,
	{ 725, 8100, 0, 0 } ,
	{ 726, 8100, 0, 0 } ,
	{ 727, 8100, 0, 0 } ,
	{ 728, 8100, 0, 0 } ,
	{ 729, 8100, 0, 0 } ,
	{ 730, 8100, 0, 0 } ,
	{ 339, 40, offsetof(X500DistinguishedName_t4336, ___name_3), 0 } ,
	{ 53, 50, offsetof(X500DistinguishedNameFlags_t4337, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 8104, 0, 0 } ,
	{ 731, 8104, 0, 0 } ,
	{ 732, 8104, 0, 0 } ,
	{ 733, 8104, 0, 0 } ,
	{ 734, 8104, 0, 0 } ,
	{ 735, 8104, 0, 0 } ,
	{ 736, 8104, 0, 0 } ,
	{ 737, 8104, 0, 0 } ,
	{ 738, 8104, 0, 0 } ,
	{ 739, 8104, 0, 0 } ,
	{ 740, 8107, 0, 0 } ,
	{ 741, 8107, 0, 0 } ,
	{ 742, 30, offsetof(X509BasicConstraintsExtension_t4338, ____certificateAuthority_6), 0 } ,
	{ 743, 30, offsetof(X509BasicConstraintsExtension_t4338, ____hasPathLengthConstraint_7), 0 } ,
	{ 744, 44, offsetof(X509BasicConstraintsExtension_t4338, ____pathLengthConstraint_8), 0 } ,
	{ 745, 8108, offsetof(X509BasicConstraintsExtension_t4338, ____status_9), 0 } ,
	{ 746, 30, offsetof(X509Certificate2_t4342, ____archived_5), 0 } ,
	{ 747, 8112, offsetof(X509Certificate2_t4342, ____extensions_6), 0 } ,
	{ 748, 40, offsetof(X509Certificate2_t4342, ____name_7), 0 } ,
	{ 749, 40, offsetof(X509Certificate2_t4342, ____serial_8), 0 } ,
	{ 750, 8113, offsetof(X509Certificate2_t4342, ____publicKey_9), 0 } ,
	{ 751, 8114, offsetof(X509Certificate2_t4342, ___issuer_name_10), 0 } ,
	{ 752, 8114, offsetof(X509Certificate2_t4342, ___subject_name_11), 0 } ,
	{ 753, 8095, offsetof(X509Certificate2_t4342, ___signature_algorithm_12), 0 } ,
	{ 754, 8115, offsetof(X509Certificate2_t4342, ____cert_13), 0 } ,
	{ 755, 1466, offsetof(X509Certificate2_t4342_StaticFields, ___empty_error_14), 0 } ,
	{ 756, 6913, offsetof(X509Certificate2_t4342_StaticFields, ___commonName_15), 0 } ,
	{ 757, 6913, offsetof(X509Certificate2_t4342_StaticFields, ___email_16), 0 } ,
	{ 758, 6913, offsetof(X509Certificate2_t4342_StaticFields, ___signedData_17), 0 } ,
	{ 759, 8118, offsetof(X509Certificate2Enumerator_t4344, ___enumerator_0), 0 } ,
	{ 759, 8118, offsetof(X509CertificateEnumerator_t4345, ___enumerator_0), 0 } ,
	{ 760, 8124, offsetof(X509Chain_t4352, ___location_0), 0 } ,
	{ 761, 8125, offsetof(X509Chain_t4352, ___elements_1), 0 } ,
	{ 598, 8126, offsetof(X509Chain_t4352, ___policy_2), 0 } ,
	{ 621, 8127, offsetof(X509Chain_t4352, ___status_3), 0 } ,
	{ 762, 8128, offsetof(X509Chain_t4352_StaticFields, ___Empty_4), 0 } ,
	{ 763, 44, offsetof(X509Chain_t4352, ___max_path_length_5), 0 } ,
	{ 764, 8114, offsetof(X509Chain_t4352, ___working_issuer_name_6), 0 } ,
	{ 765, 8093, offsetof(X509Chain_t4352, ___working_public_key_7), 0 } ,
	{ 766, 8129, offsetof(X509Chain_t4352, ___bce_restriction_8), 0 } ,
	{ 767, 8130, offsetof(X509Chain_t4352, ___roots_9), 0 } ,
	{ 768, 8130, offsetof(X509Chain_t4352, ___cas_10), 0 } ,
	{ 769, 8131, offsetof(X509Chain_t4352, ___collection_11), 0 } ,
	{ 770, 6504, offsetof(X509Chain_t4352_StaticFields, ___U3CU3Ef__switchU24mapB_12), 65 } ,
	{ 771, 6504, offsetof(X509Chain_t4352_StaticFields, ___U3CU3Ef__switchU24mapC_13), 66 } ,
	{ 772, 6504, offsetof(X509Chain_t4352_StaticFields, ___U3CU3Ef__switchU24mapD_14), 67 } ,
	{ 583, 8133, offsetof(X509ChainElement_t4350, ___certificate_0), 0 } ,
	{ 621, 8127, offsetof(X509ChainElement_t4350, ___status_1), 0 } ,
	{ 773, 40, offsetof(X509ChainElement_t4350, ___info_2), 0 } ,
	{ 774, 8134, offsetof(X509ChainElement_t4350, ___compressed_status_flags_3), 0 } ,
	{ 775, 7020, offsetof(X509ChainElementCollection_t4346, ____list_0), 0 } ,
	{ 759, 8118, offsetof(X509ChainElementEnumerator_t4353, ___enumerator_0), 0 } ,
	{ 776, 8141, offsetof(X509ChainPolicy_t4347, ___apps_0), 0 } ,
	{ 777, 8141, offsetof(X509ChainPolicy_t4347, ___cert_1), 0 } ,
	{ 778, 8131, offsetof(X509ChainPolicy_t4347, ___store_2), 0 } ,
	{ 779, 8142, offsetof(X509ChainPolicy_t4347, ___rflag_3), 0 } ,
	{ 69, 8143, offsetof(X509ChainPolicy_t4347, ___mode_4), 0 } ,
	{ 379, 6305, offsetof(X509ChainPolicy_t4347, ___timeout_5), 0 } ,
	{ 780, 8144, offsetof(X509ChainPolicy_t4347, ___vflags_6), 0 } ,
	{ 781, 6304, offsetof(X509ChainPolicy_t4347, ___vtime_7), 0 } ,
	{ 621, 8134, offsetof(X509ChainStatus_t4349, ___status_0) + sizeof(Object_t), 0 } ,
	{ 773, 40, offsetof(X509ChainStatus_t4349, ___info_1) + sizeof(Object_t), 0 } ,
	{ 53, 50, offsetof(X509ChainStatusFlags_t4355, ___value___1) + sizeof(Object_t), 0 } ,
	{ 782, 8147, 0, 0 } ,
	{ 783, 8147, 0, 0 } ,
	{ 784, 8147, 0, 0 } ,
	{ 785, 8147, 0, 0 } ,
	{ 786, 8147, 0, 0 } ,
	{ 787, 8147, 0, 0 } ,
	{ 788, 8147, 0, 0 } ,
	{ 789, 8147, 0, 0 } ,
	{ 790, 8147, 0, 0 } ,
	{ 791, 8147, 0, 0 } ,
	{ 792, 8147, 0, 0 } ,
	{ 793, 8147, 0, 0 } ,
	{ 794, 8147, 0, 0 } ,
	{ 795, 8147, 0, 0 } ,
	{ 796, 8147, 0, 0 } ,
	{ 797, 8147, 0, 0 } ,
	{ 798, 8147, 0, 0 } ,
	{ 799, 8147, 0, 0 } ,
	{ 800, 8147, 0, 0 } ,
	{ 801, 8147, 0, 0 } ,
	{ 802, 8147, 0, 0 } ,
	{ 803, 8147, 0, 0 } ,
	{ 804, 8147, 0, 0 } ,
	{ 805, 8141, offsetof(X509EnhancedKeyUsageExtension_t4356, ____enhKeyUsage_4), 0 } ,
	{ 745, 8108, offsetof(X509EnhancedKeyUsageExtension_t4356, ____status_5), 0 } ,
	{ 806, 6504, offsetof(X509EnhancedKeyUsageExtension_t4356_StaticFields, ___U3CU3Ef__switchU24mapE_6), 71 } ,
	{ 807, 30, offsetof(X509Extension_t4339, ____critical_3), 0 } ,
	{ 775, 7020, offsetof(X509ExtensionCollection_t4340, ____list_0), 0 } ,
	{ 759, 8118, offsetof(X509ExtensionEnumerator_t4357, ___enumerator_0), 0 } ,
	{ 53, 50, offsetof(X509FindType_t4358, ___value___1) + sizeof(Object_t), 0 } ,
	{ 808, 8153, 0, 0 } ,
	{ 809, 8153, 0, 0 } ,
	{ 810, 8153, 0, 0 } ,
	{ 811, 8153, 0, 0 } ,
	{ 812, 8153, 0, 0 } ,
	{ 813, 8153, 0, 0 } ,
	{ 814, 8153, 0, 0 } ,
	{ 815, 8153, 0, 0 } ,
	{ 816, 8153, 0, 0 } ,
	{ 817, 8153, 0, 0 } ,
	{ 818, 8153, 0, 0 } ,
	{ 819, 8153, 0, 0 } ,
	{ 820, 8153, 0, 0 } ,
	{ 821, 8153, 0, 0 } ,
	{ 822, 8153, 0, 0 } ,
	{ 740, 8107, 0, 0 } ,
	{ 741, 8107, 0, 0 } ,
	{ 823, 8156, 0, 0 } ,
	{ 824, 8157, offsetof(X509KeyUsageExtension_t4359, ____keyUsages_7), 0 } ,
	{ 745, 8108, offsetof(X509KeyUsageExtension_t4359, ____status_8), 0 } ,
	{ 53, 50, offsetof(X509KeyUsageFlags_t4360, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 8159, 0, 0 } ,
	{ 825, 8159, 0, 0 } ,
	{ 826, 8159, 0, 0 } ,
	{ 827, 8159, 0, 0 } ,
	{ 828, 8159, 0, 0 } ,
	{ 829, 8159, 0, 0 } ,
	{ 830, 8159, 0, 0 } ,
	{ 831, 8159, 0, 0 } ,
	{ 832, 8159, 0, 0 } ,
	{ 833, 8159, 0, 0 } ,
	{ 53, 50, offsetof(X509NameType_t4361, ___value___1) + sizeof(Object_t), 0 } ,
	{ 834, 8161, 0, 0 } ,
	{ 835, 8161, 0, 0 } ,
	{ 836, 8161, 0, 0 } ,
	{ 837, 8161, 0, 0 } ,
	{ 838, 8161, 0, 0 } ,
	{ 839, 8161, 0, 0 } ,
	{ 53, 50, offsetof(X509RevocationFlag_t4362, ___value___1) + sizeof(Object_t), 0 } ,
	{ 840, 8163, 0, 0 } ,
	{ 841, 8163, 0, 0 } ,
	{ 842, 8163, 0, 0 } ,
	{ 53, 50, offsetof(X509RevocationMode_t4363, ___value___1) + sizeof(Object_t), 0 } ,
	{ 843, 8165, 0, 0 } ,
	{ 844, 8165, 0, 0 } ,
	{ 845, 8165, 0, 0 } ,
	{ 748, 40, offsetof(X509Store_t4351, ____name_0), 0 } ,
	{ 846, 8124, offsetof(X509Store_t4351, ____location_1), 0 } ,
	{ 3, 8131, offsetof(X509Store_t4351, ___list_2), 0 } ,
	{ 847, 8169, offsetof(X509Store_t4351, ____flags_3), 0 } ,
	{ 778, 8170, offsetof(X509Store_t4351, ___store_4), 0 } ,
	{ 848, 6504, offsetof(X509Store_t4351_StaticFields, ___U3CU3Ef__switchU24mapF_5), 74 } ,
	{ 740, 8107, 0, 0 } ,
	{ 741, 8107, 0, 0 } ,
	{ 849, 7332, offsetof(X509SubjectKeyIdentifierExtension_t4365, ____subjectKeyIdentifier_6), 0 } ,
	{ 850, 40, offsetof(X509SubjectKeyIdentifierExtension_t4365, ____ski_7), 0 } ,
	{ 745, 8108, offsetof(X509SubjectKeyIdentifierExtension_t4365, ____status_8), 0 } ,
	{ 53, 50, offsetof(X509SubjectKeyIdentifierHashAlgorithm_t4366, ___value___1) + sizeof(Object_t), 0 } ,
	{ 851, 8174, 0, 0 } ,
	{ 852, 8174, 0, 0 } ,
	{ 853, 8174, 0, 0 } ,
	{ 53, 50, offsetof(X509VerificationFlags_t4367, ___value___1) + sizeof(Object_t), 0 } ,
	{ 854, 8176, 0, 0 } ,
	{ 855, 8176, 0, 0 } ,
	{ 856, 8176, 0, 0 } ,
	{ 857, 8176, 0, 0 } ,
	{ 858, 8176, 0, 0 } ,
	{ 859, 8176, 0, 0 } ,
	{ 860, 8176, 0, 0 } ,
	{ 861, 8176, 0, 0 } ,
	{ 862, 8176, 0, 0 } ,
	{ 863, 8176, 0, 0 } ,
	{ 864, 8176, 0, 0 } ,
	{ 865, 8176, 0, 0 } ,
	{ 866, 8176, 0, 0 } ,
	{ 867, 8176, 0, 0 } ,
	{ 53, 50, offsetof(AsnDecodeStatus_t4368, ___value___1) + sizeof(Object_t), 0 } ,
	{ 868, 8178, 0, 0 } ,
	{ 869, 8178, 0, 0 } ,
	{ 870, 8178, 0, 0 } ,
	{ 871, 8178, 0, 0 } ,
	{ 872, 8178, 0, 0 } ,
	{ 873, 8178, 0, 0 } ,
	{ 719, 8180, offsetof(AsnEncodedData_t4331, ____oid_0), 0 } ,
	{ 874, 7846, offsetof(AsnEncodedData_t4331, ____raw_1), 0 } ,
	{ 875, 6504, offsetof(AsnEncodedData_t4331_StaticFields, ___U3CU3Ef__switchU24mapA_2), 76 } ,
	{ 876, 40, offsetof(Oid_t4332, ____value_0), 0 } ,
	{ 748, 40, offsetof(Oid_t4332, ____name_1), 0 } ,
	{ 877, 6504, offsetof(Oid_t4332_StaticFields, ___U3CU3Ef__switchU24map10_2), 77 } ,
	{ 775, 7020, offsetof(OidCollection_t4354, ____list_0), 0 } ,
	{ 878, 30, offsetof(OidCollection_t4354, ____readOnly_1), 0 } ,
	{ 879, 8141, offsetof(OidEnumerator_t4369, ____collection_0), 0 } ,
	{ 880, 44, offsetof(OidEnumerator_t4369, ____position_1), 0 } ,
	{ 881, 1783, offsetof(BaseMachine_t4371, ___needs_groups_or_captures_0), 0 } ,
	{ 5, 592, offsetof(Capture_t2009, ___index_0), 0 } ,
	{ 358, 592, offsetof(Capture_t2009, ___length_1), 0 } ,
	{ 882, 810, offsetof(Capture_t2009, ___text_2), 0 } ,
	{ 3, 8188, offsetof(CaptureCollection_t2011, ___list_0), 0 } ,
	{ 883, 8190, offsetof(Group_t2008_StaticFields, ___Fail_3), 0 } ,
	{ 884, 30, offsetof(Group_t2008, ___success_4), 0 } ,
	{ 885, 8191, offsetof(Group_t2008, ___captures_5), 0 } ,
	{ 3, 8193, offsetof(GroupCollection_t2010, ___list_0), 0 } ,
	{ 886, 44, offsetof(GroupCollection_t2010, ___gap_1), 0 } ,
	{ 887, 8195, offsetof(Match_t1658, ___regex_6), 0 } ,
	{ 888, 8196, offsetof(Match_t1658, ___machine_7), 0 } ,
	{ 889, 44, offsetof(Match_t1658, ___text_length_8), 0 } ,
	{ 587, 8197, offsetof(Match_t1658, ___groups_9), 0 } ,
	{ 890, 8198, offsetof(Match_t1658_StaticFields, ___empty_10), 0 } ,
	{ 5, 44, offsetof(Enumerator_t4376, ___index_0), 0 } ,
	{ 891, 8200, offsetof(Enumerator_t4376, ___coll_1), 0 } ,
	{ 4, 8202, offsetof(MatchCollection_t4375, ___current_0), 0 } ,
	{ 3, 7020, offsetof(MatchCollection_t4375, ___list_1), 0 } ,
	{ 892, 8204, offsetof(Adapter_t4377, ___ev_0), 0 } ,
	{ 368, 8206, offsetof(Regex_t789_StaticFields, ___cache_0), 0 } ,
	{ 893, 8207, offsetof(Regex_t789, ___machineFactory_1), 0 } ,
	{ 894, 8208, offsetof(Regex_t789, ___mapping_2), 0 } ,
	{ 895, 44, offsetof(Regex_t789, ___group_count_3), 0 } ,
	{ 886, 44, offsetof(Regex_t789, ___gap_4), 0 } ,
	{ 896, 30, offsetof(Regex_t789, ___refsInitialized_5), 0 } ,
	{ 897, 1477, offsetof(Regex_t789, ___group_names_6), 0 } ,
	{ 898, 5766, offsetof(Regex_t789, ___group_numbers_7), 0 } ,
	{ 899, 1653, offsetof(Regex_t789, ___pattern_8), 0 } ,
	{ 900, 8209, offsetof(Regex_t789, ___roptions_9), 0 } ,
	{ 901, 8210, offsetof(Regex_t789, ___capnames_10), 82 } ,
	{ 902, 8211, offsetof(Regex_t789, ___caps_11), 83 } ,
	{ 903, 1785, offsetof(Regex_t789, ___capsize_12), 84 } ,
	{ 904, 8212, offsetof(Regex_t789, ___capslist_13), 85 } ,
	{ 53, 50, offsetof(RegexOptions_t4380, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 8214, 0, 0 } ,
	{ 905, 8214, 0, 0 } ,
	{ 906, 8214, 0, 0 } ,
	{ 907, 8214, 0, 0 } ,
	{ 908, 8214, 0, 0 } ,
	{ 909, 8214, 0, 0 } ,
	{ 910, 8214, 0, 0 } ,
	{ 911, 8214, 0, 0 } ,
	{ 912, 8214, 0, 0 } ,
	{ 53, 8216, offsetof(OpCode_t4381, ___value___1) + sizeof(Object_t), 0 } ,
	{ 913, 8217, 0, 0 } ,
	{ 914, 8217, 0, 0 } ,
	{ 915, 8217, 0, 0 } ,
	{ 916, 8217, 0, 0 } ,
	{ 917, 8217, 0, 0 } ,
	{ 918, 8217, 0, 0 } ,
	{ 919, 8217, 0, 0 } ,
	{ 920, 8217, 0, 0 } ,
	{ 921, 8217, 0, 0 } ,
	{ 922, 8217, 0, 0 } ,
	{ 923, 8217, 0, 0 } ,
	{ 924, 8217, 0, 0 } ,
	{ 925, 8217, 0, 0 } ,
	{ 926, 8217, 0, 0 } ,
	{ 927, 8217, 0, 0 } ,
	{ 928, 8217, 0, 0 } ,
	{ 929, 8217, 0, 0 } ,
	{ 930, 8217, 0, 0 } ,
	{ 931, 8217, 0, 0 } ,
	{ 932, 8217, 0, 0 } ,
	{ 933, 8217, 0, 0 } ,
	{ 934, 8217, 0, 0 } ,
	{ 935, 8217, 0, 0 } ,
	{ 936, 8217, 0, 0 } ,
	{ 937, 8217, 0, 0 } ,
	{ 53, 8216, offsetof(OpFlags_t4382, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 8220, 0, 0 } ,
	{ 938, 8220, 0, 0 } ,
	{ 905, 8220, 0, 0 } ,
	{ 910, 8220, 0, 0 } ,
	{ 939, 8220, 0, 0 } ,
	{ 53, 8216, offsetof(Position_t4383, ___value___1) + sizeof(Object_t), 0 } ,
	{ 563, 8223, 0, 0 } ,
	{ 940, 8223, 0, 0 } ,
	{ 941, 8223, 0, 0 } ,
	{ 942, 8223, 0, 0 } ,
	{ 943, 8223, 0, 0 } ,
	{ 944, 8223, 0, 0 } ,
	{ 945, 8223, 0, 0 } ,
	{ 946, 8223, 0, 0 } ,
	{ 947, 8223, 0, 0 } ,
	{ 948, 8223, 0, 0 } ,
	{ 899, 74, offsetof(Key_t4384, ___pattern_0), 0 } ,
	{ 949, 8228, offsetof(Key_t4384, ___options_1), 0 } ,
	{ 351, 44, offsetof(FactoryCache_t4378, ___capacity_0), 0 } ,
	{ 950, 7052, offsetof(FactoryCache_t4378, ___factories_1), 0 } ,
	{ 951, 8230, offsetof(FactoryCache_t4378, ___mru_list_2), 0 } ,
	{ 29, 1746, offsetof(Node_t4386, ___value_0), 0 } ,
	{ 952, 8232, offsetof(Node_t4386, ___previous_1), 0 } ,
	{ 30, 8232, offsetof(Node_t4386, ___next_2), 0 } ,
	{ 35, 8234, offsetof(MRUList_t4385, ___head_0), 0 } ,
	{ 953, 8234, offsetof(MRUList_t4385, ___tail_1), 0 } ,
	{ 53, 8216, offsetof(Category_t4387, ___value___1) + sizeof(Object_t), 0 } ,
	{ 79, 8236, 0, 0 } ,
	{ 563, 8236, 0, 0 } ,
	{ 954, 8236, 0, 0 } ,
	{ 955, 8236, 0, 0 } ,
	{ 956, 8236, 0, 0 } ,
	{ 957, 8236, 0, 0 } ,
	{ 958, 8236, 0, 0 } ,
	{ 959, 8236, 0, 0 } ,
	{ 960, 8236, 0, 0 } ,
	{ 961, 8236, 0, 0 } ,
	{ 962, 8236, 0, 0 } ,
	{ 963, 8236, 0, 0 } ,
	{ 964, 8236, 0, 0 } ,
	{ 965, 8236, 0, 0 } ,
	{ 966, 8236, 0, 0 } ,
	{ 967, 8236, 0, 0 } ,
	{ 968, 8236, 0, 0 } ,
	{ 969, 8236, 0, 0 } ,
	{ 970, 8236, 0, 0 } ,
	{ 971, 8236, 0, 0 } ,
	{ 972, 8236, 0, 0 } ,
	{ 973, 8236, 0, 0 } ,
	{ 974, 8236, 0, 0 } ,
	{ 975, 8236, 0, 0 } ,
	{ 976, 8236, 0, 0 } ,
	{ 977, 8236, 0, 0 } ,
	{ 978, 8236, 0, 0 } ,
	{ 979, 8236, 0, 0 } ,
	{ 980, 8236, 0, 0 } ,
	{ 981, 8236, 0, 0 } ,
	{ 982, 8236, 0, 0 } ,
	{ 983, 8236, 0, 0 } ,
	{ 984, 8236, 0, 0 } ,
	{ 985, 8236, 0, 0 } ,
	{ 986, 8236, 0, 0 } ,
	{ 987, 8236, 0, 0 } ,
	{ 988, 8236, 0, 0 } ,
	{ 989, 8236, 0, 0 } ,
	{ 990, 8236, 0, 0 } ,
	{ 991, 8236, 0, 0 } ,
	{ 992, 8236, 0, 0 } ,
	{ 993, 8236, 0, 0 } ,
	{ 994, 8236, 0, 0 } ,
	{ 995, 8236, 0, 0 } ,
	{ 996, 8236, 0, 0 } ,
	{ 997, 8236, 0, 0 } ,
	{ 998, 8236, 0, 0 } ,
	{ 999, 8236, 0, 0 } ,
	{ 1000, 8236, 0, 0 } ,
	{ 1001, 8236, 0, 0 } ,
	{ 1002, 8236, 0, 0 } ,
	{ 1003, 8236, 0, 0 } ,
	{ 1004, 8236, 0, 0 } ,
	{ 1005, 8236, 0, 0 } ,
	{ 1006, 8236, 0, 0 } ,
	{ 1007, 8236, 0, 0 } ,
	{ 1008, 8236, 0, 0 } ,
	{ 1009, 8236, 0, 0 } ,
	{ 1010, 8236, 0, 0 } ,
	{ 1011, 8236, 0, 0 } ,
	{ 1012, 8236, 0, 0 } ,
	{ 1013, 8236, 0, 0 } ,
	{ 1014, 8236, 0, 0 } ,
	{ 1015, 8236, 0, 0 } ,
	{ 1016, 8236, 0, 0 } ,
	{ 1017, 8236, 0, 0 } ,
	{ 1018, 8236, 0, 0 } ,
	{ 1019, 8236, 0, 0 } ,
	{ 1020, 8236, 0, 0 } ,
	{ 1021, 8236, 0, 0 } ,
	{ 1022, 8236, 0, 0 } ,
	{ 1023, 8236, 0, 0 } ,
	{ 1024, 8236, 0, 0 } ,
	{ 1025, 8236, 0, 0 } ,
	{ 1026, 8236, 0, 0 } ,
	{ 1027, 8236, 0, 0 } ,
	{ 1028, 8236, 0, 0 } ,
	{ 1029, 8236, 0, 0 } ,
	{ 1030, 8236, 0, 0 } ,
	{ 1031, 8236, 0, 0 } ,
	{ 1032, 8236, 0, 0 } ,
	{ 1033, 8236, 0, 0 } ,
	{ 1034, 8236, 0, 0 } ,
	{ 1035, 8236, 0, 0 } ,
	{ 1036, 8236, 0, 0 } ,
	{ 1037, 8236, 0, 0 } ,
	{ 1038, 8236, 0, 0 } ,
	{ 1039, 8236, 0, 0 } ,
	{ 1040, 8236, 0, 0 } ,
	{ 1041, 8236, 0, 0 } ,
	{ 1042, 8236, 0, 0 } ,
	{ 1043, 8236, 0, 0 } ,
	{ 1044, 8236, 0, 0 } ,
	{ 1045, 8236, 0, 0 } ,
	{ 1046, 8236, 0, 0 } ,
	{ 1047, 8236, 0, 0 } ,
	{ 1048, 8236, 0, 0 } ,
	{ 1049, 8236, 0, 0 } ,
	{ 1050, 8236, 0, 0 } ,
	{ 1051, 8236, 0, 0 } ,
	{ 1052, 8236, 0, 0 } ,
	{ 1053, 8236, 0, 0 } ,
	{ 1054, 8236, 0, 0 } ,
	{ 1055, 8236, 0, 0 } ,
	{ 1056, 8236, 0, 0 } ,
	{ 1057, 8236, 0, 0 } ,
	{ 1058, 8236, 0, 0 } ,
	{ 1059, 8236, 0, 0 } ,
	{ 1060, 8236, 0, 0 } ,
	{ 1061, 8236, 0, 0 } ,
	{ 1062, 8236, 0, 0 } ,
	{ 1063, 8236, 0, 0 } ,
	{ 1064, 8236, 0, 0 } ,
	{ 1065, 8236, 0, 0 } ,
	{ 1066, 8236, 0, 0 } ,
	{ 1067, 8236, 0, 0 } ,
	{ 1068, 8236, 0, 0 } ,
	{ 1069, 8236, 0, 0 } ,
	{ 1070, 8236, 0, 0 } ,
	{ 1071, 8236, 0, 0 } ,
	{ 1072, 8236, 0, 0 } ,
	{ 1073, 8236, 0, 0 } ,
	{ 1074, 8236, 0, 0 } ,
	{ 1075, 8236, 0, 0 } ,
	{ 1076, 8236, 0, 0 } ,
	{ 1077, 8236, 0, 0 } ,
	{ 1078, 8236, 0, 0 } ,
	{ 1079, 8236, 0, 0 } ,
	{ 1080, 8236, 0, 0 } ,
	{ 1081, 8236, 0, 0 } ,
	{ 1082, 8236, 0, 0 } ,
	{ 1083, 8236, 0, 0 } ,
	{ 1084, 8236, 0, 0 } ,
	{ 1085, 8236, 0, 0 } ,
	{ 1086, 8236, 0, 0 } ,
	{ 1087, 8236, 0, 0 } ,
	{ 1088, 8236, 0, 0 } ,
	{ 1089, 8236, 0, 0 } ,
	{ 1090, 8236, 0, 0 } ,
	{ 1091, 8236, 0, 0 } ,
	{ 1092, 8236, 0, 0 } ,
	{ 1093, 8236, 0, 0 } ,
	{ 1094, 8236, 0, 0 } ,
	{ 1095, 8236, 0, 0 } ,
	{ 1096, 8236, 0, 0 } ,
	{ 894, 8208, offsetof(InterpreterFactory_t4390, ___mapping_0), 0 } ,
	{ 899, 8011, offsetof(InterpreterFactory_t4390, ___pattern_1), 0 } ,
	{ 1097, 1477, offsetof(InterpreterFactory_t4390, ___namesMapping_2), 0 } ,
	{ 886, 44, offsetof(InterpreterFactory_t4390, ___gap_3), 0 } ,
	{ 1098, 611, offsetof(Link_t4391, ___base_addr_0) + sizeof(Object_t), 0 } ,
	{ 1099, 611, offsetof(Link_t4391, ___offset_addr_1) + sizeof(Object_t), 0 } ,
	{ 1100, 8246, offsetof(PatternLinkStack_t4392, ___link_1), 0 } ,
	{ 1101, 7020, offsetof(PatternCompiler_t4394, ___pgm_0), 0 } ,
	{ 1102, 7260, offsetof(LinkStack_t4393, ___stack_0), 0 } ,
	{ 940, 611, offsetof(Mark_t4395, ___Start_0) + sizeof(Object_t), 0 } ,
	{ 944, 611, offsetof(Mark_t4395, ___End_1) + sizeof(Object_t), 0 } ,
	{ 1103, 611, offsetof(Mark_t4395, ___Previous_2) + sizeof(Object_t), 0 } ,
	{ 361, 5766, offsetof(IntStack_t4396, ___values_0) + sizeof(Object_t), 0 } ,
	{ 8, 44, offsetof(IntStack_t4396, ___count_1) + sizeof(Object_t), 0 } ,
	{ 1104, 44, offsetof(RepeatContext_t4397, ___start_0), 0 } ,
	{ 1105, 44, offsetof(RepeatContext_t4397, ___min_1), 0 } ,
	{ 1106, 44, offsetof(RepeatContext_t4397, ___max_2), 0 } ,
	{ 1107, 30, offsetof(RepeatContext_t4397, ___lazy_3), 0 } ,
	{ 1108, 44, offsetof(RepeatContext_t4397, ___expr_pc_4), 0 } ,
	{ 952, 8253, offsetof(RepeatContext_t4397, ___previous_5), 0 } ,
	{ 8, 44, offsetof(RepeatContext_t4397, ___count_6), 0 } ,
	{ 53, 50, offsetof(Mode_t4398, ___value___1) + sizeof(Object_t), 0 } ,
	{ 1109, 8255, 0, 0 } ,
	{ 1110, 8255, 0, 0 } ,
	{ 1111, 8255, 0, 0 } ,
	{ 1112, 8011, offsetof(Interpreter_t4401, ___program_1), 0 } ,
	{ 1113, 44, offsetof(Interpreter_t4401, ___program_start_2), 0 } ,
	{ 882, 40, offsetof(Interpreter_t4401, ___text_3), 0 } ,
	{ 1114, 44, offsetof(Interpreter_t4401, ___text_end_4), 0 } ,
	{ 895, 44, offsetof(Interpreter_t4401, ___group_count_5), 0 } ,
	{ 1115, 44, offsetof(Interpreter_t4401, ___match_min_6), 0 } ,
	{ 1116, 8258, offsetof(Interpreter_t4401, ___qs_7), 0 } ,
	{ 1117, 44, offsetof(Interpreter_t4401, ___scan_ptr_8), 0 } ,
	{ 1118, 8253, offsetof(Interpreter_t4401, ___repeat_9), 0 } ,
	{ 1119, 8253, offsetof(Interpreter_t4401, ___fast_10), 0 } ,
	{ 1102, 8259, offsetof(Interpreter_t4401, ___stack_11), 0 } ,
	{ 1120, 8253, offsetof(Interpreter_t4401, ___deep_12), 0 } ,
	{ 1121, 8260, offsetof(Interpreter_t4401, ___marks_13), 0 } ,
	{ 1122, 44, offsetof(Interpreter_t4401, ___mark_start_14), 0 } ,
	{ 1123, 44, offsetof(Interpreter_t4401, ___mark_end_15), 0 } ,
	{ 587, 5766, offsetof(Interpreter_t4401, ___groups_16), 0 } ,
	{ 1124, 611, offsetof(Interval_t4402, ___low_0) + sizeof(Object_t), 0 } ,
	{ 1125, 611, offsetof(Interval_t4402, ___high_1) + sizeof(Object_t), 0 } ,
	{ 1126, 558, offsetof(Interval_t4402, ___contiguous_2) + sizeof(Object_t), 0 } ,
	{ 3, 8263, offsetof(Enumerator_t4403, ___list_0), 0 } ,
	{ 1127, 44, offsetof(Enumerator_t4403, ___ptr_1), 0 } ,
	{ 1128, 7020, offsetof(IntervalCollection_t4405, ___intervals_0), 0 } ,
	{ 899, 40, offsetof(Parser_t4406, ___pattern_0), 0 } ,
	{ 1127, 44, offsetof(Parser_t4406, ___ptr_1), 0 } ,
	{ 902, 7020, offsetof(Parser_t4406, ___caps_2), 0 } ,
	{ 1129, 7052, offsetof(Parser_t4406, ___refs_3), 0 } ,
	{ 1130, 44, offsetof(Parser_t4406, ___num_groups_4), 0 } ,
	{ 886, 44, offsetof(Parser_t4406, ___gap_5), 0 } ,
	{ 1131, 40, offsetof(QuickSearch_t4399, ___str_0), 0 } ,
	{ 1132, 44, offsetof(QuickSearch_t4399, ___len_1), 0 } ,
	{ 1133, 30, offsetof(QuickSearch_t4399, ___ignore_2), 0 } ,
	{ 1134, 30, offsetof(QuickSearch_t4399, ___reverse_3), 0 } ,
	{ 1135, 7332, offsetof(QuickSearch_t4399, ___shift_4), 0 } ,
	{ 1136, 7052, offsetof(QuickSearch_t4399, ___shiftExtended_5), 0 } ,
	{ 1137, 8269, offsetof(QuickSearch_t4399_StaticFields, ___THRESHOLD_6), 0 } ,
	{ 887, 8195, offsetof(ReplacementEvaluator_t4407, ___regex_0), 0 } ,
	{ 1138, 44, offsetof(ReplacementEvaluator_t4407, ___n_pieces_1), 0 } ,
	{ 1139, 5766, offsetof(ReplacementEvaluator_t4407, ___pieces_2), 0 } ,
	{ 1140, 40, offsetof(ReplacementEvaluator_t4407, ___replacement_3), 0 } ,
	{ 1141, 8274, offsetof(CompositeExpression_t4410, ___expressions_0), 0 } ,
	{ 895, 44, offsetof(RegularExpression_t4412, ___group_count_1), 0 } ,
	{ 1142, 44, offsetof(CapturingGroup_t4413, ___gid_1), 0 } ,
	{ 339, 40, offsetof(CapturingGroup_t4413, ___name_2), 0 } ,
	{ 1143, 8280, offsetof(BalancingGroup_t4414, ___balance_3), 0 } ,
	{ 1105, 44, offsetof(Repetition_t4416, ___min_1), 0 } ,
	{ 1106, 44, offsetof(Repetition_t4416, ___max_2), 0 } ,
	{ 1107, 30, offsetof(Repetition_t4416, ___lazy_3), 0 } ,
	{ 1144, 8285, offsetof(CaptureAssertion_t4420, ___alternate_1), 0 } ,
	{ 1145, 8280, offsetof(CaptureAssertion_t4420, ___group_2), 0 } ,
	{ 1146, 8286, offsetof(CaptureAssertion_t4420, ___literal_3), 0 } ,
	{ 1134, 30, offsetof(ExpressionAssertion_t4418, ___reverse_1), 0 } ,
	{ 1147, 30, offsetof(ExpressionAssertion_t4418, ___negate_2), 0 } ,
	{ 1131, 40, offsetof(Literal_t4419, ___str_0), 0 } ,
	{ 1133, 30, offsetof(Literal_t4419, ___ignore_1), 0 } ,
	{ 359, 8291, offsetof(PositionAssertion_t4422, ___pos_0), 0 } ,
	{ 1145, 8280, offsetof(Reference_t4423, ___group_0), 0 } ,
	{ 1133, 30, offsetof(Reference_t4423, ___ignore_1), 0 } ,
	{ 1146, 40, offsetof(BackslashNumber_t4424, ___literal_2), 0 } ,
	{ 1148, 30, offsetof(BackslashNumber_t4424, ___ecma_3), 0 } ,
	{ 1149, 8295, offsetof(CharacterClass_t4426_StaticFields, ___upper_case_characters_0), 0 } ,
	{ 1147, 30, offsetof(CharacterClass_t4426, ___negate_1), 0 } ,
	{ 1133, 30, offsetof(CharacterClass_t4426, ___ignore_2), 0 } ,
	{ 1150, 8296, offsetof(CharacterClass_t4426, ___pos_cats_3), 0 } ,
	{ 1151, 8296, offsetof(CharacterClass_t4426, ___neg_cats_4), 0 } ,
	{ 1128, 8297, offsetof(CharacterClass_t4426, ___intervals_5), 0 } ,
	{ 1152, 8299, offsetof(AnchorInfo_t4427, ___expr_0), 0 } ,
	{ 359, 8291, offsetof(AnchorInfo_t4427, ___pos_1), 0 } ,
	{ 451, 44, offsetof(AnchorInfo_t4427, ___offset_2), 0 } ,
	{ 1131, 40, offsetof(AnchorInfo_t4427, ___str_3), 0 } ,
	{ 1153, 44, offsetof(AnchorInfo_t4427, ___width_4), 0 } ,
	{ 1133, 30, offsetof(AnchorInfo_t4427, ___ignore_5), 0 } ,
	{ 1154, 74, offsetof(UriScheme_t4431, ___scheme_0) + sizeof(Object_t), 0 } ,
	{ 1155, 74, offsetof(UriScheme_t4431, ___delimiter_1) + sizeof(Object_t), 0 } ,
	{ 1156, 611, offsetof(UriScheme_t4431, ___defaultPort_2) + sizeof(Object_t), 0 } ,
	{ 1157, 1920, 0, 0 } ,
	{ 1158, 30, offsetof(Uri_t32, ___isUnixFilePath_1), 0 } ,
	{ 1159, 40, offsetof(Uri_t32, ___source_2), 0 } ,
	{ 1154, 40, offsetof(Uri_t32, ___scheme_3), 0 } ,
	{ 585, 40, offsetof(Uri_t32, ___host_4), 0 } ,
	{ 341, 44, offsetof(Uri_t32, ___port_5), 0 } ,
	{ 340, 40, offsetof(Uri_t32, ___path_6), 0 } ,
	{ 1160, 40, offsetof(Uri_t32, ___query_7), 0 } ,
	{ 1161, 40, offsetof(Uri_t32, ___fragment_8), 0 } ,
	{ 1162, 40, offsetof(Uri_t32, ___userinfo_9), 0 } ,
	{ 1163, 30, offsetof(Uri_t32, ___isUnc_10), 0 } ,
	{ 1164, 30, offsetof(Uri_t32, ___isOpaquePart_11), 0 } ,
	{ 1165, 30, offsetof(Uri_t32, ___isAbsoluteUri_12), 0 } ,
	{ 1166, 1477, offsetof(Uri_t32, ___segments_13), 0 } ,
	{ 1167, 30, offsetof(Uri_t32, ___userEscaped_14), 0 } ,
	{ 1168, 40, offsetof(Uri_t32, ___cachedAbsoluteUri_15), 0 } ,
	{ 1169, 40, offsetof(Uri_t32, ___cachedToString_16), 0 } ,
	{ 1170, 40, offsetof(Uri_t32, ___cachedLocalPath_17), 0 } ,
	{ 1171, 44, offsetof(Uri_t32, ___cachedHashCode_18), 0 } ,
	{ 1172, 4912, offsetof(Uri_t32_StaticFields, ___hexUpperChars_19), 0 } ,
	{ 1173, 1555, offsetof(Uri_t32_StaticFields, ___SchemeDelimiter_20), 0 } ,
	{ 1174, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeFile_21), 0 } ,
	{ 1175, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeFtp_22), 0 } ,
	{ 1176, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeGopher_23), 0 } ,
	{ 1177, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeHttp_24), 0 } ,
	{ 1178, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeHttps_25), 0 } ,
	{ 1179, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeMailto_26), 0 } ,
	{ 1180, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeNews_27), 0 } ,
	{ 1181, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeNntp_28), 0 } ,
	{ 1182, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeNetPipe_29), 0 } ,
	{ 1183, 1555, offsetof(Uri_t32_StaticFields, ___UriSchemeNetTcp_30), 0 } ,
	{ 1184, 8307, offsetof(Uri_t32_StaticFields, ___schemes_31), 0 } ,
	{ 366, 8308, offsetof(Uri_t32, ___parser_32), 0 } ,
	{ 1185, 6504, offsetof(Uri_t32_StaticFields, ___U3CU3Ef__switchU24map12_33), 91 } ,
	{ 1186, 6504, offsetof(Uri_t32_StaticFields, ___U3CU3Ef__switchU24map13_34), 92 } ,
	{ 1187, 6504, offsetof(Uri_t32_StaticFields, ___U3CU3Ef__switchU24map14_35), 93 } ,
	{ 1188, 6504, offsetof(Uri_t32_StaticFields, ___U3CU3Ef__switchU24map15_36), 94 } ,
	{ 1189, 6504, offsetof(Uri_t32_StaticFields, ___U3CU3Ef__switchU24map16_37), 95 } ,
	{ 53, 50, offsetof(UriHostNameType_t4433, ___value___1) + sizeof(Object_t), 0 } ,
	{ 90, 8311, 0, 0 } ,
	{ 1190, 8311, 0, 0 } ,
	{ 1191, 8311, 0, 0 } ,
	{ 140, 8311, 0, 0 } ,
	{ 135, 8311, 0, 0 } ,
	{ 53, 50, offsetof(UriKind_t4434, ___value___1) + sizeof(Object_t), 0 } ,
	{ 1192, 8313, 0, 0 } ,
	{ 1193, 8313, 0, 0 } ,
	{ 1194, 8313, 0, 0 } ,
	{ 1195, 5005, offsetof(UriParser_t4429_StaticFields, ___lock_object_0), 0 } ,
	{ 1196, 7067, offsetof(UriParser_t4429_StaticFields, ___table_1), 0 } ,
	{ 1197, 810, offsetof(UriParser_t4429, ___scheme_name_2), 0 } ,
	{ 1198, 44, offsetof(UriParser_t4429, ___default_port_3), 0 } ,
	{ 1199, 4914, offsetof(UriParser_t4429_StaticFields, ___uri_regex_4), 0 } ,
	{ 1200, 4914, offsetof(UriParser_t4429_StaticFields, ___auth_regex_5), 0 } ,
	{ 53, 50, offsetof(UriPartial_t4435, ___value___1) + sizeof(Object_t), 0 } ,
	{ 1201, 8317, 0, 0 } ,
	{ 1202, 8317, 0, 0 } ,
	{ 1203, 8317, 0, 0 } ,
	{ 1204, 8317, 0, 0 } ,
	{ 1205, 8334, offsetof(U3CPrivateImplementationDetailsU3E_t4440_StaticFields, ___U24U24fieldU2D1_0), 0 } ,
	{ 1206, 8335, offsetof(U3CPrivateImplementationDetailsU3E_t4440_StaticFields, ___U24U24fieldU2D2_1), 0 } ,
	{ 1207, 8336, offsetof(U3CPrivateImplementationDetailsU3E_t4440_StaticFields, ___U24U24fieldU2D3_2), 0 } ,
	{ 1208, 8336, offsetof(U3CPrivateImplementationDetailsU3E_t4440_StaticFields, ___U24U24fieldU2D4_3), 0 } ,
};
#ifdef __clang__
#pragma clang diagnostic pop
#endif
static const Il2CppFieldDefaultValue s_DefaultValues[670] = 
{
	{ 7, 1, 0 },
	{ 8, 1, 13 },
	{ 29, 14, 24 },
	{ 71, 14, 28 },
	{ 72, 14, 32 },
	{ 73, 14, 36 },
	{ 84, 14, 40 },
	{ 85, 14, 44 },
	{ 98, 14, 48 },
	{ 99, 14, 52 },
	{ 100, 14, 56 },
	{ 102, 14, 60 },
	{ 103, 14, 64 },
	{ 104, 14, 68 },
	{ 105, 14, 72 },
	{ 112, 14, 76 },
	{ 113, 14, 80 },
	{ 114, 14, 84 },
	{ 115, 14, 88 },
	{ 116, 14, 92 },
	{ 117, 14, 96 },
	{ 118, 14, 100 },
	{ 119, 14, 104 },
	{ 120, 14, 108 },
	{ 121, 14, 112 },
	{ 122, 14, 116 },
	{ 123, 14, 120 },
	{ 124, 14, 124 },
	{ 125, 14, 128 },
	{ 126, 14, 132 },
	{ 127, 14, 136 },
	{ 128, 14, 140 },
	{ 129, 14, 144 },
	{ 130, 14, 148 },
	{ 131, 14, 152 },
	{ 132, 14, 156 },
	{ 133, 14, 160 },
	{ 134, 14, 164 },
	{ 135, 14, 168 },
	{ 136, 14, 172 },
	{ 137, 14, 176 },
	{ 138, 14, 180 },
	{ 139, 14, 184 },
	{ 140, 14, 188 },
	{ 141, 14, 192 },
	{ 142, 14, 196 },
	{ 152, 14, 200 },
	{ 153, 14, 204 },
	{ 154, 14, 208 },
	{ 155, 14, 212 },
	{ 156, 14, 216 },
	{ 157, 14, 220 },
	{ 158, 14, 224 },
	{ 159, 14, 228 },
	{ 160, 14, 232 },
	{ 161, 14, 236 },
	{ 162, 14, 240 },
	{ 163, 14, 244 },
	{ 164, 14, 248 },
	{ 165, 14, 252 },
	{ 166, 14, 256 },
	{ 167, 14, 260 },
	{ 168, 14, 264 },
	{ 169, 14, 268 },
	{ 170, 14, 272 },
	{ 171, 14, 276 },
	{ 172, 14, 280 },
	{ 173, 14, 284 },
	{ 174, 14, 288 },
	{ 175, 14, 292 },
	{ 176, 14, 296 },
	{ 178, 14, 300 },
	{ 179, 14, 304 },
	{ 180, 14, 308 },
	{ 182, 14, 312 },
	{ 183, 14, 316 },
	{ 184, 14, 320 },
	{ 185, 14, 324 },
	{ 186, 14, 328 },
	{ 187, 14, 332 },
	{ 188, 14, 336 },
	{ 189, 14, 340 },
	{ 190, 14, 344 },
	{ 191, 14, 348 },
	{ 192, 14, 352 },
	{ 193, 14, 356 },
	{ 194, 14, 360 },
	{ 195, 14, 364 },
	{ 247, 14, 368 },
	{ 248, 14, 372 },
	{ 249, 14, 376 },
	{ 250, 14, 380 },
	{ 251, 14, 384 },
	{ 252, 14, 388 },
	{ 253, 14, 392 },
	{ 254, 14, 396 },
	{ 255, 14, 400 },
	{ 256, 14, 404 },
	{ 257, 14, 408 },
	{ 258, 14, 412 },
	{ 259, 14, 416 },
	{ 260, 14, 420 },
	{ 261, 14, 424 },
	{ 262, 14, 428 },
	{ 263, 14, 432 },
	{ 264, 14, 436 },
	{ 265, 14, 440 },
	{ 266, 14, 444 },
	{ 267, 14, 448 },
	{ 268, 14, 452 },
	{ 269, 14, 456 },
	{ 270, 14, 460 },
	{ 271, 14, 464 },
	{ 272, 14, 468 },
	{ 273, 14, 472 },
	{ 274, 14, 476 },
	{ 275, 14, 480 },
	{ 276, 14, 484 },
	{ 277, 14, 488 },
	{ 278, 14, 492 },
	{ 279, 14, 496 },
	{ 280, 14, 500 },
	{ 281, 14, 504 },
	{ 282, 14, 508 },
	{ 283, 14, 512 },
	{ 284, 14, 516 },
	{ 285, 14, 520 },
	{ 286, 14, 524 },
	{ 287, 14, 528 },
	{ 288, 14, 532 },
	{ 289, 14, 536 },
	{ 290, 14, 540 },
	{ 291, 14, 544 },
	{ 292, 14, 548 },
	{ 293, 14, 552 },
	{ 295, 14, 556 },
	{ 296, 14, 560 },
	{ 297, 14, 564 },
	{ 298, 14, 568 },
	{ 299, 14, 572 },
	{ 300, 14, 576 },
	{ 301, 14, 580 },
	{ 302, 14, 584 },
	{ 303, 14, 588 },
	{ 304, 14, 592 },
	{ 306, 14, 596 },
	{ 307, 14, 600 },
	{ 308, 14, 604 },
	{ 309, 14, 608 },
	{ 310, 14, 612 },
	{ 312, 14, 616 },
	{ 313, 14, 620 },
	{ 314, 14, 624 },
	{ 315, 14, 628 },
	{ 316, 14, 632 },
	{ 317, 14, 636 },
	{ 318, 14, 640 },
	{ 319, 14, 644 },
	{ 320, 14, 648 },
	{ 321, 14, 652 },
	{ 322, 14, 656 },
	{ 323, 14, 660 },
	{ 324, 14, 664 },
	{ 325, 14, 668 },
	{ 326, 14, 672 },
	{ 327, 14, 676 },
	{ 328, 14, 680 },
	{ 329, 14, 684 },
	{ 330, 14, 688 },
	{ 331, 14, 692 },
	{ 332, 14, 696 },
	{ 333, 14, 700 },
	{ 334, 14, 704 },
	{ 335, 14, 708 },
	{ 336, 14, 712 },
	{ 337, 14, 716 },
	{ 338, 14, 720 },
	{ 339, 14, 724 },
	{ 340, 14, 728 },
	{ 341, 14, 732 },
	{ 342, 14, 736 },
	{ 343, 14, 740 },
	{ 344, 14, 744 },
	{ 345, 14, 748 },
	{ 346, 14, 752 },
	{ 347, 14, 756 },
	{ 348, 14, 760 },
	{ 349, 14, 764 },
	{ 350, 14, 768 },
	{ 351, 14, 772 },
	{ 352, 14, 776 },
	{ 353, 14, 780 },
	{ 354, 14, 784 },
	{ 356, 14, 788 },
	{ 357, 14, 792 },
	{ 358, 14, 796 },
	{ 360, 14, 800 },
	{ 361, 14, 804 },
	{ 362, 14, 808 },
	{ 363, 14, 812 },
	{ 364, 14, 816 },
	{ 365, 14, 820 },
	{ 374, 14, 824 },
	{ 375, 14, 828 },
	{ 376, 14, 832 },
	{ 377, 14, 836 },
	{ 414, 14, 840 },
	{ 415, 14, 844 },
	{ 416, 14, 848 },
	{ 466, 14, 852 },
	{ 467, 14, 856 },
	{ 468, 14, 860 },
	{ 469, 14, 864 },
	{ 470, 14, 868 },
	{ 471, 14, 872 },
	{ 472, 14, 876 },
	{ 473, 14, 880 },
	{ 474, 14, 884 },
	{ 475, 14, 888 },
	{ 476, 14, 892 },
	{ 477, 14, 896 },
	{ 478, 14, 900 },
	{ 479, 14, 904 },
	{ 480, 14, 908 },
	{ 481, 14, 912 },
	{ 482, 14, 916 },
	{ 483, 14, 920 },
	{ 484, 14, 924 },
	{ 485, 14, 928 },
	{ 486, 14, 932 },
	{ 487, 14, 936 },
	{ 488, 14, 940 },
	{ 489, 14, 944 },
	{ 490, 14, 948 },
	{ 491, 14, 952 },
	{ 492, 14, 956 },
	{ 493, 14, 960 },
	{ 494, 14, 964 },
	{ 495, 14, 968 },
	{ 496, 14, 972 },
	{ 497, 14, 976 },
	{ 498, 14, 980 },
	{ 499, 14, 984 },
	{ 500, 14, 988 },
	{ 501, 14, 992 },
	{ 502, 14, 996 },
	{ 504, 14, 1000 },
	{ 505, 14, 1004 },
	{ 506, 14, 1008 },
	{ 507, 14, 1012 },
	{ 508, 14, 1016 },
	{ 509, 14, 1020 },
	{ 510, 14, 1024 },
	{ 511, 14, 1028 },
	{ 512, 14, 1032 },
	{ 557, 14, 1036 },
	{ 558, 14, 1040 },
	{ 559, 14, 1044 },
	{ 560, 14, 1048 },
	{ 561, 14, 1052 },
	{ 562, 14, 1056 },
	{ 563, 14, 1060 },
	{ 564, 14, 1064 },
	{ 565, 14, 1068 },
	{ 566, 14, 1072 },
	{ 567, 14, 1076 },
	{ 568, 14, 1080 },
	{ 569, 14, 1084 },
	{ 570, 14, 1088 },
	{ 571, 14, 1092 },
	{ 572, 14, 1096 },
	{ 573, 14, 1100 },
	{ 574, 14, 1104 },
	{ 575, 14, 1108 },
	{ 576, 14, 1112 },
	{ 577, 14, 1116 },
	{ 578, 14, 1120 },
	{ 579, 14, 1124 },
	{ 580, 14, 1128 },
	{ 581, 14, 1132 },
	{ 582, 14, 1136 },
	{ 583, 14, 1140 },
	{ 584, 14, 1144 },
	{ 585, 14, 1148 },
	{ 586, 14, 1152 },
	{ 587, 14, 1156 },
	{ 588, 14, 1160 },
	{ 589, 14, 1164 },
	{ 590, 14, 1168 },
	{ 591, 14, 1172 },
	{ 592, 14, 1176 },
	{ 593, 14, 1180 },
	{ 594, 14, 1184 },
	{ 595, 14, 1188 },
	{ 596, 14, 1192 },
	{ 597, 14, 1196 },
	{ 598, 14, 1200 },
	{ 599, 14, 1204 },
	{ 600, 14, 1208 },
	{ 601, 14, 1212 },
	{ 602, 14, 1216 },
	{ 697, 14, 1220 },
	{ 698, 14, 1224 },
	{ 751, 14, 1228 },
	{ 752, 14, 1232 },
	{ 753, 14, 1236 },
	{ 754, 14, 1240 },
	{ 830, 14, 1244 },
	{ 831, 14, 1248 },
	{ 832, 14, 1252 },
	{ 833, 14, 1256 },
	{ 834, 14, 1260 },
	{ 835, 14, 1264 },
	{ 836, 14, 1268 },
	{ 837, 14, 1272 },
	{ 838, 14, 1276 },
	{ 839, 14, 1280 },
	{ 840, 14, 1284 },
	{ 841, 14, 1288 },
	{ 842, 14, 1292 },
	{ 843, 14, 1296 },
	{ 844, 14, 1300 },
	{ 845, 14, 1304 },
	{ 846, 14, 1308 },
	{ 847, 14, 1312 },
	{ 848, 14, 1316 },
	{ 849, 14, 1320 },
	{ 850, 14, 1324 },
	{ 867, 14, 1328 },
	{ 868, 14, 1332 },
	{ 869, 14, 1336 },
	{ 870, 14, 1340 },
	{ 871, 14, 1344 },
	{ 873, 14, 1348 },
	{ 874, 14, 1352 },
	{ 875, 14, 1356 },
	{ 876, 14, 1360 },
	{ 877, 14, 1364 },
	{ 878, 14, 1368 },
	{ 879, 14, 1372 },
	{ 880, 14, 1376 },
	{ 883, 14, 1380 },
	{ 884, 14, 1384 },
	{ 885, 14, 1388 },
	{ 886, 14, 1392 },
	{ 887, 14, 1396 },
	{ 894, 14, 1400 },
	{ 895, 14, 1404 },
	{ 897, 14, 1408 },
	{ 898, 14, 1412 },
	{ 899, 14, 1416 },
	{ 900, 14, 1420 },
	{ 901, 14, 1424 },
	{ 902, 14, 1428 },
	{ 903, 14, 1432 },
	{ 904, 14, 1436 },
	{ 907, 14, 1440 },
	{ 908, 14, 1444 },
	{ 909, 14, 1448 },
	{ 910, 14, 1452 },
	{ 911, 14, 1456 },
	{ 912, 14, 1460 },
	{ 913, 14, 1464 },
	{ 914, 14, 1468 },
	{ 915, 14, 1472 },
	{ 916, 14, 1476 },
	{ 917, 1, 1480 },
	{ 918, 1, 1493 },
	{ 970, 14, 1514 },
	{ 971, 14, 1518 },
	{ 972, 14, 1522 },
	{ 973, 14, 1526 },
	{ 974, 14, 1530 },
	{ 975, 14, 1534 },
	{ 976, 14, 1538 },
	{ 977, 14, 1542 },
	{ 978, 14, 1546 },
	{ 979, 14, 1550 },
	{ 980, 14, 1554 },
	{ 981, 14, 1558 },
	{ 982, 14, 1562 },
	{ 983, 14, 1566 },
	{ 984, 14, 1570 },
	{ 985, 14, 1574 },
	{ 986, 14, 1578 },
	{ 987, 14, 1582 },
	{ 988, 14, 1586 },
	{ 989, 14, 1590 },
	{ 990, 14, 1594 },
	{ 991, 14, 1598 },
	{ 992, 14, 1602 },
	{ 1000, 14, 1606 },
	{ 1001, 14, 1610 },
	{ 1002, 14, 1614 },
	{ 1003, 14, 1618 },
	{ 1004, 14, 1622 },
	{ 1005, 14, 1626 },
	{ 1006, 14, 1630 },
	{ 1007, 14, 1634 },
	{ 1008, 14, 1638 },
	{ 1009, 14, 1642 },
	{ 1010, 14, 1646 },
	{ 1011, 14, 1650 },
	{ 1012, 14, 1654 },
	{ 1013, 14, 1658 },
	{ 1014, 14, 1662 },
	{ 1015, 1, 1666 },
	{ 1016, 1, 1679 },
	{ 1017, 14, 1692 },
	{ 1021, 14, 1696 },
	{ 1022, 14, 1700 },
	{ 1023, 14, 1704 },
	{ 1024, 14, 1708 },
	{ 1025, 14, 1712 },
	{ 1026, 14, 1716 },
	{ 1027, 14, 1720 },
	{ 1028, 14, 1724 },
	{ 1029, 14, 1728 },
	{ 1030, 14, 1732 },
	{ 1032, 14, 1736 },
	{ 1033, 14, 1740 },
	{ 1034, 14, 1744 },
	{ 1035, 14, 1748 },
	{ 1036, 14, 1752 },
	{ 1037, 14, 1756 },
	{ 1039, 14, 1760 },
	{ 1040, 14, 1764 },
	{ 1041, 14, 1768 },
	{ 1043, 14, 1772 },
	{ 1044, 14, 1776 },
	{ 1045, 14, 1780 },
	{ 1052, 1, 1784 },
	{ 1053, 1, 1797 },
	{ 1058, 14, 1823 },
	{ 1059, 14, 1827 },
	{ 1060, 14, 1831 },
	{ 1062, 14, 1835 },
	{ 1063, 14, 1839 },
	{ 1064, 14, 1843 },
	{ 1065, 14, 1847 },
	{ 1066, 14, 1851 },
	{ 1067, 14, 1855 },
	{ 1068, 14, 1859 },
	{ 1069, 14, 1863 },
	{ 1070, 14, 1867 },
	{ 1071, 14, 1871 },
	{ 1072, 14, 1875 },
	{ 1073, 14, 1879 },
	{ 1074, 14, 1883 },
	{ 1075, 14, 1887 },
	{ 1077, 14, 1891 },
	{ 1078, 14, 1895 },
	{ 1079, 14, 1899 },
	{ 1080, 14, 1903 },
	{ 1081, 14, 1907 },
	{ 1082, 14, 1911 },
	{ 1128, 14, 1915 },
	{ 1129, 14, 1919 },
	{ 1130, 14, 1923 },
	{ 1131, 14, 1927 },
	{ 1132, 14, 1931 },
	{ 1133, 14, 1935 },
	{ 1134, 14, 1939 },
	{ 1135, 14, 1943 },
	{ 1136, 14, 1947 },
	{ 1138, 3764, 1951 },
	{ 1139, 3764, 1953 },
	{ 1140, 3764, 1955 },
	{ 1141, 3764, 1957 },
	{ 1142, 3764, 1959 },
	{ 1143, 3764, 1961 },
	{ 1144, 3764, 1963 },
	{ 1145, 3764, 1965 },
	{ 1146, 3764, 1967 },
	{ 1147, 3764, 1969 },
	{ 1148, 3764, 1971 },
	{ 1149, 3764, 1973 },
	{ 1150, 3764, 1975 },
	{ 1151, 3764, 1977 },
	{ 1152, 3764, 1979 },
	{ 1153, 3764, 1981 },
	{ 1154, 3764, 1983 },
	{ 1155, 3764, 1985 },
	{ 1156, 3764, 1987 },
	{ 1157, 3764, 1989 },
	{ 1158, 3764, 1991 },
	{ 1159, 3764, 1993 },
	{ 1160, 3764, 1995 },
	{ 1161, 3764, 1997 },
	{ 1162, 3764, 1999 },
	{ 1164, 3764, 2001 },
	{ 1165, 3764, 2003 },
	{ 1166, 3764, 2005 },
	{ 1167, 3764, 2007 },
	{ 1168, 3764, 2009 },
	{ 1170, 3764, 2011 },
	{ 1171, 3764, 2013 },
	{ 1172, 3764, 2015 },
	{ 1173, 3764, 2017 },
	{ 1174, 3764, 2019 },
	{ 1175, 3764, 2021 },
	{ 1176, 3764, 2023 },
	{ 1177, 3764, 2025 },
	{ 1178, 3764, 2027 },
	{ 1179, 3764, 2029 },
	{ 1191, 3764, 2031 },
	{ 1192, 3764, 2033 },
	{ 1193, 3764, 2035 },
	{ 1194, 3764, 2037 },
	{ 1195, 3764, 2039 },
	{ 1196, 3764, 2041 },
	{ 1197, 3764, 2043 },
	{ 1198, 3764, 2045 },
	{ 1199, 3764, 2047 },
	{ 1200, 3764, 2049 },
	{ 1201, 3764, 2051 },
	{ 1202, 3764, 2053 },
	{ 1203, 3764, 2055 },
	{ 1204, 3764, 2057 },
	{ 1205, 3764, 2059 },
	{ 1206, 3764, 2061 },
	{ 1207, 3764, 2063 },
	{ 1208, 3764, 2065 },
	{ 1209, 3764, 2067 },
	{ 1210, 3764, 2069 },
	{ 1211, 3764, 2071 },
	{ 1212, 3764, 2073 },
	{ 1213, 3764, 2075 },
	{ 1214, 3764, 2077 },
	{ 1215, 3764, 2079 },
	{ 1216, 3764, 2081 },
	{ 1217, 3764, 2083 },
	{ 1218, 3764, 2085 },
	{ 1219, 3764, 2087 },
	{ 1220, 3764, 2089 },
	{ 1221, 3764, 2091 },
	{ 1222, 3764, 2093 },
	{ 1223, 3764, 2095 },
	{ 1224, 3764, 2097 },
	{ 1225, 3764, 2099 },
	{ 1226, 3764, 2101 },
	{ 1227, 3764, 2103 },
	{ 1228, 3764, 2105 },
	{ 1229, 3764, 2107 },
	{ 1230, 3764, 2109 },
	{ 1231, 3764, 2111 },
	{ 1232, 3764, 2113 },
	{ 1233, 3764, 2115 },
	{ 1234, 3764, 2117 },
	{ 1235, 3764, 2119 },
	{ 1236, 3764, 2121 },
	{ 1237, 3764, 2123 },
	{ 1238, 3764, 2125 },
	{ 1239, 3764, 2127 },
	{ 1240, 3764, 2129 },
	{ 1241, 3764, 2131 },
	{ 1242, 3764, 2133 },
	{ 1243, 3764, 2135 },
	{ 1244, 3764, 2137 },
	{ 1245, 3764, 2139 },
	{ 1246, 3764, 2141 },
	{ 1247, 3764, 2143 },
	{ 1248, 3764, 2145 },
	{ 1249, 3764, 2147 },
	{ 1250, 3764, 2149 },
	{ 1251, 3764, 2151 },
	{ 1252, 3764, 2153 },
	{ 1253, 3764, 2155 },
	{ 1254, 3764, 2157 },
	{ 1255, 3764, 2159 },
	{ 1256, 3764, 2161 },
	{ 1257, 3764, 2163 },
	{ 1258, 3764, 2165 },
	{ 1259, 3764, 2167 },
	{ 1260, 3764, 2169 },
	{ 1261, 3764, 2171 },
	{ 1262, 3764, 2173 },
	{ 1263, 3764, 2175 },
	{ 1264, 3764, 2177 },
	{ 1265, 3764, 2179 },
	{ 1266, 3764, 2181 },
	{ 1267, 3764, 2183 },
	{ 1268, 3764, 2185 },
	{ 1269, 3764, 2187 },
	{ 1270, 3764, 2189 },
	{ 1271, 3764, 2191 },
	{ 1272, 3764, 2193 },
	{ 1273, 3764, 2195 },
	{ 1274, 3764, 2197 },
	{ 1275, 3764, 2199 },
	{ 1276, 3764, 2201 },
	{ 1277, 3764, 2203 },
	{ 1278, 3764, 2205 },
	{ 1279, 3764, 2207 },
	{ 1280, 3764, 2209 },
	{ 1281, 3764, 2211 },
	{ 1282, 3764, 2213 },
	{ 1283, 3764, 2215 },
	{ 1284, 3764, 2217 },
	{ 1285, 3764, 2219 },
	{ 1286, 3764, 2221 },
	{ 1287, 3764, 2223 },
	{ 1288, 3764, 2225 },
	{ 1289, 3764, 2227 },
	{ 1290, 3764, 2229 },
	{ 1291, 3764, 2231 },
	{ 1292, 3764, 2233 },
	{ 1293, 3764, 2235 },
	{ 1294, 3764, 2237 },
	{ 1295, 3764, 2239 },
	{ 1296, 3764, 2241 },
	{ 1297, 3764, 2243 },
	{ 1298, 3764, 2245 },
	{ 1299, 3764, 2247 },
	{ 1300, 3764, 2249 },
	{ 1301, 3764, 2251 },
	{ 1302, 3764, 2253 },
	{ 1303, 3764, 2255 },
	{ 1304, 3764, 2257 },
	{ 1305, 3764, 2259 },
	{ 1306, 3764, 2261 },
	{ 1307, 3764, 2263 },
	{ 1308, 3764, 2265 },
	{ 1309, 3764, 2267 },
	{ 1310, 3764, 2269 },
	{ 1311, 3764, 2271 },
	{ 1312, 3764, 2273 },
	{ 1313, 3764, 2275 },
	{ 1314, 3764, 2277 },
	{ 1315, 3764, 2279 },
	{ 1316, 3764, 2281 },
	{ 1317, 3764, 2283 },
	{ 1318, 3764, 2285 },
	{ 1319, 3764, 2287 },
	{ 1320, 3764, 2289 },
	{ 1321, 3764, 2291 },
	{ 1322, 3764, 2293 },
	{ 1323, 3764, 2295 },
	{ 1324, 3764, 2297 },
	{ 1325, 3764, 2299 },
	{ 1326, 3764, 2301 },
	{ 1327, 3764, 2303 },
	{ 1328, 3764, 2305 },
	{ 1329, 3764, 2307 },
	{ 1330, 3764, 2309 },
	{ 1331, 3764, 2311 },
	{ 1332, 3764, 2313 },
	{ 1333, 3764, 2315 },
	{ 1334, 3764, 2317 },
	{ 1335, 3764, 2319 },
	{ 1358, 14, 2321 },
	{ 1359, 14, 2325 },
	{ 1360, 14, 2329 },
	{ 1435, 14, 2333 },
	{ 1474, 14, 2337 },
	{ 1475, 14, 2341 },
	{ 1476, 14, 2345 },
	{ 1477, 14, 2349 },
	{ 1478, 14, 2353 },
	{ 1480, 14, 2357 },
	{ 1481, 14, 2361 },
	{ 1482, 14, 2365 },
	{ 1490, 14, 2369 },
	{ 1491, 14, 2373 },
	{ 1492, 14, 2377 },
	{ 1493, 14, 2381 },
	{ 1494, 8328, 2385 },
	{ 1495, 8330, 2401 },
	{ 1496, 8332, 2529 },
	{ 1497, 8332, 2541 },
};
static const uint8_t s_DefaultValueDataTable[2553] = 
{
	0x09,
	0x00,
	0x00,
	0x00,
	0x44,
	0x61,
	0x74,
	0x61,
	0x41,
	0x72,
	0x72,
	0x61,
	0x79,
	0x07,
	0x00,
	0x00,
	0x00,
	0x76,
	0x65,
	0x72,
	0x73,
	0x69,
	0x6F,
	0x6E,
	0x10,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x0F,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x12,
	0x00,
	0x00,
	0x00,
	0x13,
	0x00,
	0x00,
	0x00,
	0x15,
	0x00,
	0x00,
	0x00,
	0x16,
	0x00,
	0x00,
	0x00,
	0x17,
	0x00,
	0x00,
	0x00,
	0x18,
	0x00,
	0x00,
	0x00,
	0x19,
	0x00,
	0x00,
	0x00,
	0x1A,
	0x00,
	0x00,
	0x00,
	0x1C,
	0x00,
	0x00,
	0x00,
	0x1D,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x16,
	0x00,
	0x00,
	0x00,
	0x29,
	0x00,
	0x00,
	0x00,
	0x4D,
	0x00,
	0x00,
	0x00,
	0xFF,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0xE8,
	0x03,
	0x00,
	0x00,
	0xE8,
	0x04,
	0x00,
	0x00,
	0xE9,
	0x04,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0x04,
	0x00,
	0x00,
	0x00,
	0x2B,
	0x00,
	0x00,
	0x00,
	0x2C,
	0x00,
	0x00,
	0x00,
	0x32,
	0x00,
	0x00,
	0x00,
	0x33,
	0x00,
	0x00,
	0x00,
	0x3A,
	0x00,
	0x00,
	0x00,
	0x3B,
	0x00,
	0x00,
	0x00,
	0x3C,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x1D,
	0x27,
	0x00,
	0x00,
	0x40,
	0x27,
	0x00,
	0x00,
	0x3F,
	0x27,
	0x00,
	0x00,
	0x41,
	0x27,
	0x00,
	0x00,
	0x35,
	0x27,
	0x00,
	0x00,
	0x45,
	0x27,
	0x00,
	0x00,
	0x4D,
	0x27,
	0x00,
	0x00,
	0x46,
	0x27,
	0x00,
	0x00,
	0x37,
	0x27,
	0x00,
	0x00,
	0x75,
	0x27,
	0x00,
	0x00,
	0x1E,
	0x27,
	0x00,
	0x00,
	0x50,
	0x27,
	0x00,
	0x00,
	0xF9,
	0x2A,
	0x00,
	0x00,
	0x51,
	0x27,
	0x00,
	0x00,
	0x34,
	0x27,
	0x00,
	0x00,
	0x14,
	0x27,
	0x00,
	0x00,
	0x26,
	0x27,
	0x00,
	0x00,
	0xE5,
	0x03,
	0x00,
	0x00,
	0x48,
	0x27,
	0x00,
	0x00,
	0x38,
	0x27,
	0x00,
	0x00,
	0x42,
	0x27,
	0x00,
	0x00,
	0x44,
	0x27,
	0x00,
	0x00,
	0x43,
	0x27,
	0x00,
	0x00,
	0x47,
	0x27,
	0x00,
	0x00,
	0xFC,
	0x2A,
	0x00,
	0x00,
	0xFB,
	0x2A,
	0x00,
	0x00,
	0x49,
	0x27,
	0x00,
	0x00,
	0x6D,
	0x27,
	0x00,
	0x00,
	0x36,
	0x27,
	0x00,
	0x00,
	0xE3,
	0x03,
	0x00,
	0x00,
	0x3D,
	0x27,
	0x00,
	0x00,
	0x53,
	0x27,
	0x00,
	0x00,
	0x3E,
	0x27,
	0x00,
	0x00,
	0x3B,
	0x27,
	0x00,
	0x00,
	0x3A,
	0x27,
	0x00,
	0x00,
	0x39,
	0x27,
	0x00,
	0x00,
	0x4A,
	0x27,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0x3C,
	0x27,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x6B,
	0x27,
	0x00,
	0x00,
	0x4C,
	0x27,
	0x00,
	0x00,
	0x28,
	0x27,
	0x00,
	0x00,
	0xFA,
	0x2A,
	0x00,
	0x00,
	0x7D,
	0x27,
	0x00,
	0x00,
	0x6C,
	0x27,
	0x00,
	0x00,
	0x33,
	0x27,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x29,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x7F,
	0xFF,
	0xFF,
	0xFF,
	0xFB,
	0xFF,
	0xFF,
	0xFF,
	0x01,
	0x10,
	0x00,
	0x00,
	0x02,
	0x10,
	0x00,
	0x00,
	0x03,
	0x10,
	0x00,
	0x00,
	0x04,
	0x10,
	0x00,
	0x00,
	0x05,
	0x10,
	0x00,
	0x00,
	0x06,
	0x10,
	0x00,
	0x00,
	0x07,
	0x10,
	0x00,
	0x00,
	0x08,
	0x10,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0x7F,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x0F,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x12,
	0x00,
	0x00,
	0x00,
	0x13,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x14,
	0x00,
	0x00,
	0x00,
	0x15,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x70,
	0x00,
	0x00,
	0x10,
	0x70,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x6E,
	0x00,
	0x00,
	0x00,
	0x78,
	0x00,
	0x00,
	0x00,
	0x7D,
	0x00,
	0x00,
	0x00,
	0x96,
	0x00,
	0x00,
	0x00,
	0xC8,
	0x00,
	0x00,
	0x00,
	0xCA,
	0x00,
	0x00,
	0x00,
	0xD4,
	0x00,
	0x00,
	0x00,
	0xD5,
	0x00,
	0x00,
	0x00,
	0xD7,
	0x00,
	0x00,
	0x00,
	0xDC,
	0x00,
	0x00,
	0x00,
	0xDD,
	0x00,
	0x00,
	0x00,
	0xE2,
	0x00,
	0x00,
	0x00,
	0xE3,
	0x00,
	0x00,
	0x00,
	0xE6,
	0x00,
	0x00,
	0x00,
	0xEA,
	0x00,
	0x00,
	0x00,
	0xFA,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x00,
	0x00,
	0x4B,
	0x01,
	0x00,
	0x00,
	0x4C,
	0x01,
	0x00,
	0x00,
	0x5E,
	0x01,
	0x00,
	0x00,
	0xA5,
	0x01,
	0x00,
	0x00,
	0xA9,
	0x01,
	0x00,
	0x00,
	0xAA,
	0x01,
	0x00,
	0x00,
	0xC2,
	0x01,
	0x00,
	0x00,
	0xC3,
	0x01,
	0x00,
	0x00,
	0xC4,
	0x01,
	0x00,
	0x00,
	0xF4,
	0x01,
	0x00,
	0x00,
	0xF5,
	0x01,
	0x00,
	0x00,
	0xF6,
	0x01,
	0x00,
	0x00,
	0xF7,
	0x01,
	0x00,
	0x00,
	0x12,
	0x02,
	0x00,
	0x00,
	0x14,
	0x02,
	0x00,
	0x00,
	0x26,
	0x02,
	0x00,
	0x00,
	0x27,
	0x02,
	0x00,
	0x00,
	0x28,
	0x02,
	0x00,
	0x00,
	0x29,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x64,
	0x00,
	0x00,
	0x00,
	0x65,
	0x00,
	0x00,
	0x00,
	0xC8,
	0x00,
	0x00,
	0x00,
	0xC9,
	0x00,
	0x00,
	0x00,
	0xCA,
	0x00,
	0x00,
	0x00,
	0xCB,
	0x00,
	0x00,
	0x00,
	0xCC,
	0x00,
	0x00,
	0x00,
	0xCD,
	0x00,
	0x00,
	0x00,
	0xCE,
	0x00,
	0x00,
	0x00,
	0x2C,
	0x01,
	0x00,
	0x00,
	0x2C,
	0x01,
	0x00,
	0x00,
	0x2D,
	0x01,
	0x00,
	0x00,
	0x2D,
	0x01,
	0x00,
	0x00,
	0x2E,
	0x01,
	0x00,
	0x00,
	0x2E,
	0x01,
	0x00,
	0x00,
	0x2F,
	0x01,
	0x00,
	0x00,
	0x2F,
	0x01,
	0x00,
	0x00,
	0x30,
	0x01,
	0x00,
	0x00,
	0x31,
	0x01,
	0x00,
	0x00,
	0x32,
	0x01,
	0x00,
	0x00,
	0x33,
	0x01,
	0x00,
	0x00,
	0x33,
	0x01,
	0x00,
	0x00,
	0x90,
	0x01,
	0x00,
	0x00,
	0x91,
	0x01,
	0x00,
	0x00,
	0x92,
	0x01,
	0x00,
	0x00,
	0x93,
	0x01,
	0x00,
	0x00,
	0x94,
	0x01,
	0x00,
	0x00,
	0x95,
	0x01,
	0x00,
	0x00,
	0x96,
	0x01,
	0x00,
	0x00,
	0x97,
	0x01,
	0x00,
	0x00,
	0x98,
	0x01,
	0x00,
	0x00,
	0x99,
	0x01,
	0x00,
	0x00,
	0x9A,
	0x01,
	0x00,
	0x00,
	0x9B,
	0x01,
	0x00,
	0x00,
	0x9C,
	0x01,
	0x00,
	0x00,
	0x9D,
	0x01,
	0x00,
	0x00,
	0x9E,
	0x01,
	0x00,
	0x00,
	0x9F,
	0x01,
	0x00,
	0x00,
	0xA0,
	0x01,
	0x00,
	0x00,
	0xA1,
	0x01,
	0x00,
	0x00,
	0xF4,
	0x01,
	0x00,
	0x00,
	0xF5,
	0x01,
	0x00,
	0x00,
	0xF6,
	0x01,
	0x00,
	0x00,
	0xF7,
	0x01,
	0x00,
	0x00,
	0xF8,
	0x01,
	0x00,
	0x00,
	0xF9,
	0x01,
	0x00,
	0x00,
	0x30,
	0x00,
	0x00,
	0x00,
	0xC0,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x0F,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x11,
	0x00,
	0x00,
	0x00,
	0x12,
	0x00,
	0x00,
	0x00,
	0x13,
	0x00,
	0x00,
	0x00,
	0x14,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x30,
	0x00,
	0x00,
	0x00,
	0xC0,
	0x00,
	0x00,
	0x00,
	0xF0,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x32,
	0x2E,
	0x35,
	0x2E,
	0x32,
	0x39,
	0x2E,
	0x31,
	0x39,
	0x11,
	0x00,
	0x00,
	0x00,
	0x42,
	0x61,
	0x73,
	0x69,
	0x63,
	0x20,
	0x43,
	0x6F,
	0x6E,
	0x73,
	0x74,
	0x72,
	0x61,
	0x69,
	0x6E,
	0x74,
	0x73,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x06,
	0x00,
	0x00,
	0x00,
	0x07,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x0A,
	0x00,
	0x00,
	0x00,
	0x0B,
	0x00,
	0x00,
	0x00,
	0x0C,
	0x00,
	0x00,
	0x00,
	0x0D,
	0x00,
	0x00,
	0x00,
	0x0E,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x32,
	0x2E,
	0x35,
	0x2E,
	0x32,
	0x39,
	0x2E,
	0x31,
	0x35,
	0x09,
	0x00,
	0x00,
	0x00,
	0x4B,
	0x65,
	0x79,
	0x20,
	0x55,
	0x73,
	0x61,
	0x67,
	0x65,
	0xFF,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x05,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x32,
	0x2E,
	0x35,
	0x2E,
	0x32,
	0x39,
	0x2E,
	0x31,
	0x34,
	0x16,
	0x00,
	0x00,
	0x00,
	0x53,
	0x75,
	0x62,
	0x6A,
	0x65,
	0x63,
	0x74,
	0x20,
	0x4B,
	0x65,
	0x79,
	0x20,
	0x49,
	0x64,
	0x65,
	0x6E,
	0x74,
	0x69,
	0x66,
	0x69,
	0x65,
	0x72,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x80,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x08,
	0x00,
	0x00,
	0xFF,
	0x0F,
	0x00,
	0x00,
	0xFF,
	0xFF,
	0xFF,
	0xFF,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x10,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x00,
	0x00,
	0x40,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x03,
	0x00,
	0x04,
	0x00,
	0x05,
	0x00,
	0x06,
	0x00,
	0x07,
	0x00,
	0x08,
	0x00,
	0x09,
	0x00,
	0x0A,
	0x00,
	0x0B,
	0x00,
	0x0C,
	0x00,
	0x0D,
	0x00,
	0x0E,
	0x00,
	0x0F,
	0x00,
	0x10,
	0x00,
	0x11,
	0x00,
	0x12,
	0x00,
	0x13,
	0x00,
	0x14,
	0x00,
	0x15,
	0x00,
	0x16,
	0x00,
	0x17,
	0x00,
	0x18,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x04,
	0x00,
	0x08,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x03,
	0x00,
	0x04,
	0x00,
	0x05,
	0x00,
	0x06,
	0x00,
	0x07,
	0x00,
	0x08,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x02,
	0x00,
	0x03,
	0x00,
	0x04,
	0x00,
	0x05,
	0x00,
	0x06,
	0x00,
	0x07,
	0x00,
	0x08,
	0x00,
	0x09,
	0x00,
	0x0A,
	0x00,
	0x0B,
	0x00,
	0x0C,
	0x00,
	0x0D,
	0x00,
	0x0E,
	0x00,
	0x0F,
	0x00,
	0x10,
	0x00,
	0x11,
	0x00,
	0x12,
	0x00,
	0x13,
	0x00,
	0x14,
	0x00,
	0x15,
	0x00,
	0x16,
	0x00,
	0x17,
	0x00,
	0x18,
	0x00,
	0x19,
	0x00,
	0x1A,
	0x00,
	0x1B,
	0x00,
	0x1C,
	0x00,
	0x1D,
	0x00,
	0x1E,
	0x00,
	0x1F,
	0x00,
	0x20,
	0x00,
	0x21,
	0x00,
	0x22,
	0x00,
	0x23,
	0x00,
	0x24,
	0x00,
	0x25,
	0x00,
	0x26,
	0x00,
	0x27,
	0x00,
	0x28,
	0x00,
	0x29,
	0x00,
	0x2A,
	0x00,
	0x2B,
	0x00,
	0x2C,
	0x00,
	0x2D,
	0x00,
	0x2E,
	0x00,
	0x2F,
	0x00,
	0x30,
	0x00,
	0x31,
	0x00,
	0x32,
	0x00,
	0x33,
	0x00,
	0x34,
	0x00,
	0x35,
	0x00,
	0x36,
	0x00,
	0x37,
	0x00,
	0x38,
	0x00,
	0x39,
	0x00,
	0x3A,
	0x00,
	0x3B,
	0x00,
	0x3C,
	0x00,
	0x3D,
	0x00,
	0x3E,
	0x00,
	0x3F,
	0x00,
	0x40,
	0x00,
	0x41,
	0x00,
	0x42,
	0x00,
	0x43,
	0x00,
	0x44,
	0x00,
	0x45,
	0x00,
	0x46,
	0x00,
	0x47,
	0x00,
	0x48,
	0x00,
	0x49,
	0x00,
	0x4A,
	0x00,
	0x4B,
	0x00,
	0x4C,
	0x00,
	0x4D,
	0x00,
	0x4E,
	0x00,
	0x4F,
	0x00,
	0x50,
	0x00,
	0x51,
	0x00,
	0x52,
	0x00,
	0x53,
	0x00,
	0x54,
	0x00,
	0x55,
	0x00,
	0x56,
	0x00,
	0x57,
	0x00,
	0x58,
	0x00,
	0x59,
	0x00,
	0x5A,
	0x00,
	0x5B,
	0x00,
	0x5C,
	0x00,
	0x5D,
	0x00,
	0x5E,
	0x00,
	0x5F,
	0x00,
	0x60,
	0x00,
	0x61,
	0x00,
	0x62,
	0x00,
	0x63,
	0x00,
	0x64,
	0x00,
	0x65,
	0x00,
	0x66,
	0x00,
	0x67,
	0x00,
	0x68,
	0x00,
	0x69,
	0x00,
	0x6A,
	0x00,
	0x6B,
	0x00,
	0x6C,
	0x00,
	0x6D,
	0x00,
	0x6E,
	0x00,
	0x6F,
	0x00,
	0x70,
	0x00,
	0x71,
	0x00,
	0x72,
	0x00,
	0x73,
	0x00,
	0x74,
	0x00,
	0x75,
	0x00,
	0x76,
	0x00,
	0x77,
	0x00,
	0x78,
	0x00,
	0x79,
	0x00,
	0x7A,
	0x00,
	0x7B,
	0x00,
	0x7C,
	0x00,
	0x7D,
	0x00,
	0x7E,
	0x00,
	0x7F,
	0x00,
	0x80,
	0x00,
	0x81,
	0x00,
	0x82,
	0x00,
	0x83,
	0x00,
	0x84,
	0x00,
	0x85,
	0x00,
	0x86,
	0x00,
	0x87,
	0x00,
	0x88,
	0x00,
	0x89,
	0x00,
	0x8A,
	0x00,
	0x8B,
	0x00,
	0x8C,
	0x00,
	0x8D,
	0x00,
	0x8E,
	0x00,
	0x8F,
	0x00,
	0x90,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0xFE,
	0x7F,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x04,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x02,
	0x00,
	0x00,
	0x00,
	0x03,
	0x00,
	0x00,
	0x00,
	0x20,
	0x00,
	0x3D,
	0x00,
	0x3B,
	0x00,
	0x2C,
	0x00,
	0x0A,
	0x00,
	0x0D,
	0x00,
	0x09,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x00,
	0x01,
	0x01,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x00,
	0x00,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x01,
	0x00,
	0x01,
	0x00,
	0x00,
	0x00,
	0x2A,
	0x86,
	0x48,
	0x86,
	0xF7,
	0x0D,
	0x01,
	0x09,
	0x01,
	0x00,
	0x00,
	0x00,
	0x2A,
	0x86,
	0x48,
	0x86,
	0xF7,
	0x0D,
	0x01,
	0x07,
	0x02,
	0x00,
	0x00,
	0x00,
};
Il2CppImage g_System_dll_Image = 
{
	 "System.dll" ,
	&g_System_Assembly,
	g_System_Assembly_Types,
	254,
	NULL,
	s_StringTable,
	1209,
	s_FieldTable,
	1498,
	s_DefaultValues,
	670,
	s_DefaultValueDataTable,
	2553,
	101,
	NULL,
	g_System_Assembly_AttributeGenerators,
};
